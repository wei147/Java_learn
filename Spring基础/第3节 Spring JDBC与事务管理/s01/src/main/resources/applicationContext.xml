<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        https://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        https://www.springframework.org/schema/context/spring-context.xsd">
    <!--spring jdbc的底层配置  数据源的设置-->
    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="com.mysql.jdbc.Driver"/>
        <property name="url"
                  value="jdbc:mysql://localhost:3306/imooc-test?useUnicode=true&amp;characterEncoding=gbk&amp;autoReconnect=true&amp;failOverReadOnly=false"/>
        <property name="username" value="root"></property>
        <property name="password" value="1234"></property>
    </bean>
    <!--关键配置  JdbcTemplate提供数据CRUD的API jdbcTemplate-->
    <!--CURE  C(Create):建立 + R(Retrieve):查询 + U(Update):修改 + D(Delete):删除-->
    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref="dataSource"></property>    <!--这里的ref指向的是上面的beanId-->
    </bean>

    <bean id="employeeDao" class="com.imooc.spring.jdbc.dao.EmployeeDao">
        <!--为Dao注入JdbcTempla对象 （只有注入以后具体的业务方法才可以去调用jdbc相应的api完成数据库的增删改查操作）-->
        <property name="jdbcTemplate" ref="jdbcTemplate"></property>
    </bean>

    <bean id="employeeService" class="com.imooc.spring.jdbc.service.EmployeeService">
        <property name="employeeDao" ref="employeeDao"></property>
        <!--关联到事务管理器-->
        <property name="transactionManager" ref="transactionManager"/>
    </bean>

    <!--事务管理器  （控制事务的整体提交和整体回滚）-->
    <!--怎么使用?  在需要事务控制的类里，去注入它 比如EmployeeService中-->
    <bean id="transactionManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">     <!--基于数据源的事务管理器-->
        <property name="dataSource" ref="dataSource"/>
    </bean>
</beans>
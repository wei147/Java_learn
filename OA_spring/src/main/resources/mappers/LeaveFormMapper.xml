<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wei.oa_spring.model.dao.LeaveFormMapper">
  <resultMap id="BaseResultMap" type="com.wei.oa_spring.model.pojo.LeaveForm">
    <id column="form_id" jdbcType="BIGINT" property="formId" />
    <result column="employee_id" jdbcType="BIGINT" property="employeeId" />
    <result column="form_type" jdbcType="INTEGER" property="formType" />
    <result column="start_time" jdbcType="TIMESTAMP" property="startTime" />
    <result column="end_time" jdbcType="TIMESTAMP" property="endTime" />
    <result column="reason" jdbcType="VARCHAR" property="reason" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="state" jdbcType="VARCHAR" property="state" />
  </resultMap>
  <sql id="Base_Column_List">
    form_id, employee_id, form_type, start_time, end_time, reason, create_time, `state`
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from adm_leave_form
    where form_id = #{formId,jdbcType=BIGINT}
  </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from adm_leave_form
    where form_id = #{formId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.wei.oa_spring.model.pojo.LeaveForm">
    insert into adm_leave_form (form_id, employee_id, form_type, 
      start_time, end_time, reason, 
      create_time, `state`)
    values (#{formId,jdbcType=BIGINT}, #{employeeId,jdbcType=BIGINT}, #{formType,jdbcType=INTEGER}, 
      #{startTime,jdbcType=TIMESTAMP}, #{endTime,jdbcType=TIMESTAMP}, #{reason,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{state,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.wei.oa_spring.model.pojo.LeaveForm">
    insert into adm_leave_form
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="formId != null">
        form_id,
      </if>
      <if test="employeeId != null">
        employee_id,
      </if>
      <if test="formType != null">
        form_type,
      </if>
      <if test="startTime != null">
        start_time,
      </if>
      <if test="endTime != null">
        end_time,
      </if>
      <if test="reason != null">
        reason,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="state != null">
        `state`,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="formId != null">
        #{formId,jdbcType=BIGINT},
      </if>
      <if test="employeeId != null">
        #{employeeId,jdbcType=BIGINT},
      </if>
      <if test="formType != null">
        #{formType,jdbcType=INTEGER},
      </if>
      <if test="startTime != null">
        #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null">
        #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="reason != null">
        #{reason,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null">
        #{state,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.wei.oa_spring.model.pojo.LeaveForm">
    update adm_leave_form
    <set>
      <if test="employeeId != null">
        employee_id = #{employeeId,jdbcType=BIGINT},
      </if>
      <if test="formType != null">
        form_type = #{formType,jdbcType=INTEGER},
      </if>
      <if test="startTime != null">
        start_time = #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null">
        end_time = #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="reason != null">
        reason = #{reason,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null">
        `state` = #{state,jdbcType=VARCHAR},
      </if>
    </set>
    where form_id = #{formId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.wei.oa_spring.model.pojo.LeaveForm">
    update adm_leave_form
    set employee_id = #{employeeId,jdbcType=BIGINT},
      form_type = #{formType,jdbcType=INTEGER},
      start_time = #{startTime,jdbcType=TIMESTAMP},
      end_time = #{endTime,jdbcType=TIMESTAMP},
      reason = #{reason,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      `state` = #{state,jdbcType=VARCHAR}
    where form_id = #{formId,jdbcType=BIGINT}
  </update>

  <!--多参数查询 通过Map传递参数查询以及接收结果-->
  <!--查询的是多表的字段，得到的字段也是从多个表获取的。并没有任何哪个实体类能承载全部的字段。所以用map-->
  <select id="selectByParams" parameterType="java.util.Map" resultMap="BaseResultMap">
    SELECT f.*,
           e.`name`,
           d.*
    FROM adm_leave_form f,
         adm_process_flow pf,
         adm_employee e,
         adm_department d
    WHERE f.form_id = pf.form_id
      AND f.employee_id = e.employee_id
      AND e.department_id = d.department_id
      AND pf.state = #{pf_state}
      AND pf.operator_id = #{pf_operator_id}
  </select>

</mapper>
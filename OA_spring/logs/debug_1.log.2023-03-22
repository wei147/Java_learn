[02:06:55:674] [DEBUG] - org.springframework.boot.context.logging.ClasspathLoggingApplicationListener.onApplicationEvent(ClasspathLoggingApplicationListener.java:51) - Application started with classpath: [file:/C:/Program%20Files/Java/jdk1.8.0_202/jre/lib/charsets.jar, file:/C:/Program%20Files/Java/jdk1.8.0_202/jre/lib/deploy.jar, file:/C:/Program%20Files/Java/jdk1.8.0_202/jre/lib/ext/access-bridge-64.jar, file:/C:/Program%20Files/Java/jdk1.8.0_202/jre/lib/ext/cldrdata.jar, file:/C:/Program%20Files/Java/jdk1.8.0_202/jre/lib/ext/dnsns.jar, file:/C:/Program%20Files/Java/jdk1.8.0_202/jre/lib/ext/jaccess.jar, file:/C:/Program%20Files/Java/jdk1.8.0_202/jre/lib/ext/jfxrt.jar, file:/C:/Program%20Files/Java/jdk1.8.0_202/jre/lib/ext/localedata.jar, file:/C:/Program%20Files/Java/jdk1.8.0_202/jre/lib/ext/nashorn.jar, file:/C:/Program%20Files/Java/jdk1.8.0_202/jre/lib/ext/sunec.jar, file:/C:/Program%20Files/Java/jdk1.8.0_202/jre/lib/ext/sunjce_provider.jar, file:/C:/Program%20Files/Java/jdk1.8.0_202/jre/lib/ext/sunmscapi.jar, file:/C:/Program%20Files/Java/jdk1.8.0_202/jre/lib/ext/sunpkcs11.jar, file:/C:/Program%20Files/Java/jdk1.8.0_202/jre/lib/ext/zipfs.jar, file:/C:/Program%20Files/Java/jdk1.8.0_202/jre/lib/javaws.jar, file:/C:/Program%20Files/Java/jdk1.8.0_202/jre/lib/jce.jar, file:/C:/Program%20Files/Java/jdk1.8.0_202/jre/lib/jfr.jar, file:/C:/Program%20Files/Java/jdk1.8.0_202/jre/lib/jfxswt.jar, file:/C:/Program%20Files/Java/jdk1.8.0_202/jre/lib/jsse.jar, file:/C:/Program%20Files/Java/jdk1.8.0_202/jre/lib/management-agent.jar, file:/C:/Program%20Files/Java/jdk1.8.0_202/jre/lib/plugin.jar, file:/C:/Program%20Files/Java/jdk1.8.0_202/jre/lib/resources.jar, file:/C:/Program%20Files/Java/jdk1.8.0_202/jre/lib/rt.jar, file:/D:/project/Jave_learn/OA_spring/target/classes/, file:/D:/Software/maven-repo/org/springframework/boot/spring-boot-starter-web/2.2.1.RELEASE/spring-boot-starter-web-2.2.1.RELEASE.jar, file:/D:/Software/maven-repo/org/springframework/boot/spring-boot-starter/2.2.1.RELEASE/spring-boot-starter-2.2.1.RELEASE.jar, file:/D:/Software/maven-repo/org/springframework/boot/spring-boot/2.2.1.RELEASE/spring-boot-2.2.1.RELEASE.jar, file:/D:/Software/maven-repo/org/springframework/boot/spring-boot-autoconfigure/2.2.1.RELEASE/spring-boot-autoconfigure-2.2.1.RELEASE.jar, file:/D:/Software/maven-repo/jakarta/annotation/jakarta.annotation-api/1.3.5/jakarta.annotation-api-1.3.5.jar, file:/D:/Software/maven-repo/org/yaml/snakeyaml/1.25/snakeyaml-1.25.jar, file:/D:/Software/maven-repo/org/springframework/boot/spring-boot-starter-json/2.2.1.RELEASE/spring-boot-starter-json-2.2.1.RELEASE.jar, file:/D:/Software/maven-repo/com/fasterxml/jackson/core/jackson-databind/2.10.0/jackson-databind-2.10.0.jar, file:/D:/Software/maven-repo/com/fasterxml/jackson/core/jackson-core/2.10.0/jackson-core-2.10.0.jar, file:/D:/Software/maven-repo/com/fasterxml/jackson/datatype/jackson-datatype-jdk8/2.10.0/jackson-datatype-jdk8-2.10.0.jar, file:/D:/Software/maven-repo/com/fasterxml/jackson/datatype/jackson-datatype-jsr310/2.10.0/jackson-datatype-jsr310-2.10.0.jar, file:/D:/Software/maven-repo/com/fasterxml/jackson/module/jackson-module-parameter-names/2.10.0/jackson-module-parameter-names-2.10.0.jar, file:/D:/Software/maven-repo/org/springframework/boot/spring-boot-starter-tomcat/2.2.1.RELEASE/spring-boot-starter-tomcat-2.2.1.RELEASE.jar, file:/D:/Software/maven-repo/org/apache/tomcat/embed/tomcat-embed-core/9.0.27/tomcat-embed-core-9.0.27.jar, file:/D:/Software/maven-repo/org/apache/tomcat/embed/tomcat-embed-websocket/9.0.27/tomcat-embed-websocket-9.0.27.jar, file:/D:/Software/maven-repo/org/springframework/boot/spring-boot-starter-validation/2.2.1.RELEASE/spring-boot-starter-validation-2.2.1.RELEASE.jar, file:/D:/Software/maven-repo/jakarta/validation/jakarta.validation-api/2.0.1/jakarta.validation-api-2.0.1.jar, file:/D:/Software/maven-repo/org/hibernate/validator/hibernate-validator/6.0.18.Final/hibernate-validator-6.0.18.Final.jar, file:/D:/Software/maven-repo/org/jboss/logging/jboss-logging/3.4.1.Final/jboss-logging-3.4.1.Final.jar, file:/D:/Software/maven-repo/org/springframework/spring-web/5.2.1.RELEASE/spring-web-5.2.1.RELEASE.jar, file:/D:/Software/maven-repo/org/springframework/spring-beans/5.2.1.RELEASE/spring-beans-5.2.1.RELEASE.jar, file:/D:/Software/maven-repo/org/springframework/spring-webmvc/5.2.1.RELEASE/spring-webmvc-5.2.1.RELEASE.jar, file:/D:/Software/maven-repo/org/springframework/spring-context/5.2.1.RELEASE/spring-context-5.2.1.RELEASE.jar, file:/D:/Software/maven-repo/org/springframework/spring-expression/5.2.1.RELEASE/spring-expression-5.2.1.RELEASE.jar, file:/D:/Software/maven-repo/net/bytebuddy/byte-buddy/1.10.2/byte-buddy-1.10.2.jar, file:/D:/Software/maven-repo/org/springframework/spring-core/5.2.1.RELEASE/spring-core-5.2.1.RELEASE.jar, file:/D:/Software/maven-repo/org/springframework/spring-jcl/5.2.1.RELEASE/spring-jcl-5.2.1.RELEASE.jar, file:/D:/Software/maven-repo/org/mybatis/spring/boot/mybatis-spring-boot-starter/1.3.2/mybatis-spring-boot-starter-1.3.2.jar, file:/D:/Software/maven-repo/org/springframework/boot/spring-boot-starter-jdbc/2.2.1.RELEASE/spring-boot-starter-jdbc-2.2.1.RELEASE.jar, file:/D:/Software/maven-repo/com/zaxxer/HikariCP/3.4.1/HikariCP-3.4.1.jar, file:/D:/Software/maven-repo/org/springframework/spring-jdbc/5.2.1.RELEASE/spring-jdbc-5.2.1.RELEASE.jar, file:/D:/Software/maven-repo/org/mybatis/spring/boot/mybatis-spring-boot-autoconfigure/1.3.2/mybatis-spring-boot-autoconfigure-1.3.2.jar, file:/D:/Software/maven-repo/org/mybatis/mybatis/3.4.6/mybatis-3.4.6.jar, file:/D:/Software/maven-repo/org/mybatis/mybatis-spring/1.3.2/mybatis-spring-1.3.2.jar, file:/D:/Software/maven-repo/mysql/mysql-connector-java/8.0.18/mysql-connector-java-8.0.18.jar, file:/D:/Software/maven-repo/org/springframework/boot/spring-boot-starter-log4j2/2.2.1.RELEASE/spring-boot-starter-log4j2-2.2.1.RELEASE.jar, file:/D:/Software/maven-repo/org/apache/logging/log4j/log4j-slf4j-impl/2.12.1/log4j-slf4j-impl-2.12.1.jar, file:/D:/Software/maven-repo/org/apache/logging/log4j/log4j-api/2.12.1/log4j-api-2.12.1.jar, file:/D:/Software/maven-repo/org/apache/logging/log4j/log4j-core/2.12.1/log4j-core-2.12.1.jar, file:/D:/Software/maven-repo/org/apache/logging/log4j/log4j-jul/2.12.1/log4j-jul-2.12.1.jar, file:/D:/Software/maven-repo/org/slf4j/jul-to-slf4j/1.7.29/jul-to-slf4j-1.7.29.jar, file:/D:/Software/maven-repo/org/springframework/boot/spring-boot-starter-aop/2.2.1.RELEASE/spring-boot-starter-aop-2.2.1.RELEASE.jar, file:/D:/Software/maven-repo/org/springframework/spring-aop/5.2.1.RELEASE/spring-aop-5.2.1.RELEASE.jar, file:/D:/Software/maven-repo/io/springfox/springfox-swagger2/2.9.2/springfox-swagger2-2.9.2.jar, file:/D:/Software/maven-repo/io/swagger/swagger-annotations/1.5.20/swagger-annotations-1.5.20.jar, file:/D:/Software/maven-repo/io/swagger/swagger-models/1.5.20/swagger-models-1.5.20.jar, file:/D:/Software/maven-repo/com/fasterxml/jackson/core/jackson-annotations/2.10.0/jackson-annotations-2.10.0.jar, file:/D:/Software/maven-repo/io/springfox/springfox-spi/2.9.2/springfox-spi-2.9.2.jar, file:/D:/Software/maven-repo/io/springfox/springfox-core/2.9.2/springfox-core-2.9.2.jar, file:/D:/Software/maven-repo/io/springfox/springfox-schema/2.9.2/springfox-schema-2.9.2.jar, file:/D:/Software/maven-repo/io/springfox/springfox-swagger-common/2.9.2/springfox-swagger-common-2.9.2.jar, file:/D:/Software/maven-repo/io/springfox/springfox-spring-web/2.9.2/springfox-spring-web-2.9.2.jar, file:/D:/Software/maven-repo/com/google/guava/guava/20.0/guava-20.0.jar, file:/D:/Software/maven-repo/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar, file:/D:/Software/maven-repo/org/slf4j/slf4j-api/1.7.29/slf4j-api-1.7.29.jar, file:/D:/Software/maven-repo/org/springframework/plugin/spring-plugin-core/1.2.0.RELEASE/spring-plugin-core-1.2.0.RELEASE.jar, file:/D:/Software/maven-repo/org/springframework/plugin/spring-plugin-metadata/1.2.0.RELEASE/spring-plugin-metadata-1.2.0.RELEASE.jar, file:/D:/Software/maven-repo/org/mapstruct/mapstruct/1.2.0.Final/mapstruct-1.2.0.Final.jar, file:/D:/Software/maven-repo/io/springfox/springfox-swagger-ui/2.9.2/springfox-swagger-ui-2.9.2.jar, file:/D:/Software/maven-repo/com/github/pagehelper/pagehelper-spring-boot-starter/1.2.13/pagehelper-spring-boot-starter-1.2.13.jar, file:/D:/Software/maven-repo/com/github/pagehelper/pagehelper-spring-boot-autoconfigure/1.2.13/pagehelper-spring-boot-autoconfigure-1.2.13.jar, file:/D:/Software/maven-repo/com/github/pagehelper/pagehelper/5.1.11/pagehelper-5.1.11.jar, file:/D:/Software/maven-repo/com/github/jsqlparser/jsqlparser/2.0/jsqlparser-2.0.jar, file:/D:/Software/maven-repo/org/springframework/boot/spring-boot-starter-data-redis/2.2.1.RELEASE/spring-boot-starter-data-redis-2.2.1.RELEASE.jar, file:/D:/Software/maven-repo/org/springframework/data/spring-data-redis/2.2.1.RELEASE/spring-data-redis-2.2.1.RELEASE.jar, file:/D:/Software/maven-repo/org/springframework/data/spring-data-keyvalue/2.2.1.RELEASE/spring-data-keyvalue-2.2.1.RELEASE.jar, file:/D:/Software/maven-repo/org/springframework/data/spring-data-commons/2.2.1.RELEASE/spring-data-commons-2.2.1.RELEASE.jar, file:/D:/Software/maven-repo/org/springframework/spring-tx/5.2.1.RELEASE/spring-tx-5.2.1.RELEASE.jar, file:/D:/Software/maven-repo/org/springframework/spring-oxm/5.2.1.RELEASE/spring-oxm-5.2.1.RELEASE.jar, file:/D:/Software/maven-repo/io/lettuce/lettuce-core/5.2.1.RELEASE/lettuce-core-5.2.1.RELEASE.jar, file:/D:/Software/maven-repo/io/netty/netty-common/4.1.43.Final/netty-common-4.1.43.Final.jar, file:/D:/Software/maven-repo/io/netty/netty-handler/4.1.43.Final/netty-handler-4.1.43.Final.jar, file:/D:/Software/maven-repo/io/netty/netty-buffer/4.1.43.Final/netty-buffer-4.1.43.Final.jar, file:/D:/Software/maven-repo/io/netty/netty-codec/4.1.43.Final/netty-codec-4.1.43.Final.jar, file:/D:/Software/maven-repo/io/netty/netty-transport/4.1.43.Final/netty-transport-4.1.43.Final.jar, file:/D:/Software/maven-repo/io/netty/netty-resolver/4.1.43.Final/netty-resolver-4.1.43.Final.jar, file:/D:/Software/maven-repo/io/projectreactor/reactor-core/3.3.0.RELEASE/reactor-core-3.3.0.RELEASE.jar, file:/D:/Software/maven-repo/org/reactivestreams/reactive-streams/1.0.3/reactive-streams-1.0.3.jar, file:/D:/Software/maven-repo/org/springframework/boot/spring-boot-starter-cache/2.2.1.RELEASE/spring-boot-starter-cache-2.2.1.RELEASE.jar, file:/D:/Software/maven-repo/org/springframework/spring-context-support/5.2.1.RELEASE/spring-context-support-5.2.1.RELEASE.jar, file:/D:/Software/maven-repo/org/aspectj/aspectjweaver/1.8.13/aspectjweaver-1.8.13.jar, file:/D:/Software/maven-repo/org/springframework/boot/spring-boot-starter-freemarker/2.2.1.RELEASE/spring-boot-starter-freemarker-2.2.1.RELEASE.jar, file:/D:/Software/maven-repo/org/freemarker/freemarker/2.3.29/freemarker-2.3.29.jar, file:/D:/Software/maven-repo/com/alibaba/fastjson/2.0.2/fastjson-2.0.2.jar, file:/D:/Software/maven-repo/com/alibaba/fastjson2/fastjson2-extension/2.0.2/fastjson2-extension-2.0.2.jar, file:/D:/Software/maven-repo/com/alibaba/fastjson2/fastjson2/2.0.2/fastjson2-2.0.2.jar, file:/D:/Software/maven-repo/org/json/json/20220320/json-20220320.jar, file:/D:/Software/IntelliJ%20IDEA%202021.1/lib/idea_rt.jar, file:/C:/Users/w1216/AppData/Local/JetBrains/IntelliJIdea2021.1/captureAgent/debugger-agent.jar]
[02:06:55:864] [DEBUG] - org.springframework.boot.StartupInfoLogger.logStarting(StartupInfoLogger.java:56) - Running with Spring Boot v2.2.1.RELEASE, Spring v5.2.1.RELEASE
[02:06:55:864] [DEBUG] - org.springframework.boot.SpringApplication.load(SpringApplication.java:679) - Loading source class com.wei.oa_spring.OaSpringApplication
[02:06:55:934] [DEBUG] - org.springframework.boot.logging.DeferredLog.logTo(DeferredLog.java:222) - Loaded config file 'file:/D:/project/Jave_learn/OA_spring/target/classes/application.properties' (classpath:/application.properties)
[02:06:55:934] [DEBUG] - org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:595) - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@2cb3d0f7
[02:06:55:974] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
[02:06:55:994] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.internalCachingMetadataReaderFactory'
[02:06:56:104] [DEBUG] - org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.scanCandidateComponents(ClassPathScanningCandidateComponentProvider.java:437) - Identified candidate component class: file [D:\project\Jave_learn\OA_spring\target\classes\com\wei\oa_spring\adminController\AdmDepartmentController.class]
[02:06:56:104] [DEBUG] - org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.scanCandidateComponents(ClassPathScanningCandidateComponentProvider.java:437) - Identified candidate component class: file [D:\project\Jave_learn\OA_spring\target\classes\com\wei\oa_spring\adminController\AdmEmployeeController.class]
[02:06:56:104] [DEBUG] - org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.scanCandidateComponents(ClassPathScanningCandidateComponentProvider.java:437) - Identified candidate component class: file [D:\project\Jave_learn\OA_spring\target\classes\com\wei\oa_spring\adminController\AdmLeaveFormController.class]
[02:06:56:114] [DEBUG] - org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.scanCandidateComponents(ClassPathScanningCandidateComponentProvider.java:437) - Identified candidate component class: file [D:\project\Jave_learn\OA_spring\target\classes\com\wei\oa_spring\config\CachingConfig.class]
[02:06:56:114] [DEBUG] - org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.scanCandidateComponents(ClassPathScanningCandidateComponentProvider.java:437) - Identified candidate component class: file [D:\project\Jave_learn\OA_spring\target\classes\com\wei\oa_spring\config\OAWebMvcConfig.class]
[02:06:56:114] [DEBUG] - org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.scanCandidateComponents(ClassPathScanningCandidateComponentProvider.java:437) - Identified candidate component class: file [D:\project\Jave_learn\OA_spring\target\classes\com\wei\oa_spring\config\SpringFoxConfig.class]
[02:06:56:114] [DEBUG] - org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.scanCandidateComponents(ClassPathScanningCandidateComponentProvider.java:437) - Identified candidate component class: file [D:\project\Jave_learn\OA_spring\target\classes\com\wei\oa_spring\config\UserFilterConfig.class]
[02:06:56:114] [DEBUG] - org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.scanCandidateComponents(ClassPathScanningCandidateComponentProvider.java:437) - Identified candidate component class: file [D:\project\Jave_learn\OA_spring\target\classes\com\wei\oa_spring\controller\EmployeeController.class]
[02:06:56:114] [DEBUG] - org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.scanCandidateComponents(ClassPathScanningCandidateComponentProvider.java:437) - Identified candidate component class: file [D:\project\Jave_learn\OA_spring\target\classes\com\wei\oa_spring\controller\ForwardController.class]
[02:06:56:124] [DEBUG] - org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.scanCandidateComponents(ClassPathScanningCandidateComponentProvider.java:437) - Identified candidate component class: file [D:\project\Jave_learn\OA_spring\target\classes\com\wei\oa_spring\controller\IndexController.class]
[02:06:56:124] [DEBUG] - org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.scanCandidateComponents(ClassPathScanningCandidateComponentProvider.java:437) - Identified candidate component class: file [D:\project\Jave_learn\OA_spring\target\classes\com\wei\oa_spring\controller\LeaveFormController.class]
[02:06:56:124] [DEBUG] - org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.scanCandidateComponents(ClassPathScanningCandidateComponentProvider.java:437) - Identified candidate component class: file [D:\project\Jave_learn\OA_spring\target\classes\com\wei\oa_spring\controller\NodeController.class]
[02:06:56:124] [DEBUG] - org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.scanCandidateComponents(ClassPathScanningCandidateComponentProvider.java:437) - Identified candidate component class: file [D:\project\Jave_learn\OA_spring\target\classes\com\wei\oa_spring\controller\NoticeController.class]
[02:06:56:124] [DEBUG] - org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.scanCandidateComponents(ClassPathScanningCandidateComponentProvider.java:437) - Identified candidate component class: file [D:\project\Jave_learn\OA_spring\target\classes\com\wei\oa_spring\controller\UserController.class]
[02:06:56:124] [DEBUG] - org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.scanCandidateComponents(ClassPathScanningCandidateComponentProvider.java:437) - Identified candidate component class: file [D:\project\Jave_learn\OA_spring\target\classes\com\wei\oa_spring\exception\GlobalExceptionHandler.class]
[02:06:56:134] [DEBUG] - org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.scanCandidateComponents(ClassPathScanningCandidateComponentProvider.java:437) - Identified candidate component class: file [D:\project\Jave_learn\OA_spring\target\classes\com\wei\oa_spring\filter\WebLogAspect.class]
[02:06:56:144] [DEBUG] - org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.scanCandidateComponents(ClassPathScanningCandidateComponentProvider.java:437) - Identified candidate component class: file [D:\project\Jave_learn\OA_spring\target\classes\com\wei\oa_spring\service\Impl\DepartmentServiceImpl.class]
[02:06:56:144] [DEBUG] - org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.scanCandidateComponents(ClassPathScanningCandidateComponentProvider.java:437) - Identified candidate component class: file [D:\project\Jave_learn\OA_spring\target\classes\com\wei\oa_spring\service\Impl\EmployeeServiceImpl.class]
[02:06:56:144] [DEBUG] - org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.scanCandidateComponents(ClassPathScanningCandidateComponentProvider.java:437) - Identified candidate component class: file [D:\project\Jave_learn\OA_spring\target\classes\com\wei\oa_spring\service\Impl\LeaveFormServiceImpl.class]
[02:06:56:144] [DEBUG] - org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.scanCandidateComponents(ClassPathScanningCandidateComponentProvider.java:437) - Identified candidate component class: file [D:\project\Jave_learn\OA_spring\target\classes\com\wei\oa_spring\service\Impl\NodeServiceImpl.class]
[02:06:56:144] [DEBUG] - org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.scanCandidateComponents(ClassPathScanningCandidateComponentProvider.java:437) - Identified candidate component class: file [D:\project\Jave_learn\OA_spring\target\classes\com\wei\oa_spring\service\Impl\NoticeServiceImpl.class]
[02:06:56:144] [DEBUG] - org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.scanCandidateComponents(ClassPathScanningCandidateComponentProvider.java:437) - Identified candidate component class: file [D:\project\Jave_learn\OA_spring\target\classes\com\wei\oa_spring\service\Impl\UserServiceImpl.class]
[02:06:56:444] [DEBUG] - org.springframework.core.env.PropertySourcesPropertyResolver.logKeyFound(PropertySourcesPropertyResolver.java:115) - Found key 'spring.jmx.enabled' in PropertySource 'configurationProperties' with value of type String
[02:06:56:464] [DEBUG] - org.springframework.core.env.PropertySourcesPropertyResolver.logKeyFound(PropertySourcesPropertyResolver.java:115) - Found key 'spring.jmx.enabled' in PropertySource 'configurationProperties' with value of type String
[02:06:56:464] [DEBUG] - org.springframework.core.env.PropertySourcesPropertyResolver.logKeyFound(PropertySourcesPropertyResolver.java:115) - Found key 'spring.application.admin.enabled' in PropertySource 'configurationProperties' with value of type String
[02:06:56:624] [DEBUG] - org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.scanCandidateComponents(ClassPathScanningCandidateComponentProvider.java:437) - Identified candidate component class: file [D:\project\Jave_learn\OA_spring\target\classes\com\wei\oa_spring\model\dao\DepartmentMapper.class]
[02:06:56:624] [DEBUG] - org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.scanCandidateComponents(ClassPathScanningCandidateComponentProvider.java:437) - Identified candidate component class: file [D:\project\Jave_learn\OA_spring\target\classes\com\wei\oa_spring\model\dao\EmployeeMapper.class]
[02:06:56:624] [DEBUG] - org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.scanCandidateComponents(ClassPathScanningCandidateComponentProvider.java:437) - Identified candidate component class: file [D:\project\Jave_learn\OA_spring\target\classes\com\wei\oa_spring\model\dao\LeaveFormMapper.class]
[02:06:56:624] [DEBUG] - org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.scanCandidateComponents(ClassPathScanningCandidateComponentProvider.java:437) - Identified candidate component class: file [D:\project\Jave_learn\OA_spring\target\classes\com\wei\oa_spring\model\dao\NodeMapper.class]
[02:06:56:624] [DEBUG] - org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.scanCandidateComponents(ClassPathScanningCandidateComponentProvider.java:437) - Identified candidate component class: file [D:\project\Jave_learn\OA_spring\target\classes\com\wei\oa_spring\model\dao\NoticeMapper.class]
[02:06:56:624] [DEBUG] - org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.scanCandidateComponents(ClassPathScanningCandidateComponentProvider.java:437) - Identified candidate component class: file [D:\project\Jave_learn\OA_spring\target\classes\com\wei\oa_spring\model\dao\ProcessFlowMapper.class]
[02:06:56:624] [DEBUG] - org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.scanCandidateComponents(ClassPathScanningCandidateComponentProvider.java:437) - Identified candidate component class: file [D:\project\Jave_learn\OA_spring\target\classes\com\wei\oa_spring\model\dao\UserMapper.class]
[02:06:56:624] [DEBUG] - org.mybatis.spring.mapper.ClassPathMapperScanner.processBeanDefinitions(ClassPathMapperScanner.java:180) - Creating MapperFactoryBean with name 'departmentMapper' and 'com.wei.oa_spring.model.dao.DepartmentMapper' mapperInterface
[02:06:56:624] [DEBUG] - org.mybatis.spring.mapper.ClassPathMapperScanner.processBeanDefinitions(ClassPathMapperScanner.java:216) - Enabling autowire by type for MapperFactoryBean with name 'departmentMapper'.
[02:06:56:624] [DEBUG] - org.mybatis.spring.mapper.ClassPathMapperScanner.processBeanDefinitions(ClassPathMapperScanner.java:180) - Creating MapperFactoryBean with name 'employeeMapper' and 'com.wei.oa_spring.model.dao.EmployeeMapper' mapperInterface
[02:06:56:624] [DEBUG] - org.mybatis.spring.mapper.ClassPathMapperScanner.processBeanDefinitions(ClassPathMapperScanner.java:216) - Enabling autowire by type for MapperFactoryBean with name 'employeeMapper'.
[02:06:56:624] [DEBUG] - org.mybatis.spring.mapper.ClassPathMapperScanner.processBeanDefinitions(ClassPathMapperScanner.java:180) - Creating MapperFactoryBean with name 'leaveFormMapper' and 'com.wei.oa_spring.model.dao.LeaveFormMapper' mapperInterface
[02:06:56:624] [DEBUG] - org.mybatis.spring.mapper.ClassPathMapperScanner.processBeanDefinitions(ClassPathMapperScanner.java:216) - Enabling autowire by type for MapperFactoryBean with name 'leaveFormMapper'.
[02:06:56:624] [DEBUG] - org.mybatis.spring.mapper.ClassPathMapperScanner.processBeanDefinitions(ClassPathMapperScanner.java:180) - Creating MapperFactoryBean with name 'nodeMapper' and 'com.wei.oa_spring.model.dao.NodeMapper' mapperInterface
[02:06:56:624] [DEBUG] - org.mybatis.spring.mapper.ClassPathMapperScanner.processBeanDefinitions(ClassPathMapperScanner.java:216) - Enabling autowire by type for MapperFactoryBean with name 'nodeMapper'.
[02:06:56:624] [DEBUG] - org.mybatis.spring.mapper.ClassPathMapperScanner.processBeanDefinitions(ClassPathMapperScanner.java:180) - Creating MapperFactoryBean with name 'noticeMapper' and 'com.wei.oa_spring.model.dao.NoticeMapper' mapperInterface
[02:06:56:624] [DEBUG] - org.mybatis.spring.mapper.ClassPathMapperScanner.processBeanDefinitions(ClassPathMapperScanner.java:216) - Enabling autowire by type for MapperFactoryBean with name 'noticeMapper'.
[02:06:56:624] [DEBUG] - org.mybatis.spring.mapper.ClassPathMapperScanner.processBeanDefinitions(ClassPathMapperScanner.java:180) - Creating MapperFactoryBean with name 'processFlowMapper' and 'com.wei.oa_spring.model.dao.ProcessFlowMapper' mapperInterface
[02:06:56:624] [DEBUG] - org.mybatis.spring.mapper.ClassPathMapperScanner.processBeanDefinitions(ClassPathMapperScanner.java:216) - Enabling autowire by type for MapperFactoryBean with name 'processFlowMapper'.
[02:06:56:624] [DEBUG] - org.mybatis.spring.mapper.ClassPathMapperScanner.processBeanDefinitions(ClassPathMapperScanner.java:180) - Creating MapperFactoryBean with name 'userMapper' and 'com.wei.oa_spring.model.dao.UserMapper' mapperInterface
[02:06:56:624] [DEBUG] - org.mybatis.spring.mapper.ClassPathMapperScanner.processBeanDefinitions(ClassPathMapperScanner.java:216) - Enabling autowire by type for MapperFactoryBean with name 'userMapper'.
[02:06:56:814] [DEBUG] - org.springframework.core.env.PropertySourcesPropertyResolver.logKeyFound(PropertySourcesPropertyResolver.java:115) - Found key 'spring.jmx.enabled' in PropertySource 'configurationProperties' with value of type String
[02:06:56:834] [DEBUG] - org.springframework.core.env.PropertySourcesPropertyResolver.logKeyFound(PropertySourcesPropertyResolver.java:115) - Found key 'spring.jmx.enabled' in PropertySource 'configurationProperties' with value of type String
[02:06:56:844] [DEBUG] - org.springframework.core.env.PropertySourcesPropertyResolver.logKeyFound(PropertySourcesPropertyResolver.java:115) - Found key 'spring.application.admin.enabled' in PropertySource 'configurationProperties' with value of type String
[02:06:56:954] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.AutoConfigurationPackages'
[02:06:56:954] [DEBUG] - org.springframework.boot.autoconfigure.AutoConfigurationPackages$BasePackages.get(AutoConfigurationPackages.java:199) - @EnableAutoConfiguration was declared on a class in the package 'com.wei.oa_spring'. Automatic @Repository and @Entity scanning is enabled.
[02:06:56:954] [DEBUG] - org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:138) - Scanning for repositories in packages com.wei.oa_spring.
[02:06:57:234] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'propertySourcesPlaceholderConfigurer'
[02:06:57:244] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'org.springframework.boot.context.properties.ConfigurationPropertiesBeanDefinitionValidator'
[02:06:57:344] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerProcessor'
[02:06:57:344] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'preserveErrorControllerTargetClassPostProcessor'
[02:06:57:344] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerFactory'
[02:06:57:344] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionalEventListenerFactory'
[02:06:57:344] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
[02:06:57:344] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
[02:06:57:354] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor'
[02:06:57:354] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'org.springframework.boot.context.internalConfigurationPropertiesBinder'
[02:06:57:354] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'org.springframework.boot.context.internalConfigurationPropertiesBinderFactory'
[02:06:57:354] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
[02:06:57:414] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'methodValidationPostProcessor'
[02:06:57:434] [DEBUG] - org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795) - Autowiring by type from bean name 'methodValidationPostProcessor' via factory method to bean named 'environment'
[02:06:57:434] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'dataSourceInitializerPostProcessor'
[02:06:57:444] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'persistenceExceptionTranslationPostProcessor'
[02:06:57:444] [DEBUG] - org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795) - Autowiring by type from bean name 'persistenceExceptionTranslationPostProcessor' via factory method to bean named 'environment'
[02:06:57:444] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'webServerFactoryCustomizerBeanPostProcessor'
[02:06:57:444] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'errorPageRegistrarBeanPostProcessor'
[02:06:57:444] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'projectingArgumentResolverBeanPostProcessor'
[02:06:57:444] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'org.springframework.cache.config.internalCacheAdvisor'
[02:06:57:444] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'org.springframework.cache.annotation.ProxyCachingConfiguration'
[02:06:57:444] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[02:06:57:444] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration'
[02:06:57:474] [DEBUG] - org.springframework.aop.aspectj.annotation.ReflectiveAspectJAdvisorFactory.getAdvice(ReflectiveAspectJAdvisorFactory.java:243) - Found AspectJ method: public void com.wei.oa_spring.filter.WebLogAspect.doBefore(org.aspectj.lang.JoinPoint)
[02:06:57:474] [DEBUG] - org.springframework.aop.aspectj.annotation.ReflectiveAspectJAdvisorFactory.getAdvice(ReflectiveAspectJAdvisorFactory.java:243) - Found AspectJ method: public void com.wei.oa_spring.filter.WebLogAspect.doAfterReturning(java.lang.Object) throws com.fasterxml.jackson.core.JsonProcessingException
[02:06:57:624] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'transactionAttributeSource'
[02:06:57:644] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'transactionInterceptor'
[02:06:57:644] [DEBUG] - org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795) - Autowiring by type from bean name 'transactionInterceptor' via factory method to bean named 'transactionAttributeSource'
[02:06:57:664] [DEBUG] - org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795) - Autowiring by type from bean name 'org.springframework.transaction.config.internalTransactionAdvisor' via factory method to bean named 'transactionAttributeSource'
[02:06:57:664] [DEBUG] - org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795) - Autowiring by type from bean name 'org.springframework.transaction.config.internalTransactionAdvisor' via factory method to bean named 'transactionInterceptor'
[02:06:57:714] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'cacheOperationSource'
[02:06:57:724] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'cacheInterceptor'
[02:06:57:764] [DEBUG] - org.springframework.ui.context.support.UiApplicationContextUtils.initThemeSource(UiApplicationContextUtils.java:85) - Unable to locate ThemeSource with name 'themeSource': using default [org.springframework.ui.context.support.ResourceBundleThemeSource@2e7157c7]
[02:06:57:764] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'tomcatServletWebServerFactory'
[02:06:57:764] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryConfiguration$EmbeddedTomcat'
[02:06:57:824] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'websocketServletWebServerCustomizer'
[02:06:57:824] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration$TomcatWebSocketConfiguration'
[02:06:57:834] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'servletWebServerFactoryCustomizer'
[02:06:57:834] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration'
[02:06:57:834] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
[02:06:57:864] [DEBUG] - org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795) - Autowiring by type from bean name 'servletWebServerFactoryCustomizer' via factory method to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
[02:06:57:874] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'tomcatServletWebServerFactoryCustomizer'
[02:06:57:874] [DEBUG] - org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795) - Autowiring by type from bean name 'tomcatServletWebServerFactoryCustomizer' via factory method to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
[02:06:57:874] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'tomcatWebServerFactoryCustomizer'
[02:06:57:874] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration$TomcatWebServerFactoryCustomizerConfiguration'
[02:06:57:874] [DEBUG] - org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795) - Autowiring by type from bean name 'tomcatWebServerFactoryCustomizer' via factory method to bean named 'environment'
[02:06:57:874] [DEBUG] - org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795) - Autowiring by type from bean name 'tomcatWebServerFactoryCustomizer' via factory method to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
[02:06:57:884] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'localeCharsetMappingsCustomizer'
[02:06:57:884] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration'
[02:06:57:884] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'spring.http-org.springframework.boot.autoconfigure.http.HttpProperties'
[02:06:57:884] [DEBUG] - org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795) - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration' via constructor to bean named 'spring.http-org.springframework.boot.autoconfigure.http.HttpProperties'
[02:06:57:924] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'errorPageCustomizer'
[02:06:57:924] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration'
[02:06:57:924] [DEBUG] - org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795) - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration' via constructor to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
[02:06:57:924] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'dispatcherServletRegistration'
[02:06:57:924] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletRegistrationConfiguration'
[02:06:57:924] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'dispatcherServlet'
[02:06:57:924] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletConfiguration'
[02:06:57:934] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
[02:06:57:934] [DEBUG] - org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795) - Autowiring by type from bean name 'dispatcherServlet' via factory method to bean named 'spring.http-org.springframework.boot.autoconfigure.http.HttpProperties'
[02:06:57:934] [DEBUG] - org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795) - Autowiring by type from bean name 'dispatcherServlet' via factory method to bean named 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
[02:06:57:964] [DEBUG] - org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795) - Autowiring by type from bean name 'dispatcherServletRegistration' via factory method to bean named 'dispatcherServlet'
[02:06:57:964] [DEBUG] - org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795) - Autowiring by type from bean name 'dispatcherServletRegistration' via factory method to bean named 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
[02:06:57:964] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'multipartConfigElement'
[02:06:57:974] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration'
[02:06:57:974] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'spring.servlet.multipart-org.springframework.boot.autoconfigure.web.servlet.MultipartProperties'
[02:06:57:974] [DEBUG] - org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795) - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration' via constructor to bean named 'spring.servlet.multipart-org.springframework.boot.autoconfigure.web.servlet.MultipartProperties'
[02:06:57:994] [DEBUG] - org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795) - Autowiring by type from bean name 'errorPageCustomizer' via factory method to bean named 'dispatcherServletRegistration'
[02:06:58:114] [DEBUG] - org.springframework.boot.web.servlet.server.DocumentRoot.getArchiveFileDocumentRoot(DocumentRoot.java:81) - Code archive: D:\Software\maven-repo\org\springframework\boot\spring-boot\2.2.1.RELEASE\spring-boot-2.2.1.RELEASE.jar
[02:06:58:114] [DEBUG] - org.springframework.boot.web.servlet.server.DocumentRoot.getExplodedWarFileDocumentRoot(DocumentRoot.java:125) - Code archive: D:\Software\maven-repo\org\springframework\boot\spring-boot\2.2.1.RELEASE\spring-boot-2.2.1.RELEASE.jar
[02:06:58:114] [DEBUG] - org.springframework.boot.web.servlet.server.DocumentRoot.logNoDocumentRoots(DocumentRoot.java:149) - None of the document roots [src/main/webapp, public, static] point to a directory and will be ignored.
[02:06:58:414] [DEBUG] - org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext(ServletWebServerApplicationContext.java:278) - Published root WebApplicationContext as ServletContext attribute with name [org.springframework.web.context.WebApplicationContext.ROOT]
[02:06:58:414] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'userFilterConf'
[02:06:58:414] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'userFilterConfig'
[02:06:58:424] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'userFilter'
[02:06:58:434] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'requestContextFilter'
[02:06:58:434] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'formContentFilter'
[02:06:58:434] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration'
[02:06:58:444] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'characterEncodingFilter'
[02:06:58:464] [DEBUG] - org.springframework.boot.web.servlet.ServletContextInitializerBeans.logMappings(ServletContextInitializerBeans.java:235) - Mapping filters: userFilterConfig urls=[/leaveForm/*, /notice/*, /user/*] order=2147483647, characterEncodingFilter urls=[/*] order=-2147483648, formContentFilter urls=[/*] order=-9900, requestContextFilter urls=[/*] order=-105
[02:06:58:464] [DEBUG] - org.springframework.boot.web.servlet.ServletContextInitializerBeans.logMappings(ServletContextInitializerBeans.java:235) - Mapping servlets: dispatcherServlet urls=[/]
[02:06:58:494] [DEBUG] - org.springframework.web.filter.GenericFilterBean.init(GenericFilterBean.java:242) - Filter 'requestContextFilter' configured for use
[02:06:58:494] [DEBUG] - org.springframework.web.filter.GenericFilterBean.init(GenericFilterBean.java:242) - Filter 'characterEncodingFilter' configured for use
[02:06:58:494] [DEBUG] - org.springframework.web.filter.GenericFilterBean.init(GenericFilterBean.java:242) - Filter 'formContentFilter' configured for use
[02:06:58:514] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'oaSpringApplication'
[02:06:58:514] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'admDepartmentController'
[02:06:58:524] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'departmentService'
[02:06:58:524] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'departmentMapper'
[02:06:58:534] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'sqlSessionFactory'
[02:06:58:534] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration'
[02:06:58:534] [DEBUG] - org.springframework.core.LocalVariableTableParameterNameDiscoverer.inspectClass(LocalVariableTableParameterNameDiscoverer.java:99) - Cannot find '.class' file for class [class org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$cfa70577] - unable to determine constructor/method parameter names
[02:06:58:544] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties'
[02:06:58:574] [DEBUG] - org.apache.ibatis.logging.LogFactory.setImplementation(LogFactory.java:135) - Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[02:06:58:634] [DEBUG] - org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795) - Autowiring by type from bean name 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' via constructor to bean named 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties'
[02:06:58:634] [DEBUG] - org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795) - Autowiring by type from bean name 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' via constructor to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@2cb3d0f7'
[02:06:58:634] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'dataSource'
[02:06:58:634] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari'
[02:06:58:644] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties'
[02:06:58:654] [DEBUG] - org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795) - Autowiring by type from bean name 'dataSource' via factory method to bean named 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties'
[02:06:58:674] [DEBUG] - com.zaxxer.hikari.HikariConfig.attemptFromContextLoader(HikariConfig.java:900) - Driver class com.mysql.cj.jdbc.Driver found in Thread context class loader sun.misc.Launcher$AppClassLoader@18b4aac2
[02:06:58:704] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker'
[02:06:58:704] [DEBUG] - org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795) - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' via constructor to bean named 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties'
[02:06:58:704] [DEBUG] - org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795) - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' via constructor to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@2cb3d0f7'
[02:06:58:714] [DEBUG] - org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795) - Autowiring by type from bean name 'sqlSessionFactory' via factory method to bean named 'dataSource'
[02:06:58:905] [DEBUG] - org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:529) - Parsed mapper file: 'file [D:\project\Jave_learn\OA_spring\target\classes\mappers\DepartmentMapper.xml]'
[02:06:58:935] [DEBUG] - org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:529) - Parsed mapper file: 'file [D:\project\Jave_learn\OA_spring\target\classes\mappers\EmployeeMapper.xml]'
[02:06:58:965] [DEBUG] - org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:529) - Parsed mapper file: 'file [D:\project\Jave_learn\OA_spring\target\classes\mappers\LeaveFormMapper.xml]'
[02:06:58:985] [DEBUG] - org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:529) - Parsed mapper file: 'file [D:\project\Jave_learn\OA_spring\target\classes\mappers\NodeMapper.xml]'
[02:06:59:005] [DEBUG] - org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:529) - Parsed mapper file: 'file [D:\project\Jave_learn\OA_spring\target\classes\mappers\NoticeMapper.xml]'
[02:06:59:025] [DEBUG] - org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:529) - Parsed mapper file: 'file [D:\project\Jave_learn\OA_spring\target\classes\mappers\ProcessFlowMapper.xml]'
[02:06:59:035] [DEBUG] - org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:529) - Parsed mapper file: 'file [D:\project\Jave_learn\OA_spring\target\classes\mappers\RbacMapper.xml]'
[02:06:59:055] [DEBUG] - org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:529) - Parsed mapper file: 'file [D:\project\Jave_learn\OA_spring\target\classes\mappers\UserMapper.xml]'
[02:06:59:065] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'sqlSessionTemplate'
[02:06:59:065] [DEBUG] - org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795) - Autowiring by type from bean name 'sqlSessionTemplate' via factory method to bean named 'sqlSessionFactory'
[02:06:59:115] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'admEmployeeController'
[02:06:59:125] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'employeeMapper'
[02:06:59:125] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'employeeService'
[02:06:59:135] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'admLeaveFormController'
[02:06:59:135] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'leaveFormMapper'
[02:06:59:135] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'cachingConfig'
[02:06:59:135] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'OAWebMvcConfig'
[02:06:59:145] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'springFoxConfig'
[02:06:59:145] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'employeeController'
[02:06:59:145] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'forwardController'
[02:06:59:155] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'indexController'
[02:06:59:155] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'userService'
[02:06:59:155] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'userMapper'
[02:06:59:155] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'nodeService'
[02:06:59:165] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'nodeMapper'
[02:06:59:165] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'leaveFormController'
[02:06:59:165] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'leaveFormService'
[02:06:59:165] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'processFlowMapper'
[02:06:59:175] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'noticeMapper'
[02:06:59:175] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'nodeController'
[02:06:59:185] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'noticeController'
[02:06:59:185] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'noticeService'
[02:06:59:185] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'userController'
[02:06:59:195] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'globalExceptionHandler'
[02:06:59:195] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'webLogAspect'
[02:06:59:205] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'redisCacheManager'
[02:06:59:205] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'redisConnectionFactory'
[02:06:59:205] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.data.redis.LettuceConnectionConfiguration'
[02:06:59:205] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'spring.redis-org.springframework.boot.autoconfigure.data.redis.RedisProperties'
[02:06:59:205] [DEBUG] - org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795) - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.data.redis.LettuceConnectionConfiguration' via constructor to bean named 'spring.redis-org.springframework.boot.autoconfigure.data.redis.RedisProperties'
[02:06:59:215] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'lettuceClientResources'
[02:06:59:215] [DEBUG] - io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(InternalLoggerFactory.java:43) - Using SLF4J as the default logging framework
[02:06:59:225] [DEBUG] - io.lettuce.core.resource.DefaultClientResources.<clinit>(DefaultClientResources.java:109) - -Dio.netty.eventLoopThreads: 8
[02:06:59:245] [DEBUG] - io.lettuce.core.resource.DefaultEventLoopGroupProvider.createEventLoopGroup(DefaultEventLoopGroupProvider.java:138) - Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
[02:06:59:275] [DEBUG] - io.netty.util.internal.InternalThreadLocalMap.<clinit>(InternalThreadLocalMap.java:54) - -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[02:06:59:275] [DEBUG] - io.netty.util.internal.InternalThreadLocalMap.<clinit>(InternalThreadLocalMap.java:57) - -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[02:06:59:285] [DEBUG] - io.netty.util.ResourceLeakDetector.<clinit>(ResourceLeakDetector.java:129) - -Dio.netty.leakDetection.level: simple
[02:06:59:285] [DEBUG] - io.netty.util.ResourceLeakDetector.<clinit>(ResourceLeakDetector.java:130) - -Dio.netty.leakDetection.targetRecords: 4
[02:06:59:295] [DEBUG] - io.netty.util.internal.PlatformDependent.isWindows0(PlatformDependent.java:987) - Platform: Windows
[02:06:59:295] [DEBUG] - io.netty.util.internal.PlatformDependent0.explicitNoUnsafeCause0(PlatformDependent0.java:396) - -Dio.netty.noUnsafe: false
[02:06:59:295] [DEBUG] - io.netty.util.internal.PlatformDependent0.javaVersion0(PlatformDependent0.java:852) - Java version: 8
[02:06:59:295] [DEBUG] - io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:121) - sun.misc.Unsafe.theUnsafe: available
[02:06:59:295] [DEBUG] - io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:145) - sun.misc.Unsafe.copyMemory: available
[02:06:59:295] [DEBUG] - io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:183) - java.nio.Buffer.address: available
[02:06:59:295] [DEBUG] - io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:244) - direct buffer constructor: available
[02:06:59:295] [DEBUG] - io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:314) - java.nio.Bits.unaligned: available, true
[02:06:59:295] [DEBUG] - io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:379) - jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[02:06:59:295] [DEBUG] - io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:386) - java.nio.DirectByteBuffer.<init>(long, int): available
[02:06:59:305] [DEBUG] - io.netty.util.internal.PlatformDependent.unsafeUnavailabilityCause0(PlatformDependent.java:1030) - sun.misc.Unsafe: available
[02:06:59:305] [DEBUG] - io.netty.util.internal.PlatformDependent.tmpdir0(PlatformDependent.java:1149) - -Dio.netty.tmpdir: C:\Users\w1216\AppData\Local\Temp (java.io.tmpdir)
[02:06:59:305] [DEBUG] - io.netty.util.internal.PlatformDependent.bitMode0(PlatformDependent.java:1228) - -Dio.netty.bitMode: 64 (sun.arch.data.model)
[02:06:59:305] [DEBUG] - io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:174) - -Dio.netty.maxDirectMemory: 1648361472 bytes
[02:06:59:305] [DEBUG] - io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:181) - -Dio.netty.uninitializedArrayAllocationThreshold: -1
[02:06:59:305] [DEBUG] - io.netty.util.internal.CleanerJava6.<clinit>(CleanerJava6.java:92) - java.nio.ByteBuffer.cleaner(): available
[02:06:59:305] [DEBUG] - io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:201) - -Dio.netty.noPreferDirect: false
[02:06:59:305] [DEBUG] - io.netty.util.ResourceLeakDetectorFactory$DefaultResourceLeakDetectorFactory.newResourceLeakDetector(ResourceLeakDetectorFactory.java:195) - Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@48cd319d
[02:06:59:305] [DEBUG] - io.netty.util.internal.PlatformDependent$Mpsc.<clinit>(PlatformDependent.java:891) - org.jctools-core.MpscChunkedArrayQueue: available
[02:06:59:325] [DEBUG] - reactor.util.Loggers$Slf4JLogger.debug(Loggers.java:249) - Using Slf4j logging framework
[02:06:59:355] [DEBUG] - io.lettuce.core.resource.DefaultClientResources.<init>(DefaultClientResources.java:190) - LatencyUtils/HdrUtils are not available, metrics are disabled
[02:06:59:365] [DEBUG] - org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795) - Autowiring by type from bean name 'redisConnectionFactory' via factory method to bean named 'lettuceClientResources'
[02:06:59:465] [DEBUG] - io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:142) - -Dio.netty.allocator.numHeapArenas: 16
[02:06:59:465] [DEBUG] - io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:143) - -Dio.netty.allocator.numDirectArenas: 16
[02:06:59:465] [DEBUG] - io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:145) - -Dio.netty.allocator.pageSize: 8192
[02:06:59:465] [DEBUG] - io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:150) - -Dio.netty.allocator.maxOrder: 11
[02:06:59:465] [DEBUG] - io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:154) - -Dio.netty.allocator.chunkSize: 16777216
[02:06:59:465] [DEBUG] - io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:155) - -Dio.netty.allocator.tinyCacheSize: 512
[02:06:59:465] [DEBUG] - io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:156) - -Dio.netty.allocator.smallCacheSize: 256
[02:06:59:465] [DEBUG] - io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:157) - -Dio.netty.allocator.normalCacheSize: 64
[02:06:59:465] [DEBUG] - io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:158) - -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[02:06:59:465] [DEBUG] - io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:159) - -Dio.netty.allocator.cacheTrimInterval: 8192
[02:06:59:465] [DEBUG] - io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:160) - -Dio.netty.allocator.cacheTrimIntervalMillis: 0
[02:06:59:465] [DEBUG] - io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:161) - -Dio.netty.allocator.useCacheForAllThreads: true
[02:06:59:465] [DEBUG] - io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:162) - -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[02:06:59:505] [DEBUG] - org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795) - Autowiring by type from bean name 'redisCacheManager' via factory method to bean named 'redisConnectionFactory'
[02:06:59:525] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'api'
[02:06:59:555] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration'
[02:06:59:555] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration'
[02:06:59:555] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'org.springframework.boot.context.properties.ConfigurationBeanFactoryMetadata'
[02:06:59:565] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration'
[02:06:59:565] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration'
[02:06:59:565] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'taskExecutorBuilder'
[02:06:59:565] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'spring.task.execution-org.springframework.boot.autoconfigure.task.TaskExecutionProperties'
[02:06:59:565] [DEBUG] - org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795) - Autowiring by type from bean name 'taskExecutorBuilder' via factory method to bean named 'spring.task.execution-org.springframework.boot.autoconfigure.task.TaskExecutionProperties'
[02:06:59:575] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration'
[02:06:59:575] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'defaultValidator'
[02:06:59:575] [DEBUG] - org.hibernate.validator.internal.engine.resolver.TraversableResolvers.getDefault(TraversableResolvers.java:60) - Cannot find javax.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
[02:06:59:585] [DEBUG] - org.hibernate.validator.internal.engine.resolver.TraversableResolvers.getDefault(TraversableResolvers.java:60) - Cannot find javax.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
[02:06:59:585] [DEBUG] - org.hibernate.validator.internal.engine.ConfigurationImpl.messageInterpolator(ConfigurationImpl.java:148) - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
[02:06:59:585] [DEBUG] - org.hibernate.validator.internal.engine.ConfigurationImpl.constraintValidatorFactory(ConfigurationImpl.java:180) - Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
[02:06:59:585] [DEBUG] - org.hibernate.validator.internal.engine.ConfigurationImpl.parameterNameProvider(ConfigurationImpl.java:194) - Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
[02:06:59:595] [DEBUG] - org.hibernate.validator.internal.xml.config.ValidationXmlParser.getValidationXmlInputStream(ValidationXmlParser.java:120) - Trying to load META-INF/validation.xml for XML based Validator configuration.
[02:06:59:595] [DEBUG] - org.hibernate.validator.internal.xml.config.ResourceLoaderHelper.getResettableInputStreamForPath(ResourceLoaderHelper.java:53) - Trying to load META-INF/validation.xml via user class loader
[02:06:59:595] [DEBUG] - org.hibernate.validator.internal.xml.config.ResourceLoaderHelper.getResettableInputStreamForPath(ResourceLoaderHelper.java:60) - Trying to load META-INF/validation.xml via TCCL
[02:06:59:595] [DEBUG] - org.hibernate.validator.internal.xml.config.ResourceLoaderHelper.getResettableInputStreamForPath(ResourceLoaderHelper.java:66) - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
[02:06:59:595] [DEBUG] - org.hibernate.validator.internal.xml.config.ValidationXmlParser.getValidationXmlInputStream(ValidationXmlParser.java:127) - No META-INF/validation.xml found. Using annotation based configuration only.
[02:06:59:605] [DEBUG] - org.hibernate.validator.internal.engine.ValidatorFactoryImpl.logValidatorFactoryScopedConfiguration(ValidatorFactoryImpl.java:578) - HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
[02:06:59:605] [DEBUG] - org.hibernate.validator.internal.engine.ValidatorFactoryImpl.logValidatorFactoryScopedConfiguration(ValidatorFactoryImpl.java:579) - HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
[02:06:59:605] [DEBUG] - org.hibernate.validator.internal.engine.ValidatorFactoryImpl.logValidatorFactoryScopedConfiguration(ValidatorFactoryImpl.java:580) - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
[02:06:59:605] [DEBUG] - org.hibernate.validator.internal.engine.ValidatorFactoryImpl.logValidatorFactoryScopedConfiguration(ValidatorFactoryImpl.java:581) - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
[02:06:59:605] [DEBUG] - org.hibernate.validator.internal.engine.ValidatorFactoryImpl.logValidatorFactoryScopedConfiguration(ValidatorFactoryImpl.java:582) - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
[02:06:59:635] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$WhitelabelErrorViewConfiguration'
[02:06:59:635] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'error'
[02:06:59:645] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'beanNameViewResolver'
[02:06:59:645] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration'
[02:06:59:645] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'spring.resources-org.springframework.boot.autoconfigure.web.ResourceProperties'
[02:06:59:645] [DEBUG] - org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795) - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration' via constructor to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@2cb3d0f7'
[02:06:59:645] [DEBUG] - org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795) - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration' via constructor to bean named 'spring.resources-org.springframework.boot.autoconfigure.web.ResourceProperties'
[02:06:59:645] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'conventionErrorViewResolver'
[02:06:59:655] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'errorAttributes'
[02:06:59:655] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'basicErrorController'
[02:06:59:655] [DEBUG] - org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795) - Autowiring by type from bean name 'basicErrorController' via factory method to bean named 'errorAttributes'
[02:06:59:655] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration'
[02:06:59:655] [DEBUG] - org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795) - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration' via constructor to bean named 'spring.resources-org.springframework.boot.autoconfigure.web.ResourceProperties'
[02:06:59:655] [DEBUG] - org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795) - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration' via constructor to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@77b21474'
[02:06:59:675] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter'
[02:06:59:675] [DEBUG] - org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795) - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter' via constructor to bean named 'spring.resources-org.springframework.boot.autoconfigure.web.ResourceProperties'
[02:06:59:675] [DEBUG] - org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795) - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter' via constructor to bean named 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
[02:06:59:675] [DEBUG] - org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795) - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter' via constructor to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@77b21474'
[02:06:59:685] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'org.springframework.data.web.config.SpringDataWebConfiguration'
[02:06:59:685] [DEBUG] - org.springframework.core.LocalVariableTableParameterNameDiscoverer.inspectClass(LocalVariableTableParameterNameDiscoverer.java:99) - Cannot find '.class' file for class [class org.springframework.data.web.config.SpringDataWebConfiguration$$EnhancerBySpringCGLIB$$fe36e29a] - unable to determine constructor/method parameter names
[02:06:59:685] [DEBUG] - org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795) - Autowiring by type from bean name 'org.springframework.data.web.config.SpringDataWebConfiguration' via constructor to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@2cb3d0f7'
[02:06:59:685] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'pageableCustomizer'
[02:06:59:685] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.data.web.SpringDataWebAutoConfiguration'
[02:06:59:685] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'spring.data.web-org.springframework.boot.autoconfigure.data.web.SpringDataWebProperties'
[02:06:59:695] [DEBUG] - org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795) - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.data.web.SpringDataWebAutoConfiguration' via constructor to bean named 'spring.data.web-org.springframework.boot.autoconfigure.data.web.SpringDataWebProperties'
[02:06:59:695] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'sortCustomizer'
[02:06:59:705] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'requestMappingHandlerAdapter'
[02:06:59:715] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'mvcContentNegotiationManager'
[02:06:59:715] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'mvcConversionService'
[02:06:59:745] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'mvcValidator'
[02:06:59:745] [DEBUG] - org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795) - Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcContentNegotiationManager'
[02:06:59:745] [DEBUG] - org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795) - Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcConversionService'
[02:06:59:745] [DEBUG] - org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795) - Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcValidator'
[02:06:59:755] [DEBUG] - org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795) - Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcContentNegotiationManager'
[02:06:59:755] [DEBUG] - org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795) - Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcConversionService'
[02:06:59:755] [DEBUG] - org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795) - Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcValidator'
[02:06:59:755] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'messageConverters'
[02:06:59:755] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration'
[02:06:59:765] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'stringHttpMessageConverter'
[02:06:59:765] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration'
[02:06:59:765] [DEBUG] - org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795) - Autowiring by type from bean name 'stringHttpMessageConverter' via factory method to bean named 'spring.http-org.springframework.boot.autoconfigure.http.HttpProperties'
[02:06:59:775] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'mappingJackson2HttpMessageConverter'
[02:06:59:775] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration'
[02:06:59:775] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'jacksonObjectMapper'
[02:06:59:775] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration'
[02:06:59:775] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration'
[02:06:59:785] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'standardJacksonObjectMapperBuilderCustomizer'
[02:06:59:785] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration'
[02:06:59:785] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties'
[02:06:59:785] [DEBUG] - org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795) - Autowiring by type from bean name 'standardJacksonObjectMapperBuilderCustomizer' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@2cb3d0f7'
[02:06:59:785] [DEBUG] - org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795) - Autowiring by type from bean name 'standardJacksonObjectMapperBuilderCustomizer' via factory method to bean named 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties'
[02:06:59:785] [DEBUG] - org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795) - Autowiring by type from bean name 'jacksonObjectMapperBuilder' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@2cb3d0f7'
[02:06:59:785] [DEBUG] - org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795) - Autowiring by type from bean name 'jacksonObjectMapperBuilder' via factory method to bean named 'standardJacksonObjectMapperBuilderCustomizer'
[02:06:59:785] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'parameterNamesModule'
[02:06:59:785] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration'
[02:06:59:795] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'jsonComponentModule'
[02:06:59:795] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration'
[02:06:59:805] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'jacksonGeoModule'
[02:06:59:805] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'org.springframework.data.web.config.SpringDataJacksonConfiguration'
[02:06:59:815] [DEBUG] - org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795) - Autowiring by type from bean name 'jacksonObjectMapper' via factory method to bean named 'jacksonObjectMapperBuilder'
[02:06:59:865] [DEBUG] - org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795) - Autowiring by type from bean name 'mappingJackson2HttpMessageConverter' via factory method to bean named 'jacksonObjectMapper'
[02:06:59:895] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'sortResolver'
[02:06:59:905] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'pageableResolver'
[02:06:59:915] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'applicationTaskExecutor'
[02:06:59:915] [DEBUG] - org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795) - Autowiring by type from bean name 'applicationTaskExecutor' via factory method to bean named 'taskExecutorBuilder'
[02:06:59:945] [DEBUG] - org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.initControllerAdviceCache(RequestMappingHandlerAdapter.java:615) - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
[02:06:59:965] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'requestMappingHandlerMapping'
[02:06:59:965] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'mvcResourceUrlProvider'
[02:06:59:975] [DEBUG] - org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795) - Autowiring by type from bean name 'requestMappingHandlerMapping' via factory method to bean named 'mvcContentNegotiationManager'
[02:06:59:975] [DEBUG] - org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795) - Autowiring by type from bean name 'requestMappingHandlerMapping' via factory method to bean named 'mvcConversionService'
[02:06:59:975] [DEBUG] - org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795) - Autowiring by type from bean name 'requestMappingHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
[02:06:59:975] [DEBUG] - org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795) - Autowiring by type from bean name 'requestMappingHandlerMapping' via factory method to bean named 'mvcContentNegotiationManager'
[02:06:59:975] [DEBUG] - org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795) - Autowiring by type from bean name 'requestMappingHandlerMapping' via factory method to bean named 'mvcConversionService'
[02:06:59:975] [DEBUG] - org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795) - Autowiring by type from bean name 'requestMappingHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
[02:07:00:015] [DEBUG] - org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.handlerMethodsInitialized(AbstractHandlerMethodMapping.java:351) - 24 mappings in 'requestMappingHandlerMapping'
[02:07:00:025] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'welcomePageHandlerMapping'
[02:07:00:025] [DEBUG] - org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795) - Autowiring by type from bean name 'welcomePageHandlerMapping' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@2cb3d0f7'
[02:07:00:025] [DEBUG] - org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795) - Autowiring by type from bean name 'welcomePageHandlerMapping' via factory method to bean named 'mvcConversionService'
[02:07:00:025] [DEBUG] - org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795) - Autowiring by type from bean name 'welcomePageHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
[02:07:00:045] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'mvcPathMatcher'
[02:07:00:045] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'mvcUrlPathHelper'
[02:07:00:045] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'viewControllerHandlerMapping'
[02:07:00:045] [DEBUG] - org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795) - Autowiring by type from bean name 'viewControllerHandlerMapping' via factory method to bean named 'mvcPathMatcher'
[02:07:00:045] [DEBUG] - org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795) - Autowiring by type from bean name 'viewControllerHandlerMapping' via factory method to bean named 'mvcUrlPathHelper'
[02:07:00:045] [DEBUG] - org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795) - Autowiring by type from bean name 'viewControllerHandlerMapping' via factory method to bean named 'mvcConversionService'
[02:07:00:045] [DEBUG] - org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795) - Autowiring by type from bean name 'viewControllerHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
[02:07:00:045] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'beanNameHandlerMapping'
[02:07:00:045] [DEBUG] - org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795) - Autowiring by type from bean name 'beanNameHandlerMapping' via factory method to bean named 'mvcConversionService'
[02:07:00:045] [DEBUG] - org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795) - Autowiring by type from bean name 'beanNameHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
[02:07:00:055] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'routerFunctionMapping'
[02:07:00:055] [DEBUG] - org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795) - Autowiring by type from bean name 'routerFunctionMapping' via factory method to bean named 'mvcConversionService'
[02:07:00:055] [DEBUG] - org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795) - Autowiring by type from bean name 'routerFunctionMapping' via factory method to bean named 'mvcResourceUrlProvider'
[02:07:00:065] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'resourceHandlerMapping'
[02:07:00:065] [DEBUG] - org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795) - Autowiring by type from bean name 'resourceHandlerMapping' via factory method to bean named 'mvcUrlPathHelper'
[02:07:00:065] [DEBUG] - org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795) - Autowiring by type from bean name 'resourceHandlerMapping' via factory method to bean named 'mvcPathMatcher'
[02:07:00:065] [DEBUG] - org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795) - Autowiring by type from bean name 'resourceHandlerMapping' via factory method to bean named 'mvcContentNegotiationManager'
[02:07:00:065] [DEBUG] - org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795) - Autowiring by type from bean name 'resourceHandlerMapping' via factory method to bean named 'mvcConversionService'
[02:07:00:065] [DEBUG] - org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795) - Autowiring by type from bean name 'resourceHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
[02:07:00:085] [DEBUG] - org.springframework.web.servlet.handler.SimpleUrlHandlerMapping.registerHandlers(SimpleUrlHandlerMapping.java:173) - Patterns [/webjars/**, /**, /swagger-ui.html] in 'resourceHandlerMapping'
[02:07:00:085] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'defaultServletHandlerMapping'
[02:07:00:085] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'handlerFunctionAdapter'
[02:07:00:085] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'mvcUriComponentsContributor'
[02:07:00:085] [DEBUG] - org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795) - Autowiring by type from bean name 'mvcUriComponentsContributor' via factory method to bean named 'mvcConversionService'
[02:07:00:085] [DEBUG] - org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795) - Autowiring by type from bean name 'mvcUriComponentsContributor' via factory method to bean named 'requestMappingHandlerAdapter'
[02:07:00:095] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'httpRequestHandlerAdapter'
[02:07:00:095] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'simpleControllerHandlerAdapter'
[02:07:00:095] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'handlerExceptionResolver'
[02:07:00:095] [DEBUG] - org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795) - Autowiring by type from bean name 'handlerExceptionResolver' via factory method to bean named 'mvcContentNegotiationManager'
[02:07:00:095] [DEBUG] - org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.initExceptionHandlerAdviceCache(ExceptionHandlerExceptionResolver.java:297) - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
[02:07:00:105] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'mvcViewResolver'
[02:07:00:105] [DEBUG] - org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795) - Autowiring by type from bean name 'mvcViewResolver' via factory method to bean named 'mvcContentNegotiationManager'
[02:07:00:105] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'defaultViewResolver'
[02:07:00:115] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'viewResolver'
[02:07:00:115] [DEBUG] - org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795) - Autowiring by type from bean name 'viewResolver' via factory method to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@77b21474'
[02:07:00:125] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'freeMarkerViewResolver'
[02:07:00:125] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.freemarker.FreeMarkerServletWebConfiguration'
[02:07:00:125] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'spring.freemarker-org.springframework.boot.autoconfigure.freemarker.FreeMarkerProperties'
[02:07:00:135] [DEBUG] - org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795) - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.freemarker.FreeMarkerServletWebConfiguration' via constructor to bean named 'spring.freemarker-org.springframework.boot.autoconfigure.freemarker.FreeMarkerProperties'
[02:07:00:145] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceJmxConfiguration$Hikari'
[02:07:00:145] [DEBUG] - org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795) - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.jdbc.DataSourceJmxConfiguration$Hikari' via constructor to bean named 'dataSource'
[02:07:00:145] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceJmxConfiguration'
[02:07:00:145] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration$PooledDataSourceConfiguration'
[02:07:00:145] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration$HikariPoolDataSourceMetadataProviderConfiguration'
[02:07:00:165] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'hikariPoolDataSourceMetadataProvider'
[02:07:00:175] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration'
[02:07:00:175] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializationConfiguration'
[02:07:00:175] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration'
[02:07:00:175] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'com.github.pagehelper.autoconfigure.PageHelperAutoConfiguration'
[02:07:00:175] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'pagehelper-com.github.pagehelper.autoconfigure.PageHelperProperties'
[02:07:00:175] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'pageHelperProperties'
[02:07:00:235] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jmx.JmxAutoConfiguration'
[02:07:00:235] [DEBUG] - org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795) - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.jmx.JmxAutoConfiguration' via constructor to bean named 'environment'
[02:07:00:235] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'mbeanExporter'
[02:07:00:235] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'objectNamingStrategy'
[02:07:00:235] [DEBUG] - org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795) - Autowiring by type from bean name 'mbeanExporter' via factory method to bean named 'objectNamingStrategy'
[02:07:00:235] [DEBUG] - org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795) - Autowiring by type from bean name 'mbeanExporter' via factory method to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@77b21474'
[02:07:00:245] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'mbeanServer'
[02:07:00:245] [DEBUG] - org.springframework.jmx.support.JmxUtils.locateMBeanServer(JmxUtils.java:127) - Found MBeanServer: com.sun.jmx.mbeanserver.JmxMBeanServer@5056dfcb
[02:07:00:265] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.admin.SpringApplicationAdminJmxAutoConfiguration'
[02:07:00:265] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'springApplicationAdminRegistrar'
[02:07:00:265] [DEBUG] - org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795) - Autowiring by type from bean name 'springApplicationAdminRegistrar' via factory method to bean named 'environment'
[02:07:00:265] [DEBUG] - org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar.afterPropertiesSet(SpringApplicationAdminMXBeanRegistrar.java:131) - Application Admin MBean registered with name 'org.springframework.boot:type=Admin,name=SpringApplication'
[02:07:00:265] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$AspectJAutoProxyingConfiguration$CglibAutoProxyConfiguration'
[02:07:00:275] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$AspectJAutoProxyingConfiguration'
[02:07:00:275] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.aop.AopAutoConfiguration'
[02:07:00:275] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration'
[02:07:00:275] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'redisTemplate'
[02:07:00:275] [DEBUG] - org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795) - Autowiring by type from bean name 'redisTemplate' via factory method to bean named 'redisConnectionFactory'
[02:07:00:385] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'stringRedisTemplate'
[02:07:00:385] [DEBUG] - org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795) - Autowiring by type from bean name 'stringRedisTemplate' via factory method to bean named 'redisConnectionFactory'
[02:07:00:395] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration'
[02:07:00:395] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.dao.PersistenceExceptionTranslationAutoConfiguration'
[02:07:00:395] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.data.redis.RedisReactiveAutoConfiguration'
[02:07:00:405] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'reactiveRedisTemplate'
[02:07:00:405] [DEBUG] - org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795) - Autowiring by type from bean name 'reactiveRedisTemplate' via factory method to bean named 'redisConnectionFactory'
[02:07:00:405] [DEBUG] - org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795) - Autowiring by type from bean name 'reactiveRedisTemplate' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@2cb3d0f7'
[02:07:00:455] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'reactiveStringRedisTemplate'
[02:07:00:455] [DEBUG] - org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795) - Autowiring by type from bean name 'reactiveStringRedisTemplate' via factory method to bean named 'redisConnectionFactory'
[02:07:00:465] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.data.redis.RedisRepositoriesAutoConfiguration'
[02:07:00:465] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'keyValueMappingContext'
[02:07:00:485] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'redisCustomConversions'
[02:07:00:495] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'redisReferenceResolver'
[02:07:00:495] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'redisConverter'
[02:07:00:515] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'redisKeyValueAdapter'
[02:07:00:535] [DEBUG] - org.springframework.data.redis.listener.RedisMessageListenerContainer.lazyListen(RedisMessageListenerContainer.java:481) - Postpone listening for Redis messages until actual listeners are added
[02:07:00:535] [DEBUG] - org.springframework.data.redis.listener.RedisMessageListenerContainer.start(RedisMessageListenerContainer.java:217) - Started RedisMessageListenerContainer
[02:07:00:545] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'redisKeyValueTemplate'
[02:07:00:565] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration'
[02:07:00:565] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'org.springframework.data.web.config.ProjectingArgumentResolverRegistrar'
[02:07:00:565] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'freeMarkerConfigurer'
[02:07:00:625] [DEBUG] - org.springframework.ui.freemarker.FreeMarkerConfigurationFactory.getTemplateLoaderForPath(FreeMarkerConfigurationFactory.java:347) - Template loader path [class path resource [templates/]] resolved to file path [D:\project\Jave_learn\OA_spring\target\classes\templates]
[02:07:00:625] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'freeMarkerConfiguration'
[02:07:00:635] [DEBUG] - org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795) - Autowiring by type from bean name 'freeMarkerConfiguration' via factory method to bean named 'freeMarkerConfigurer'
[02:07:00:655] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.freemarker.FreeMarkerAutoConfiguration'
[02:07:00:655] [DEBUG] - org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795) - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.freemarker.FreeMarkerAutoConfiguration' via constructor to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@2cb3d0f7'
[02:07:00:655] [DEBUG] - org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795) - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.freemarker.FreeMarkerAutoConfiguration' via constructor to bean named 'spring.freemarker-org.springframework.boot.autoconfigure.freemarker.FreeMarkerProperties'
[02:07:00:665] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration'
[02:07:00:665] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'spring.info-org.springframework.boot.autoconfigure.info.ProjectInfoProperties'
[02:07:00:665] [DEBUG] - org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795) - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration' via constructor to bean named 'spring.info-org.springframework.boot.autoconfigure.info.ProjectInfoProperties'
[02:07:00:665] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.JdbcTemplateConfiguration'
[02:07:00:665] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'jdbcTemplate'
[02:07:00:665] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'spring.jdbc-org.springframework.boot.autoconfigure.jdbc.JdbcProperties'
[02:07:00:665] [DEBUG] - org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795) - Autowiring by type from bean name 'jdbcTemplate' via factory method to bean named 'dataSource'
[02:07:00:665] [DEBUG] - org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795) - Autowiring by type from bean name 'jdbcTemplate' via factory method to bean named 'spring.jdbc-org.springframework.boot.autoconfigure.jdbc.JdbcProperties'
[02:07:00:705] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.NamedParameterJdbcTemplateConfiguration'
[02:07:00:705] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'namedParameterJdbcTemplate'
[02:07:00:705] [DEBUG] - org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795) - Autowiring by type from bean name 'namedParameterJdbcTemplate' via factory method to bean named 'jdbcTemplate'
[02:07:00:715] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration'
[02:07:00:725] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.security.oauth2.resource.servlet.OAuth2ResourceServerAutoConfiguration'
[02:07:00:725] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'spring.security.oauth2.resourceserver-org.springframework.boot.autoconfigure.security.oauth2.resource.OAuth2ResourceServerProperties'
[02:07:00:725] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.task.TaskSchedulingAutoConfiguration'
[02:07:00:725] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'taskSchedulerBuilder'
[02:07:00:725] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'spring.task.scheduling-org.springframework.boot.autoconfigure.task.TaskSchedulingProperties'
[02:07:00:725] [DEBUG] - org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795) - Autowiring by type from bean name 'taskSchedulerBuilder' via factory method to bean named 'spring.task.scheduling-org.springframework.boot.autoconfigure.task.TaskSchedulingProperties'
[02:07:00:725] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$DataSourceTransactionManagerConfiguration'
[02:07:00:725] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'transactionManager'
[02:07:00:725] [DEBUG] - org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795) - Autowiring by type from bean name 'transactionManager' via factory method to bean named 'dataSource'
[02:07:00:725] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'platformTransactionManagerCustomizers'
[02:07:00:735] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration'
[02:07:00:735] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'spring.transaction-org.springframework.boot.autoconfigure.transaction.TransactionProperties'
[02:07:00:735] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration'
[02:07:00:745] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$EnableTransactionManagementConfiguration$CglibAutoProxyConfiguration'
[02:07:00:745] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$EnableTransactionManagementConfiguration'
[02:07:00:745] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$TransactionTemplateConfiguration'
[02:07:00:745] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'transactionTemplate'
[02:07:00:745] [DEBUG] - org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795) - Autowiring by type from bean name 'transactionTemplate' via factory method to bean named 'transactionManager'
[02:07:00:745] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.client.RestTemplateAutoConfiguration'
[02:07:00:745] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'restTemplateBuilder'
[02:07:00:755] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration'
[02:07:00:755] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'multipartResolver'
[02:07:00:775] [DEBUG] - org.springframework.jmx.export.MBeanExporter.afterSingletonsInstantiated(MBeanExporter.java:434) - Registering beans for JMX exposure on startup
[02:07:00:775] [DEBUG] - org.springframework.jmx.export.MBeanExporter.registerBeans(MBeanExporter.java:541) - Autodetecting user-defined JMX MBeans
[02:07:00:775] [DEBUG] - org.springframework.jmx.export.MBeanExporter.autodetect(MBeanExporter.java:896) - Bean with name 'dataSource' has been autodetected for JMX exposure
[02:07:00:785] [DEBUG] - org.springframework.jmx.export.MBeanExporter.registerBeanInstance(MBeanExporter.java:669) - Located MBean 'dataSource': registering with JMX server as MBean [com.zaxxer.hikari:name=dataSource,type=HikariDataSource]
[02:07:00:805] [DEBUG] - org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener.logAutoConfigurationReport(ConditionEvaluationReportLoggingListener.java:126) - 


============================
CONDITIONS EVALUATION REPORT
============================


Positive matches:
-----------------

   AopAutoConfiguration matched:
      - @ConditionalOnProperty (spring.aop.auto=true) matched (OnPropertyCondition)

   AopAutoConfiguration.AspectJAutoProxyingConfiguration matched:
      - @ConditionalOnClass found required class 'org.aspectj.weaver.Advice' (OnClassCondition)

   AopAutoConfiguration.AspectJAutoProxyingConfiguration.CglibAutoProxyConfiguration matched:
      - @ConditionalOnProperty (spring.aop.proxy-target-class=true) matched (OnPropertyCondition)

   DataSourceAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType' (OnClassCondition)

   DataSourceAutoConfiguration.PooledDataSourceConfiguration matched:
      - AnyNestedCondition 1 matched 1 did not; NestedCondition on DataSourceAutoConfiguration.PooledDataSourceCondition.PooledDataSourceAvailable PooledDataSource found supported DataSource; NestedCondition on DataSourceAutoConfiguration.PooledDataSourceCondition.ExplicitType @ConditionalOnProperty (spring.datasource.type) did not find property 'type' (DataSourceAutoConfiguration.PooledDataSourceCondition)
      - @ConditionalOnBean (types: javax.sql.DataSource,javax.sql.XADataSource; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceConfiguration.Hikari matched:
      - @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)
      - @ConditionalOnProperty (spring.datasource.type=com.zaxxer.hikari.HikariDataSource) matched (OnPropertyCondition)
      - @ConditionalOnBean (types: javax.sql.DataSource; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceJmxConfiguration matched:
      - @ConditionalOnProperty (spring.jmx.enabled=true) matched (OnPropertyCondition)

   DataSourceJmxConfiguration.Hikari matched:
      - @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)
      - @ConditionalOnBean (types: javax.sql.DataSource; SearchStrategy: all) found a primary bean from beans 'dataSource' (OnBeanCondition)

   DataSourcePoolMetadataProvidersConfiguration.HikariPoolDataSourceMetadataProviderConfiguration matched:
      - @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)

   DataSourceTransactionManagerAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.jdbc.core.JdbcTemplate', 'org.springframework.transaction.PlatformTransactionManager' (OnClassCondition)

   DataSourceTransactionManagerAutoConfiguration.DataSourceTransactionManagerConfiguration matched:
      - @ConditionalOnBean (types: javax.sql.DataSource; SearchStrategy: all) found a primary bean from beans 'dataSource' (OnBeanCondition)

   DataSourceTransactionManagerAutoConfiguration.DataSourceTransactionManagerConfiguration#transactionManager matched:
      - @ConditionalOnBean (types: org.springframework.transaction.PlatformTransactionManager; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DispatcherServletAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   DispatcherServletAutoConfiguration.DispatcherServletConfiguration matched:
      - @ConditionalOnClass found required class 'javax.servlet.ServletRegistration' (OnClassCondition)
      - Default DispatcherServlet did not find dispatcher servlet beans (DispatcherServletAutoConfiguration.DefaultDispatcherServletCondition)

   DispatcherServletAutoConfiguration.DispatcherServletRegistrationConfiguration matched:
      - @ConditionalOnClass found required class 'javax.servlet.ServletRegistration' (OnClassCondition)
      - DispatcherServlet Registration did not find servlet registration bean (DispatcherServletAutoConfiguration.DispatcherServletRegistrationCondition)

   DispatcherServletAutoConfiguration.DispatcherServletRegistrationConfiguration#dispatcherServletRegistration matched:
      - @ConditionalOnBean (names: dispatcherServlet types: org.springframework.web.servlet.DispatcherServlet; SearchStrategy: all) found bean 'dispatcherServlet' (OnBeanCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration matched:
      - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.TomcatWebServerFactoryCustomizerConfiguration matched:
      - @ConditionalOnClass found required classes 'org.apache.catalina.startup.Tomcat', 'org.apache.coyote.UpgradeProtocol' (OnClassCondition)

   ErrorMvcAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   ErrorMvcAutoConfiguration#basicErrorController matched:
      - @ConditionalOnBean (types: org.springframework.boot.web.servlet.error.ErrorController; SearchStrategy: current) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration#errorAttributes matched:
      - @ConditionalOnBean (types: org.springframework.boot.web.servlet.error.ErrorAttributes; SearchStrategy: current) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.DefaultErrorViewResolverConfiguration#conventionErrorViewResolver matched:
      - @ConditionalOnBean (types: org.springframework.web.servlet.DispatcherServlet; SearchStrategy: all) found bean 'dispatcherServlet'; @ConditionalOnBean (types: org.springframework.boot.autoconfigure.web.servlet.error.ErrorViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration matched:
      - @ConditionalOnProperty (server.error.whitelabel.enabled) matched (OnPropertyCondition)
      - ErrorTemplate Missing did not find error template view (ErrorMvcAutoConfiguration.ErrorTemplateMissingCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration#beanNameViewResolver matched:
      - @ConditionalOnBean (types: org.springframework.web.servlet.view.BeanNameViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration#defaultErrorView matched:
      - @ConditionalOnBean (names: error; SearchStrategy: all) did not find any beans (OnBeanCondition)

   FreeMarkerAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'freemarker.template.Configuration', 'org.springframework.ui.freemarker.FreeMarkerConfigurationFactory' (OnClassCondition)

   FreeMarkerServletWebConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   FreeMarkerServletWebConfiguration#freeMarkerConfigurer matched:
      - @ConditionalOnBean (types: org.springframework.web.servlet.view.freemarker.FreeMarkerConfig; SearchStrategy: all) did not find any beans (OnBeanCondition)

   FreeMarkerServletWebConfiguration#freeMarkerViewResolver matched:
      - @ConditionalOnProperty (spring.freemarker.enabled) matched (OnPropertyCondition)
      - @ConditionalOnBean (names: freeMarkerViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   GenericCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.GenericCacheConfiguration automatic cache type (CacheCondition)

   HttpEncodingAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.filter.CharacterEncodingFilter' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (spring.http.encoding.enabled) matched (OnPropertyCondition)

   HttpEncodingAutoConfiguration#characterEncodingFilter matched:
      - @ConditionalOnBean (types: org.springframework.web.filter.CharacterEncodingFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpMessageConvertersAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.HttpMessageConverter' (OnClassCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on HttpMessageConvertersAutoConfiguration.NotReactiveWebApplicationCondition.ReactiveWebApplication did not find reactive web application classes (HttpMessageConvertersAutoConfiguration.NotReactiveWebApplicationCondition)

   HttpMessageConvertersAutoConfiguration#messageConverters matched:
      - @ConditionalOnBean (types: org.springframework.boot.autoconfigure.http.HttpMessageConverters; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpMessageConvertersAutoConfiguration.StringHttpMessageConverterConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.StringHttpMessageConverter' (OnClassCondition)

   HttpMessageConvertersAutoConfiguration.StringHttpMessageConverterConfiguration#stringHttpMessageConverter matched:
      - @ConditionalOnBean (types: org.springframework.http.converter.StringHttpMessageConverter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.databind.ObjectMapper' (OnClassCondition)

   JacksonAutoConfiguration.Jackson2ObjectMapperBuilderCustomizerConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperBuilderConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperBuilderConfiguration#jacksonObjectMapperBuilder matched:
      - @ConditionalOnBean (types: org.springframework.http.converter.json.Jackson2ObjectMapperBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration.JacksonObjectMapperConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperConfiguration#jacksonObjectMapper matched:
      - @ConditionalOnBean (types: com.fasterxml.jackson.databind.ObjectMapper; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration.ParameterNamesModuleConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.module.paramnames.ParameterNamesModule' (OnClassCondition)

   JacksonAutoConfiguration.ParameterNamesModuleConfiguration#parameterNamesModule matched:
      - @ConditionalOnBean (types: com.fasterxml.jackson.module.paramnames.ParameterNamesModule; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2HttpMessageConverterConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.databind.ObjectMapper' (OnClassCondition)
      - @ConditionalOnProperty (spring.http.converters.preferred-json-mapper=jackson) matched (OnPropertyCondition)
      - @ConditionalOnBean (types: com.fasterxml.jackson.databind.ObjectMapper; SearchStrategy: all) found bean 'jacksonObjectMapper' (OnBeanCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2HttpMessageConverterConfiguration#mappingJackson2HttpMessageConverter matched:
      - @ConditionalOnBean (types: org.springframework.http.converter.json.MappingJackson2HttpMessageConverter ignored: org.springframework.hateoas.server.mvc.TypeConstrainedMappingJackson2HttpMessageConverter,org.springframework.data.rest.webmvc.alps.AlpsJsonHttpMessageConverter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JdbcTemplateAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.core.JdbcTemplate' (OnClassCondition)
      - @ConditionalOnBean (types: javax.sql.DataSource; SearchStrategy: all) found a primary bean from beans 'dataSource' (OnBeanCondition)

   JdbcTemplateConfiguration matched:
      - @ConditionalOnBean (types: org.springframework.jdbc.core.JdbcOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JmxAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.jmx.export.MBeanExporter' (OnClassCondition)
      - @ConditionalOnProperty (spring.jmx.enabled=true) matched (OnPropertyCondition)

   JmxAutoConfiguration#mbeanExporter matched:
      - @ConditionalOnBean (types: org.springframework.jmx.export.MBeanExporter; SearchStrategy: current) did not find any beans (OnBeanCondition)

   JmxAutoConfiguration#mbeanServer matched:
      - @ConditionalOnBean (types: javax.management.MBeanServer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JmxAutoConfiguration#objectNamingStrategy matched:
      - @ConditionalOnBean (types: org.springframework.jmx.export.naming.ObjectNamingStrategy; SearchStrategy: current) did not find any beans (OnBeanCondition)

   LettuceConnectionConfiguration matched:
      - @ConditionalOnClass found required class 'io.lettuce.core.RedisClient' (OnClassCondition)

   LettuceConnectionConfiguration#lettuceClientResources matched:
      - @ConditionalOnBean (types: io.lettuce.core.resource.ClientResources; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LettuceConnectionConfiguration#redisConnectionFactory matched:
      - @ConditionalOnBean (types: org.springframework.data.redis.connection.RedisConnectionFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MultipartAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'org.springframework.web.multipart.support.StandardServletMultipartResolver', 'javax.servlet.MultipartConfigElement' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (spring.servlet.multipart.enabled) matched (OnPropertyCondition)

   MultipartAutoConfiguration#multipartConfigElement matched:
      - @ConditionalOnBean (types: javax.servlet.MultipartConfigElement,org.springframework.web.multipart.commons.CommonsMultipartResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MultipartAutoConfiguration#multipartResolver matched:
      - @ConditionalOnBean (types: org.springframework.web.multipart.MultipartResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MybatisAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.apache.ibatis.session.SqlSessionFactory', 'org.mybatis.spring.SqlSessionFactoryBean' (OnClassCondition)
      - @ConditionalOnBean (types: javax.sql.DataSource; SearchStrategy: all) found bean 'dataSource' (OnBeanCondition)

   MybatisAutoConfiguration#sqlSessionFactory matched:
      - @ConditionalOnBean (types: org.apache.ibatis.session.SqlSessionFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MybatisAutoConfiguration#sqlSessionTemplate matched:
      - @ConditionalOnBean (types: org.mybatis.spring.SqlSessionTemplate; SearchStrategy: all) did not find any beans (OnBeanCondition)

   NamedParameterJdbcTemplateConfiguration matched:
      - @ConditionalOnBean (types: org.springframework.jdbc.core.JdbcTemplate; SearchStrategy: all) found a primary bean from beans 'jdbcTemplate'; @ConditionalOnBean (types: org.springframework.jdbc.core.namedparam.NamedParameterJdbcOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   NoOpCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.NoOpCacheConfiguration automatic cache type (CacheCondition)

   OAuth2ResourceServerAutoConfiguration matched:
      - found 'session' scope (OnWebApplicationCondition)

   PageHelperAutoConfiguration matched:
      - @ConditionalOnBean (types: org.apache.ibatis.session.SqlSessionFactory; SearchStrategy: all) found bean 'sqlSessionFactory' (OnBeanCondition)

   PersistenceExceptionTranslationAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor' (OnClassCondition)

   PersistenceExceptionTranslationAutoConfiguration#persistenceExceptionTranslationPostProcessor matched:
      - @ConditionalOnProperty (spring.dao.exceptiontranslation.enabled) matched (OnPropertyCondition)
      - @ConditionalOnBean (types: org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   PropertyPlaceholderAutoConfiguration#propertySourcesPlaceholderConfigurer matched:
      - @ConditionalOnBean (types: org.springframework.context.support.PropertySourcesPlaceholderConfigurer; SearchStrategy: current) did not find any beans (OnBeanCondition)

   RedisAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.data.redis.core.RedisOperations' (OnClassCondition)

   RedisAutoConfiguration#redisTemplate matched:
      - @ConditionalOnBean (names: redisTemplate; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RedisAutoConfiguration#stringRedisTemplate matched:
      - @ConditionalOnBean (types: org.springframework.data.redis.core.StringRedisTemplate; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RedisCacheConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.data.redis.connection.RedisConnectionFactory' (OnClassCondition)
      - Cache org.springframework.boot.autoconfigure.cache.RedisCacheConfiguration automatic cache type (CacheCondition)

   RedisReactiveAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.data.redis.connection.ReactiveRedisConnectionFactory', 'org.springframework.data.redis.core.ReactiveRedisTemplate', 'reactor.core.publisher.Flux' (OnClassCondition)

   RedisReactiveAutoConfiguration#reactiveRedisTemplate matched:
      - @ConditionalOnBean (types: org.springframework.data.redis.connection.ReactiveRedisConnectionFactory; SearchStrategy: all) found bean 'redisConnectionFactory'; @ConditionalOnBean (names: reactiveRedisTemplate; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RedisReactiveAutoConfiguration#reactiveStringRedisTemplate matched:
      - @ConditionalOnBean (types: org.springframework.data.redis.connection.ReactiveRedisConnectionFactory; SearchStrategy: all) found bean 'redisConnectionFactory'; @ConditionalOnBean (names: reactiveStringRedisTemplate; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RedisRepositoriesAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.data.redis.repository.configuration.EnableRedisRepositories' (OnClassCondition)
      - @ConditionalOnProperty (spring.data.redis.repositories.enabled=true) matched (OnPropertyCondition)
      - @ConditionalOnBean (types: org.springframework.data.redis.connection.RedisConnectionFactory; SearchStrategy: all) found bean 'redisConnectionFactory'; @ConditionalOnBean (types: org.springframework.data.redis.repository.support.RedisRepositoryFactoryBean; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RestTemplateAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.client.RestTemplate' (OnClassCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on RestTemplateAutoConfiguration.NotReactiveWebApplicationCondition.ReactiveWebApplication did not find reactive web application classes (RestTemplateAutoConfiguration.NotReactiveWebApplicationCondition)

   RestTemplateAutoConfiguration#restTemplateBuilder matched:
      - @ConditionalOnBean (types: org.springframework.boot.web.client.RestTemplateBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ServletWebServerFactoryAutoConfiguration matched:
      - @ConditionalOnClass found required class 'javax.servlet.ServletRequest' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   ServletWebServerFactoryAutoConfiguration#tomcatServletWebServerFactoryCustomizer matched:
      - @ConditionalOnClass found required class 'org.apache.catalina.startup.Tomcat' (OnClassCondition)

   ServletWebServerFactoryConfiguration.EmbeddedTomcat matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'org.apache.catalina.startup.Tomcat', 'org.apache.coyote.UpgradeProtocol' (OnClassCondition)
      - @ConditionalOnBean (types: org.springframework.boot.web.servlet.server.ServletWebServerFactory; SearchStrategy: current) did not find any beans (OnBeanCondition)

   SimpleCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.SimpleCacheConfiguration automatic cache type (CacheCondition)

   SpringApplicationAdminJmxAutoConfiguration matched:
      - @ConditionalOnProperty (spring.application.admin.enabled=true) matched (OnPropertyCondition)

   SpringApplicationAdminJmxAutoConfiguration#springApplicationAdminRegistrar matched:
      - @ConditionalOnBean (types: org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDataWebAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.data.web.PageableHandlerMethodArgumentResolver', 'org.springframework.web.servlet.config.annotation.WebMvcConfigurer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnBean (types: org.springframework.data.web.PageableHandlerMethodArgumentResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDataWebAutoConfiguration#pageableCustomizer matched:
      - @ConditionalOnBean (types: org.springframework.data.web.config.PageableHandlerMethodArgumentResolverCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDataWebAutoConfiguration#sortCustomizer matched:
      - @ConditionalOnBean (types: org.springframework.data.web.config.SortHandlerMethodArgumentResolverCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskExecutionAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor' (OnClassCondition)

   TaskExecutionAutoConfiguration#applicationTaskExecutor matched:
      - @ConditionalOnBean (types: java.util.concurrent.Executor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskExecutionAutoConfiguration#taskExecutorBuilder matched:
      - @ConditionalOnBean (types: org.springframework.boot.task.TaskExecutorBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskSchedulingAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler' (OnClassCondition)

   TaskSchedulingAutoConfiguration#taskSchedulerBuilder matched:
      - @ConditionalOnBean (types: org.springframework.boot.task.TaskSchedulerBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.transaction.PlatformTransactionManager' (OnClassCondition)

   TransactionAutoConfiguration#platformTransactionManagerCustomizers matched:
      - @ConditionalOnBean (types: org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizers; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration matched:
      - @ConditionalOnBean (types: org.springframework.transaction.TransactionManager; SearchStrategy: all) found bean 'transactionManager'; @ConditionalOnBean (types: org.springframework.transaction.annotation.AbstractTransactionManagementConfiguration; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration.CglibAutoProxyConfiguration matched:
      - @ConditionalOnProperty (spring.aop.proxy-target-class=true) matched (OnPropertyCondition)

   TransactionAutoConfiguration.TransactionTemplateConfiguration matched:
      - @ConditionalOnBean (types: org.springframework.transaction.PlatformTransactionManager; SearchStrategy: all) found a primary bean from beans 'transactionManager' (OnBeanCondition)

   TransactionAutoConfiguration.TransactionTemplateConfiguration#transactionTemplate matched:
      - @ConditionalOnBean (types: org.springframework.transaction.support.TransactionOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ValidationAutoConfiguration matched:
      - @ConditionalOnClass found required class 'javax.validation.executable.ExecutableValidator' (OnClassCondition)
      - @ConditionalOnResource found location classpath:META-INF/services/javax.validation.spi.ValidationProvider (OnResourceCondition)

   ValidationAutoConfiguration#defaultValidator matched:
      - @ConditionalOnBean (types: javax.validation.Validator; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ValidationAutoConfiguration#methodValidationPostProcessor matched:
      - @ConditionalOnBean (types: org.springframework.validation.beanvalidation.MethodValidationPostProcessor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'org.springframework.web.servlet.DispatcherServlet', 'org.springframework.web.servlet.config.annotation.WebMvcConfigurer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnBean (types: org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration#formContentFilter matched:
      - @ConditionalOnProperty (spring.mvc.formcontent.filter.enabled) matched (OnPropertyCondition)
      - @ConditionalOnBean (types: org.springframework.web.filter.FormContentFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#defaultViewResolver matched:
      - @ConditionalOnBean (types: org.springframework.web.servlet.view.InternalResourceViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#requestContextFilter matched:
      - @ConditionalOnBean (types: org.springframework.web.context.request.RequestContextListener,org.springframework.web.filter.RequestContextFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#viewResolver matched:
      - @ConditionalOnBean (types: org.springframework.web.servlet.ViewResolver; SearchStrategy: all) found beans 'defaultViewResolver', 'beanNameViewResolver', 'mvcViewResolver'; @ConditionalOnBean (names: viewResolver types: org.springframework.web.servlet.view.ContentNegotiatingViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebSocketServletAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'javax.websocket.server.ServerContainer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   WebSocketServletAutoConfiguration.TomcatWebSocketConfiguration matched:
      - @ConditionalOnClass found required classes 'org.apache.catalina.startup.Tomcat', 'org.apache.tomcat.websocket.server.WsSci' (OnClassCondition)

   WebSocketServletAutoConfiguration.TomcatWebSocketConfiguration#websocketServletWebServerCustomizer matched:
      - @ConditionalOnBean (names: websocketServletWebServerCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)


Negative matches:
-----------------

   ActiveMQAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.jms.ConnectionFactory' (OnClassCondition)

   AopAutoConfiguration.AspectJAutoProxyingConfiguration.JdkDynamicAutoProxyConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.aop.proxy-target-class=false) did not find property 'proxy-target-class' (OnPropertyCondition)

   AopAutoConfiguration.ClassProxyingConfiguration:
      Did not match:
         - @ConditionalOnMissingClass found unwanted class 'org.aspectj.weaver.Advice' (OnClassCondition)

   ArtemisAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.jms.ConnectionFactory' (OnClassCondition)

   BatchAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.batch.core.launch.JobLauncher' (OnClassCondition)

   CacheAutoConfiguration:
      Did not match:
         - @ConditionalOnBean (names: cacheResolver types: org.springframework.cache.CacheManager; SearchStrategy: all) found beans of type 'org.springframework.cache.CacheManager' redisCacheManager (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.cache.CacheManager' (OnClassCondition)

   CacheAutoConfiguration.CacheManagerEntityManagerFactoryDependsOnPostProcessor:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean' (OnClassCondition)
         - Ancestor org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration did not match (ConditionEvaluationReport.AncestorsMatchedCondition)

   CaffeineCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.github.benmanes.caffeine.cache.Caffeine' (OnClassCondition)

   CassandraAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.driver.core.Cluster' (OnClassCondition)

   CassandraDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.driver.core.Cluster' (OnClassCondition)

   CassandraReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.driver.core.Cluster' (OnClassCondition)

   CassandraReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.cassandra.ReactiveSession' (OnClassCondition)

   CassandraRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.driver.core.Session' (OnClassCondition)

   ClientHttpConnectorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   CloudServiceConnectorsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.cloud.config.java.CloudScanConfiguration' (OnClassCondition)

   CodecsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   CouchbaseAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'com.couchbase.client.java.Bucket', 'com.couchbase.client.spring.cache.CouchbaseCacheManager' (OnClassCondition)

   CouchbaseDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Bucket' (OnClassCondition)

   CouchbaseReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Bucket' (OnClassCondition)

   CouchbaseReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Bucket' (OnClassCondition)

   CouchbaseRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Bucket' (OnClassCondition)

   DataSourceAutoConfiguration.EmbeddedDatabaseConfiguration:
      Did not match:
         - EmbeddedDataSource found supported pooled data source (DataSourceAutoConfiguration.EmbeddedDatabaseCondition)

   DataSourceConfiguration.Dbcp2:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.commons.dbcp2.BasicDataSource' (OnClassCondition)

   DataSourceConfiguration.Generic:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.type) did not find property 'spring.datasource.type' (OnPropertyCondition)

   DataSourceConfiguration.Tomcat:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.tomcat.jdbc.pool.DataSource' (OnClassCondition)

   DataSourceJmxConfiguration.TomcatDataSourceJmxConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.tomcat.jdbc.pool.DataSourceProxy' (OnClassCondition)

   DataSourcePoolMetadataProvidersConfiguration.CommonsDbcp2PoolDataSourceMetadataProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.commons.dbcp2.BasicDataSource' (OnClassCondition)

   DataSourcePoolMetadataProvidersConfiguration.TomcatDataSourcePoolMetadataProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.tomcat.jdbc.pool.DataSource' (OnClassCondition)

   DispatcherServletAutoConfiguration.DispatcherServletConfiguration#multipartResolver:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.web.multipart.MultipartResolver; SearchStrategy: all) did not find any beans of type org.springframework.web.multipart.MultipartResolver (OnBeanCondition)

   EhCacheCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'net.sf.ehcache.Cache' (OnClassCondition)

   ElasticsearchAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.elasticsearch.client.Client' (OnClassCondition)

   ElasticsearchDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.elasticsearch.core.ElasticsearchTemplate' (OnClassCondition)

   ElasticsearchRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.elasticsearch.client.Client' (OnClassCondition)

   EmbeddedLdapAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.unboundid.ldap.listener.InMemoryDirectoryServer' (OnClassCondition)

   EmbeddedMongoAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.MongoClient' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.JettyWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.eclipse.jetty.server.Server', 'org.eclipse.jetty.util.Loader', 'org.eclipse.jetty.webapp.WebAppContext' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.NettyWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.netty.http.server.HttpServer' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.UndertowWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.undertow.Undertow', 'org.xnio.SslClientAuthMode' (OnClassCondition)

   ErrorWebFluxAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)

   FlywayAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.flywaydb.core.Flyway' (OnClassCondition)

   FreeMarkerNonWebConfiguration:
      Did not match:
         - @ConditionalOnWebApplication found 'session' scope and did not find reactive web application classes (OnWebApplicationCondition)

   FreeMarkerReactiveWebConfiguration:
      Did not match:
         - did not find reactive web application classes (OnWebApplicationCondition)

   FreeMarkerServletWebConfiguration#resourceUrlEncodingFilter:
      Did not match:
         - @ConditionalOnEnabledResourceChain did not find class org.webjars.WebJarAssetLocator (OnEnabledResourceChainCondition)

   GroovyTemplateAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'groovy.text.markup.MarkupTemplateEngine' (OnClassCondition)

   GsonAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.google.gson.Gson' (OnClassCondition)

   GsonHttpMessageConvertersConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.google.gson.Gson' (OnClassCondition)

   H2ConsoleAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.h2.server.web.WebServlet' (OnClassCondition)

   HazelcastAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HazelcastCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'com.hazelcast.core.HazelcastInstance', 'com.hazelcast.spring.cache.HazelcastCacheManager' (OnClassCondition)

   HazelcastJpaDependencyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HibernateJpaAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.persistence.EntityManager' (OnClassCondition)

   HttpHandlerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.DispatcherHandler' (OnClassCondition)

   HypermediaAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.hateoas.EntityModel' (OnClassCondition)

   InfinispanCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.infinispan.spring.embedded.provider.SpringEmbeddedCacheManager' (OnClassCondition)

   InfluxDbAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.influxdb.InfluxDB' (OnClassCondition)

   IntegrationAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.integration.config.EnableIntegration' (OnClassCondition)

   JCacheCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.cache.Caching' (OnClassCondition)

   JacksonAutoConfiguration.JodaDateTimeJacksonConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.joda.time.DateTime', 'com.fasterxml.jackson.datatype.joda.ser.DateTimeSerializer', 'com.fasterxml.jackson.datatype.joda.cfg.JacksonJodaDateFormat' (OnClassCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2XmlHttpMessageConverterConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.fasterxml.jackson.dataformat.xml.XmlMapper' (OnClassCondition)

   JdbcRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.jdbc.repository.config.AbstractJdbcConfiguration' (OnClassCondition)

   JedisConnectionConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.apache.commons.pool2.impl.GenericObjectPool', 'redis.clients.jedis.Jedis' (OnClassCondition)

   JerseyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.glassfish.jersey.server.spring.SpringComponentProvider' (OnClassCondition)

   JestAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.searchbox.client.JestClient' (OnClassCondition)

   JmsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.jms.Message' (OnClassCondition)

   JndiConnectionFactoryAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.jms.core.JmsTemplate' (OnClassCondition)

   JndiDataSourceAutoConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.jndi-name) did not find property 'jndi-name' (OnPropertyCondition)
      Matched:
         - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType' (OnClassCondition)

   JooqAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.jooq.DSLContext' (OnClassCondition)

   JpaRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.jpa.repository.JpaRepository' (OnClassCondition)

   JsonbAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.json.bind.Jsonb' (OnClassCondition)

   JsonbHttpMessageConvertersConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.json.bind.Jsonb' (OnClassCondition)

   JtaAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.transaction.Transaction' (OnClassCondition)

   KafkaAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.kafka.core.KafkaTemplate' (OnClassCondition)

   LdapAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.ldap.core.ContextSource' (OnClassCondition)

   LdapRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.ldap.repository.LdapRepository' (OnClassCondition)

   LiquibaseAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'liquibase.change.DatabaseChange' (OnClassCondition)

   MailSenderAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.mail.internet.MimeMessage' (OnClassCondition)

   MailSenderValidatorAutoConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.mail.test-connection) did not find property 'test-connection' (OnPropertyCondition)

   MessageSourceAutoConfiguration:
      Did not match:
         - ResourceBundle did not find bundle with basename messages (MessageSourceAutoConfiguration.ResourceBundleCondition)

   MongoAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.MongoClient' (OnClassCondition)

   MongoDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.client.MongoClient' (OnClassCondition)

   MongoReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.MongoClient' (OnClassCondition)

   MustacheAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.samskivert.mustache.Mustache' (OnClassCondition)

   MybatisAutoConfiguration.MapperScannerRegistrarNotFoundConfiguration:
      Did not match:
         - @ConditionalOnBean (types: org.mybatis.spring.mapper.MapperFactoryBean; SearchStrategy: all) found beans of type 'org.mybatis.spring.mapper.MapperFactoryBean' &departmentMapper, &employeeMapper, &leaveFormMapper, &nodeMapper, &noticeMapper, &processFlowMapper, &userMapper (OnBeanCondition)

   Neo4jDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.ogm.session.SessionFactory' (OnClassCondition)

   Neo4jRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.ogm.session.Neo4jSession' (OnClassCondition)

   OAuth2ClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.annotation.web.configuration.EnableWebSecurity' (OnClassCondition)

   OAuth2ResourceServerAutoConfiguration.JwtConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.springframework.security.oauth2.server.resource.authentication.JwtAuthenticationToken', 'org.springframework.security.oauth2.jwt.JwtDecoder' (OnClassCondition)

   OAuth2ResourceServerAutoConfiguration.OpaqueTokenConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.springframework.security.oauth2.server.resource.BearerTokenAuthenticationToken', 'org.springframework.security.oauth2.server.resource.introspection.OpaqueTokenIntrospector' (OnClassCondition)

   ProjectInfoAutoConfiguration#buildProperties:
      Did not match:
         - @ConditionalOnResource did not find resource '${spring.info.build.location:classpath:META-INF/build-info.properties}' (OnResourceCondition)

   ProjectInfoAutoConfiguration#gitProperties:
      Did not match:
         - GitResource did not find git info at classpath:git.properties (ProjectInfoAutoConfiguration.GitResourceAvailableCondition)

   QuartzAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.quartz.Scheduler' (OnClassCondition)

   RSocketMessagingAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.RSocketFactory' (OnClassCondition)

   RSocketRequesterAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.RSocketFactory' (OnClassCondition)

   RSocketSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.rsocket.core.SecuritySocketAcceptorInterceptor' (OnClassCondition)

   RSocketServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.RSocketFactory' (OnClassCondition)

   RSocketStrategiesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.RSocketFactory' (OnClassCondition)

   RabbitAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.rabbitmq.client.Channel' (OnClassCondition)

   ReactiveElasticsearchRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.elasticsearch.client.reactive.ReactiveElasticsearchClient' (OnClassCondition)

   ReactiveOAuth2ClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.annotation.web.reactive.EnableWebFluxSecurity' (OnClassCondition)

   ReactiveOAuth2ResourceServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.annotation.web.reactive.EnableWebFluxSecurity' (OnClassCondition)

   ReactiveRestClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.netty.http.client.HttpClient' (OnClassCondition)

   ReactiveSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.annotation.web.reactive.EnableWebFluxSecurity' (OnClassCondition)

   ReactiveUserDetailsServiceAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.authentication.ReactiveAuthenticationManager' (OnClassCondition)

   ReactiveWebServerFactoryAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   RepositoryRestMvcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.rest.webmvc.config.RepositoryRestMvcConfiguration' (OnClassCondition)

   RestClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.elasticsearch.client.RestClient' (OnClassCondition)

   Saml2RelyingPartyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.saml2.provider.service.registration.RelyingPartyRegistrationRepository' (OnClassCondition)

   SecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.authentication.DefaultAuthenticationEventPublisher' (OnClassCondition)

   SecurityFilterAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.http.SessionCreationPolicy' (OnClassCondition)

   SendGridAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.sendgrid.SendGrid' (OnClassCondition)

   ServletWebServerFactoryAutoConfiguration#forwardedHeaderFilter:
      Did not match:
         - @ConditionalOnProperty (server.forward-headers-strategy=framework) did not find property 'server.forward-headers-strategy' (OnPropertyCondition)

   ServletWebServerFactoryConfiguration.EmbeddedJetty:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.eclipse.jetty.server.Server', 'org.eclipse.jetty.util.Loader', 'org.eclipse.jetty.webapp.WebAppContext' (OnClassCondition)

   ServletWebServerFactoryConfiguration.EmbeddedUndertow:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.undertow.Undertow', 'org.xnio.SslClientAuthMode' (OnClassCondition)

   SessionAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.session.Session' (OnClassCondition)

   SolrAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.solr.client.solrj.impl.CloudSolrClient' (OnClassCondition)

   SolrRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.solr.client.solrj.SolrClient' (OnClassCondition)

   TaskSchedulingAutoConfiguration#taskScheduler:
      Did not match:
         - @ConditionalOnBean (names: org.springframework.context.annotation.internalScheduledAnnotationProcessor; SearchStrategy: all) did not find any beans named org.springframework.context.annotation.internalScheduledAnnotationProcessor (OnBeanCondition)

   ThymeleafAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.thymeleaf.spring5.SpringTemplateEngine' (OnClassCondition)

   TransactionAutoConfiguration#transactionalOperator:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.transaction.ReactiveTransactionManager; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration.JdkDynamicAutoProxyConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.aop.proxy-target-class=false) did not find property 'proxy-target-class' (OnPropertyCondition)

   UserDetailsServiceAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.authentication.AuthenticationManager' (OnClassCondition)

   WebClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   WebFluxAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)

   WebMvcAutoConfiguration#hiddenHttpMethodFilter:
      Did not match:
         - @ConditionalOnProperty (spring.mvc.hiddenmethod.filter.enabled) did not find property 'enabled' (OnPropertyCondition)

   WebMvcAutoConfiguration.ResourceChainCustomizerConfiguration:
      Did not match:
         - @ConditionalOnEnabledResourceChain did not find class org.webjars.WebJarAssetLocator (OnEnabledResourceChainCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#beanNameViewResolver:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.web.servlet.view.BeanNameViewResolver; SearchStrategy: all) found beans of type 'org.springframework.web.servlet.view.BeanNameViewResolver' beanNameViewResolver (OnBeanCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#localeResolver:
      Did not match:
         - @ConditionalOnProperty (spring.mvc.locale) did not find property 'locale' (OnPropertyCondition)

   WebServiceTemplateAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.ws.client.core.WebServiceTemplate' (OnClassCondition)

   WebServicesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.ws.transport.http.MessageDispatcherServlet' (OnClassCondition)

   WebSocketMessagingAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.socket.config.annotation.WebSocketMessageBrokerConfigurer' (OnClassCondition)

   WebSocketReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   WebSocketServletAutoConfiguration.JettyWebSocketConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.eclipse.jetty.websocket.jsr356.server.deploy.WebSocketServerContainerInitializer' (OnClassCondition)

   WebSocketServletAutoConfiguration.UndertowWebSocketConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.undertow.websockets.jsr.Bootstrap' (OnClassCondition)

   XADataSourceAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.transaction.TransactionManager' (OnClassCondition)


Exclusions:
-----------

    None


Unconditional classes:
----------------------

    org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration

    org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration

    org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration



[02:07:00:815] [DEBUG] - org.springframework.core.env.PropertySourcesPropertyResolver.logKeyFound(PropertySourcesPropertyResolver.java:115) - Found key 'spring.liveBeansView.mbeanDomain' in PropertySource 'systemProperties' with value of type String
[02:07:02:361] [DEBUG] - org.springframework.core.env.PropertySourcesPropertyResolver.logKeyFound(PropertySourcesPropertyResolver.java:115) - Found key 'local.server.port' in PropertySource 'server.ports' with value of type Integer
[02:08:06:652] [DEBUG] - org.springframework.web.servlet.DispatcherServlet.initMultipartResolver(DispatcherServlet.java:526) - Detected StandardServletMultipartResolver
[02:08:06:667] [DEBUG] - org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:542) - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
[02:08:06:685] [DEBUG] - org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:91) - GET "/login", parameters={}
[02:08:06:689] [DEBUG] - org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:412) - Mapped to com.wei.oa_spring.controller.UserController#login_page()
[02:08:06:886] [DEBUG] - org.springframework.web.servlet.view.ContentNegotiatingViewResolver.getBestView(ContentNegotiatingViewResolver.java:348) - Selected 'text/html' given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, application/signed-exchange;v=b3;q=0.7, */*;q=0.8]
[02:08:06:887] [DEBUG] - org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:310) - View name 'login', model {msg=传给Freemarker的值}
[02:08:06:889] [DEBUG] - org.springframework.web.servlet.view.AbstractTemplateView.renderMergedOutputModel(AbstractTemplateView.java:176) - Rendering [login.ftl]
[02:08:06:900] [DEBUG] - org.springframework.web.servlet.FrameworkServlet.logResult(FrameworkServlet.java:1131) - Completed 200 OK
[02:08:06:945] [DEBUG] - org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:91) - GET "/layui/css/layui.css", parameters={}
[02:08:06:954] [DEBUG] - org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:412) - Mapped to ResourceHttpRequestHandler ["classpath:/static/"]
[02:08:06:966] [DEBUG] - org.springframework.web.servlet.FrameworkServlet.logResult(FrameworkServlet.java:1131) - Completed 304 NOT_MODIFIED
[02:08:07:179] [DEBUG] - org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:91) - GET "/favicon.ico", parameters={}
[02:08:07:180] [DEBUG] - org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:412) - Mapped to ResourceHttpRequestHandler ["classpath:/static/"]
[02:08:07:180] [DEBUG] - org.springframework.web.servlet.resource.ResourceHttpRequestHandler.handleRequest(ResourceHttpRequestHandler.java:454) - Resource not found
[02:08:07:180] [DEBUG] - org.springframework.web.servlet.FrameworkServlet.logResult(FrameworkServlet.java:1131) - Completed 404 NOT_FOUND
[02:08:07:190] [DEBUG] - org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:91) - "ERROR" dispatch for GET "/error", parameters={}
[02:08:07:190] [DEBUG] - org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:412) - Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
[02:08:07:213] [DEBUG] - org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor.writeWithMessageConverters(AbstractMessageConverterMethodProcessor.java:273) - Using 'application/json;q=0.8', given [image/avif, image/webp, image/apng, image/svg+xml, image/*, */*;q=0.8] and supported [application/json, application/*+json, application/json, application/*+json]
[02:08:07:214] [DEBUG] - org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:91) - Writing [{timestamp=Wed Mar 22 02:08:07 CST 2023, status=404, error=Not Found, message=No message available,  (truncated)...]
[02:08:07:233] [DEBUG] - org.springframework.web.servlet.FrameworkServlet.logResult(FrameworkServlet.java:1127) - Exiting from "ERROR" dispatch, status 404
[02:08:11:030] [DEBUG] - org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:91) - POST "/check_login", parameters={masked}
[02:08:11:031] [DEBUG] - org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:412) - Mapped to com.wei.oa_spring.controller.UserController#login(String, String, HttpSession)
[02:08:11:094] [DEBUG] - org.mybatis.spring.SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[02:08:11:113] [DEBUG] - org.mybatis.spring.SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@64758438] was not registered for synchronization because synchronization is not active
[02:08:11:133] [DEBUG] - org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:115) - Fetching JDBC Connection from DataSource
[02:08:11:135] [DEBUG] - com.zaxxer.hikari.HikariConfig.logConfiguration(HikariConfig.java:1020) - imooc_oa_datasource - configuration:
[02:08:11:139] [DEBUG] - com.zaxxer.hikari.HikariConfig.logConfiguration(HikariConfig.java:1052) - allowPoolSuspension.............false
[02:08:11:140] [DEBUG] - com.zaxxer.hikari.HikariConfig.logConfiguration(HikariConfig.java:1052) - autoCommit......................true
[02:08:11:140] [DEBUG] - com.zaxxer.hikari.HikariConfig.logConfiguration(HikariConfig.java:1052) - catalog.........................none
[02:08:11:141] [DEBUG] - com.zaxxer.hikari.HikariConfig.logConfiguration(HikariConfig.java:1052) - connectionInitSql...............none
[02:08:11:141] [DEBUG] - com.zaxxer.hikari.HikariConfig.logConfiguration(HikariConfig.java:1052) - connectionTestQuery.............none
[02:08:11:142] [DEBUG] - com.zaxxer.hikari.HikariConfig.logConfiguration(HikariConfig.java:1052) - connectionTimeout...............30000
[02:08:11:142] [DEBUG] - com.zaxxer.hikari.HikariConfig.logConfiguration(HikariConfig.java:1052) - dataSource......................none
[02:08:11:143] [DEBUG] - com.zaxxer.hikari.HikariConfig.logConfiguration(HikariConfig.java:1052) - dataSourceClassName.............none
[02:08:11:143] [DEBUG] - com.zaxxer.hikari.HikariConfig.logConfiguration(HikariConfig.java:1052) - dataSourceJNDI..................none
[02:08:11:145] [DEBUG] - com.zaxxer.hikari.HikariConfig.logConfiguration(HikariConfig.java:1052) - dataSourceProperties............{password=<masked>}
[02:08:11:145] [DEBUG] - com.zaxxer.hikari.HikariConfig.logConfiguration(HikariConfig.java:1052) - driverClassName................."com.mysql.cj.jdbc.Driver"
[02:08:11:147] [DEBUG] - com.zaxxer.hikari.HikariConfig.logConfiguration(HikariConfig.java:1052) - healthCheckProperties...........{}
[02:08:11:147] [DEBUG] - com.zaxxer.hikari.HikariConfig.logConfiguration(HikariConfig.java:1052) - healthCheckRegistry.............none
[02:08:11:148] [DEBUG] - com.zaxxer.hikari.HikariConfig.logConfiguration(HikariConfig.java:1052) - idleTimeout.....................600000
[02:08:11:148] [DEBUG] - com.zaxxer.hikari.HikariConfig.logConfiguration(HikariConfig.java:1052) - initializationFailTimeout.......1
[02:08:11:149] [DEBUG] - com.zaxxer.hikari.HikariConfig.logConfiguration(HikariConfig.java:1052) - isolateInternalQueries..........false
[02:08:11:150] [DEBUG] - com.zaxxer.hikari.HikariConfig.logConfiguration(HikariConfig.java:1052) - jdbcUrl.........................jdbc:mysql://127.0.0.1:3306/imooc_oa?useUnicode=true&characterEncoding=utf8&autoReconnect=true&useSSL=false&serverTimezone=Asia/Shanghai
[02:08:11:150] [DEBUG] - com.zaxxer.hikari.HikariConfig.logConfiguration(HikariConfig.java:1052) - leakDetectionThreshold..........0
[02:08:11:150] [DEBUG] - com.zaxxer.hikari.HikariConfig.logConfiguration(HikariConfig.java:1052) - maxLifetime.....................1800000
[02:08:11:151] [DEBUG] - com.zaxxer.hikari.HikariConfig.logConfiguration(HikariConfig.java:1052) - maximumPoolSize.................10
[02:08:11:151] [DEBUG] - com.zaxxer.hikari.HikariConfig.logConfiguration(HikariConfig.java:1052) - metricRegistry..................none
[02:08:11:152] [DEBUG] - com.zaxxer.hikari.HikariConfig.logConfiguration(HikariConfig.java:1052) - metricsTrackerFactory...........none
[02:08:11:152] [DEBUG] - com.zaxxer.hikari.HikariConfig.logConfiguration(HikariConfig.java:1052) - minimumIdle.....................10
[02:08:11:152] [DEBUG] - com.zaxxer.hikari.HikariConfig.logConfiguration(HikariConfig.java:1052) - password........................<masked>
[02:08:11:153] [DEBUG] - com.zaxxer.hikari.HikariConfig.logConfiguration(HikariConfig.java:1052) - poolName........................"imooc_oa_datasource"
[02:08:11:153] [DEBUG] - com.zaxxer.hikari.HikariConfig.logConfiguration(HikariConfig.java:1052) - readOnly........................false
[02:08:11:154] [DEBUG] - com.zaxxer.hikari.HikariConfig.logConfiguration(HikariConfig.java:1052) - registerMbeans..................false
[02:08:11:154] [DEBUG] - com.zaxxer.hikari.HikariConfig.logConfiguration(HikariConfig.java:1052) - scheduledExecutor...............none
[02:08:11:154] [DEBUG] - com.zaxxer.hikari.HikariConfig.logConfiguration(HikariConfig.java:1052) - schema..........................none
[02:08:11:155] [DEBUG] - com.zaxxer.hikari.HikariConfig.logConfiguration(HikariConfig.java:1052) - threadFactory...................internal
[02:08:11:155] [DEBUG] - com.zaxxer.hikari.HikariConfig.logConfiguration(HikariConfig.java:1052) - transactionIsolation............default
[02:08:11:156] [DEBUG] - com.zaxxer.hikari.HikariConfig.logConfiguration(HikariConfig.java:1052) - username........................"root"
[02:08:11:156] [DEBUG] - com.zaxxer.hikari.HikariConfig.logConfiguration(HikariConfig.java:1052) - validationTimeout...............5000
[02:08:11:474] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:566) - imooc_oa_datasource - Added connection com.mysql.cj.jdbc.ConnectionImpl@1e8fef41
[02:08:11:484] [DEBUG] - org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [HikariProxyConnection@1676059477 wrapping com.mysql.cj.jdbc.ConnectionImpl@1e8fef41] will not be managed by Spring
[02:08:11:494] [DEBUG] - org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: select user_id , username, `password`, employee_id, salt from sys_user where username = ? and password = ? 
[02:08:11:524] [DEBUG] - org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: m8(String), S6h8CwRiXkdyIFUP1rFF1g==(String)
[02:08:11:584] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417) - imooc_oa_datasource - Pool stats (total=1, active=1, idle=0, waiting=0)
[02:08:11:584] [DEBUG] - org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[02:08:11:594] [DEBUG] - com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator.call(HikariPool.java:730) - imooc_oa_datasource - Added connection com.mysql.cj.jdbc.ConnectionImpl@5561a767
[02:08:11:594] [DEBUG] - org.mybatis.spring.SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@64758438]
[02:08:11:594] [DEBUG] - com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator.call(HikariPool.java:730) - imooc_oa_datasource - Added connection com.mysql.cj.jdbc.ConnectionImpl@21b9a7ec
[02:08:11:604] [DEBUG] - com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator.call(HikariPool.java:730) - imooc_oa_datasource - Added connection com.mysql.cj.jdbc.ConnectionImpl@2c7d0385
[02:08:11:604] [DEBUG] - org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor.writeWithMessageConverters(AbstractMessageConverterMethodProcessor.java:273) - Using 'application/json', given [application/json, text/javascript, */*;q=0.01] and supported [application/json, application/*+json, application/json, application/*+json]
[02:08:11:604] [DEBUG] - org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:91) - Writing [ApiRestResponse{status=10000, msg='SUCCESS', data=com.wei.oa_spring.model.pojo.User@6c837848}]
[02:08:11:614] [DEBUG] - org.springframework.web.servlet.FrameworkServlet.logResult(FrameworkServlet.java:1131) - Completed 200 OK
[02:08:11:614] [DEBUG] - com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator.call(HikariPool.java:730) - imooc_oa_datasource - Added connection com.mysql.cj.jdbc.ConnectionImpl@7402d015
[02:08:11:614] [DEBUG] - com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator.call(HikariPool.java:730) - imooc_oa_datasource - Added connection com.mysql.cj.jdbc.ConnectionImpl@518c55ba
[02:08:11:627] [DEBUG] - com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator.call(HikariPool.java:730) - imooc_oa_datasource - Added connection com.mysql.cj.jdbc.ConnectionImpl@6a5a7cba
[02:08:11:633] [DEBUG] - com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator.call(HikariPool.java:730) - imooc_oa_datasource - Added connection com.mysql.cj.jdbc.ConnectionImpl@25077e57
[02:08:11:640] [DEBUG] - com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator.call(HikariPool.java:730) - imooc_oa_datasource - Added connection com.mysql.cj.jdbc.ConnectionImpl@4f698527
[02:08:11:647] [DEBUG] - com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator.call(HikariPool.java:730) - imooc_oa_datasource - Added connection com.mysql.cj.jdbc.ConnectionImpl@1ad6447
[02:08:11:647] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417) - imooc_oa_datasource - After adding stats (total=10, active=0, idle=10, waiting=0)
[02:08:11:669] [DEBUG] - org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:91) - GET "/index", parameters={}
[02:08:11:670] [DEBUG] - org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:412) - Mapped to com.wei.oa_spring.controller.IndexController#index(HttpServletRequest)
[02:08:11:681] [DEBUG] - org.mybatis.spring.SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[02:08:11:681] [DEBUG] - org.mybatis.spring.SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1cfda44a] was not registered for synchronization because synchronization is not active
[02:08:11:682] [DEBUG] - org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:115) - Fetching JDBC Connection from DataSource
[02:08:11:683] [DEBUG] - org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [HikariProxyConnection@879031143 wrapping com.mysql.cj.jdbc.ConnectionImpl@1e8fef41] will not be managed by Spring
[02:08:11:683] [DEBUG] - org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: select employee_id , `name`, department_id, title, `level` from adm_employee where employee_id = ? 
[02:08:11:684] [DEBUG] - org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 1(Long)
[02:08:11:690] [DEBUG] - org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[02:08:11:690] [DEBUG] - org.mybatis.spring.SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1cfda44a]
[02:08:11:691] [DEBUG] - org.mybatis.spring.SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[02:08:11:691] [DEBUG] - org.mybatis.spring.SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@797af3c] was not registered for synchronization because synchronization is not active
[02:08:11:692] [DEBUG] - org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:115) - Fetching JDBC Connection from DataSource
[02:08:11:692] [DEBUG] - org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [HikariProxyConnection@1983485040 wrapping com.mysql.cj.jdbc.ConnectionImpl@1e8fef41] will not be managed by Spring
[02:08:11:692] [DEBUG] - org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: select department_id, department_name from adm_department where department_id = ? 
[02:08:11:693] [DEBUG] - org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 1(Long)
[02:08:11:695] [DEBUG] - org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[02:08:11:696] [DEBUG] - org.mybatis.spring.SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@797af3c]
[02:08:11:698] [DEBUG] - org.mybatis.spring.SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[02:08:11:698] [DEBUG] - org.mybatis.spring.SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@69e1f9fd] was not registered for synchronization because synchronization is not active
[02:08:11:698] [DEBUG] - org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:115) - Fetching JDBC Connection from DataSource
[02:08:11:698] [DEBUG] - org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [HikariProxyConnection@206261595 wrapping com.mysql.cj.jdbc.ConnectionImpl@1e8fef41] will not be managed by Spring
[02:08:11:699] [DEBUG] - org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT DISTINCT n.* from sys_role_user ru, sys_role_node rn, sys_node n where ru.role_id = rn.role_id and user_id = ? and rn.node_id = n.node_id ORDER BY n.node_code 
[02:08:11:699] [DEBUG] - org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 1(Long)
[02:08:11:709] [DEBUG] - org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 4
[02:08:11:710] [DEBUG] - org.mybatis.spring.SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@69e1f9fd]
[02:08:11:763] [DEBUG] - org.springframework.web.servlet.view.ContentNegotiatingViewResolver.getBestView(ContentNegotiatingViewResolver.java:348) - Selected 'text/html' given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, application/signed-exchange;v=b3;q=0.7, */*;q=0.8]
[02:08:11:763] [DEBUG] - org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:310) - View name '/index', model {}
[02:08:11:764] [DEBUG] - org.springframework.web.servlet.view.AbstractTemplateView.renderMergedOutputModel(AbstractTemplateView.java:176) - Rendering [/index.ftl]
[02:08:11:808] [DEBUG] - org.springframework.web.servlet.FrameworkServlet.logResult(FrameworkServlet.java:1131) - Completed 200 OK
[02:08:11:932] [DEBUG] - org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:91) - GET "/forward/notice", parameters={}
[02:08:11:934] [DEBUG] - org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:412) - Mapped to com.wei.oa_spring.controller.ForwardController#doGet(String, HttpServletRequest, HttpServletResponse)
[02:08:11:953] [DEBUG] - org.springframework.web.servlet.view.ContentNegotiatingViewResolver.getBestView(ContentNegotiatingViewResolver.java:348) - Selected 'text/html' given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, application/signed-exchange;v=b3;q=0.7, */*;q=0.8]
[02:08:11:953] [DEBUG] - org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:310) - View name '/notice', model {}
[02:08:11:953] [DEBUG] - org.springframework.web.servlet.view.AbstractTemplateView.renderMergedOutputModel(AbstractTemplateView.java:176) - Rendering [/notice.ftl]
[02:08:11:954] [DEBUG] - org.springframework.web.servlet.FrameworkServlet.logResult(FrameworkServlet.java:1131) - Completed 200 OK
[02:08:12:094] [DEBUG] - org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:91) - GET "/notice/list?page=1&limit=10", parameters={masked}
[02:08:12:095] [DEBUG] - org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:412) - Mapped to com.wei.oa_spring.controller.NoticeController#getNoticeList(HttpSession, HttpServletRequest, HttpServletResponse)
[02:08:12:102] [DEBUG] - org.mybatis.spring.SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[02:08:12:103] [DEBUG] - org.mybatis.spring.SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@38d7103e] was not registered for synchronization because synchronization is not active
[02:08:12:104] [DEBUG] - org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:115) - Fetching JDBC Connection from DataSource
[02:08:12:104] [DEBUG] - org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [HikariProxyConnection@1999112892 wrapping com.mysql.cj.jdbc.ConnectionImpl@1e8fef41] will not be managed by Spring
[02:08:12:105] [DEBUG] - org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: select notice_id , receiver_id, content, create_time from sys_notice where receiver_id = ? order by create_time desc limit 0,100 
[02:08:12:106] [DEBUG] - org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 1(Long)
[02:08:12:116] [DEBUG] - org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 15
[02:08:12:117] [DEBUG] - org.mybatis.spring.SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@38d7103e]
[02:08:12:262] [DEBUG] - org.springframework.web.servlet.FrameworkServlet.logResult(FrameworkServlet.java:1131) - Completed 200 OK
[02:08:24:655] [DEBUG] - org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:91) - GET "/forward/notice", parameters={}
[02:08:24:656] [DEBUG] - org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:412) - Mapped to com.wei.oa_spring.controller.ForwardController#doGet(String, HttpServletRequest, HttpServletResponse)
[02:08:24:664] [DEBUG] - org.springframework.web.servlet.view.ContentNegotiatingViewResolver.getBestView(ContentNegotiatingViewResolver.java:348) - Selected 'text/html' given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, application/signed-exchange;v=b3;q=0.7, */*;q=0.8]
[02:08:24:664] [DEBUG] - org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:310) - View name '/notice', model {}
[02:08:24:665] [DEBUG] - org.springframework.web.servlet.view.AbstractTemplateView.renderMergedOutputModel(AbstractTemplateView.java:176) - Rendering [/notice.ftl]
[02:08:24:665] [DEBUG] - org.springframework.web.servlet.FrameworkServlet.logResult(FrameworkServlet.java:1131) - Completed 200 OK
[02:08:24:784] [DEBUG] - org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:91) - GET "/notice/list?page=1&limit=10", parameters={masked}
[02:08:24:784] [DEBUG] - org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:412) - Mapped to com.wei.oa_spring.controller.NoticeController#getNoticeList(HttpSession, HttpServletRequest, HttpServletResponse)
[02:08:24:786] [DEBUG] - org.mybatis.spring.SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[02:08:24:787] [DEBUG] - org.mybatis.spring.SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@78947b38] was not registered for synchronization because synchronization is not active
[02:08:24:787] [DEBUG] - org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:115) - Fetching JDBC Connection from DataSource
[02:08:24:789] [DEBUG] - org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [HikariProxyConnection@1762264205 wrapping com.mysql.cj.jdbc.ConnectionImpl@1e8fef41] will not be managed by Spring
[02:08:24:789] [DEBUG] - org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: select notice_id , receiver_id, content, create_time from sys_notice where receiver_id = ? order by create_time desc limit 0,100 
[02:08:24:790] [DEBUG] - org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 1(Long)
[02:08:24:796] [DEBUG] - org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 15
[02:08:24:797] [DEBUG] - org.mybatis.spring.SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@78947b38]
[02:08:24:798] [DEBUG] - org.springframework.web.servlet.FrameworkServlet.logResult(FrameworkServlet.java:1131) - Completed 200 OK
[02:08:29:249] [DEBUG] - org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:91) - GET "/forward/form", parameters={}
[02:08:29:250] [DEBUG] - org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:412) - Mapped to com.wei.oa_spring.controller.ForwardController#doGet(String, HttpServletRequest, HttpServletResponse)
[02:08:29:263] [DEBUG] - org.springframework.web.servlet.view.ContentNegotiatingViewResolver.getBestView(ContentNegotiatingViewResolver.java:348) - Selected 'text/html' given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, application/signed-exchange;v=b3;q=0.7, */*;q=0.8]
[02:08:29:263] [DEBUG] - org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:310) - View name '/form', model {}
[02:08:29:264] [DEBUG] - org.springframework.web.servlet.view.AbstractTemplateView.renderMergedOutputModel(AbstractTemplateView.java:176) - Rendering [/form.ftl]
[02:08:29:264] [DEBUG] - org.springframework.web.servlet.FrameworkServlet.logResult(FrameworkServlet.java:1131) - Completed 200 OK
[02:08:41:586] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417) - imooc_oa_datasource - Pool stats (total=10, active=0, idle=10, waiting=0)
[02:09:11:596] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417) - imooc_oa_datasource - Pool stats (total=10, active=0, idle=10, waiting=0)
[02:09:41:602] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417) - imooc_oa_datasource - Pool stats (total=10, active=0, idle=10, waiting=0)
[02:10:11:602] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417) - imooc_oa_datasource - Pool stats (total=10, active=0, idle=10, waiting=0)
[02:10:41:608] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417) - imooc_oa_datasource - Pool stats (total=10, active=0, idle=10, waiting=0)
[02:11:11:613] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417) - imooc_oa_datasource - Pool stats (total=10, active=0, idle=10, waiting=0)
[02:11:41:615] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417) - imooc_oa_datasource - Pool stats (total=10, active=0, idle=10, waiting=0)
[02:12:11:626] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417) - imooc_oa_datasource - Pool stats (total=10, active=0, idle=10, waiting=0)
[02:12:41:629] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417) - imooc_oa_datasource - Pool stats (total=10, active=0, idle=10, waiting=0)
[02:13:11:638] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417) - imooc_oa_datasource - Pool stats (total=10, active=0, idle=10, waiting=0)
[02:13:41:646] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417) - imooc_oa_datasource - Pool stats (total=10, active=0, idle=10, waiting=0)
[02:14:11:651] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417) - imooc_oa_datasource - Pool stats (total=10, active=0, idle=10, waiting=0)
[02:14:41:659] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417) - imooc_oa_datasource - Pool stats (total=10, active=0, idle=10, waiting=0)
[02:15:11:666] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417) - imooc_oa_datasource - Pool stats (total=10, active=0, idle=10, waiting=0)
[02:15:41:673] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417) - imooc_oa_datasource - Pool stats (total=10, active=0, idle=10, waiting=0)
[02:16:11:679] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417) - imooc_oa_datasource - Pool stats (total=10, active=0, idle=10, waiting=0)
[02:16:41:688] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417) - imooc_oa_datasource - Pool stats (total=10, active=0, idle=10, waiting=0)
[02:17:11:693] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417) - imooc_oa_datasource - Pool stats (total=10, active=0, idle=10, waiting=0)
[02:17:41:699] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417) - imooc_oa_datasource - Pool stats (total=10, active=0, idle=10, waiting=0)
[02:18:11:700] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417) - imooc_oa_datasource - Pool stats (total=10, active=0, idle=10, waiting=0)
[02:18:41:703] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417) - imooc_oa_datasource - Pool stats (total=10, active=0, idle=10, waiting=0)
[02:19:11:704] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417) - imooc_oa_datasource - Pool stats (total=10, active=0, idle=10, waiting=0)
[02:19:41:704] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417) - imooc_oa_datasource - Pool stats (total=10, active=0, idle=10, waiting=0)
[02:20:11:711] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417) - imooc_oa_datasource - Pool stats (total=10, active=0, idle=10, waiting=0)
[02:20:41:718] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417) - imooc_oa_datasource - Pool stats (total=10, active=0, idle=10, waiting=0)
[02:21:11:727] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417) - imooc_oa_datasource - Pool stats (total=10, active=0, idle=10, waiting=0)
[02:21:41:734] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417) - imooc_oa_datasource - Pool stats (total=10, active=0, idle=10, waiting=0)
[02:21:53:375] [DEBUG] - org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:91) - GET "/forward/audit", parameters={}
[02:21:53:377] [DEBUG] - org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:412) - Mapped to com.wei.oa_spring.controller.ForwardController#doGet(String, HttpServletRequest, HttpServletResponse)
[02:21:53:403] [DEBUG] - org.springframework.web.servlet.view.ContentNegotiatingViewResolver.getBestView(ContentNegotiatingViewResolver.java:348) - Selected 'text/html' given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, application/signed-exchange;v=b3;q=0.7, */*;q=0.8]
[02:21:53:403] [DEBUG] - org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:310) - View name '/audit', model {}
[02:21:53:403] [DEBUG] - org.springframework.web.servlet.view.AbstractTemplateView.renderMergedOutputModel(AbstractTemplateView.java:176) - Rendering [/audit.ftl]
[02:21:53:404] [DEBUG] - org.springframework.web.servlet.FrameworkServlet.logResult(FrameworkServlet.java:1131) - Completed 200 OK
[02:21:53:446] [DEBUG] - org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:91) - GET "/%20/layui/css/layui.css", parameters={}
[02:21:53:448] [DEBUG] - org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:412) - Mapped to ResourceHttpRequestHandler ["classpath:/static/"]
[02:21:53:451] [DEBUG] - org.springframework.web.servlet.FrameworkServlet.logResult(FrameworkServlet.java:1131) - Completed 304 NOT_MODIFIED
[02:21:53:588] [DEBUG] - org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:91) - GET "/leave/list?page=1&limit=10", parameters={masked}
[02:21:53:588] [DEBUG] - org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:412) - Mapped to com.wei.oa_spring.controller.LeaveFormController#getLeaveFormList(HttpSession)
[02:21:53:597] [DEBUG] - org.mybatis.spring.SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[02:21:53:598] [DEBUG] - org.mybatis.spring.SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2fe62fa1] was not registered for synchronization because synchronization is not active
[02:21:53:598] [DEBUG] - org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:115) - Fetching JDBC Connection from DataSource
[02:21:53:599] [DEBUG] - org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [HikariProxyConnection@459042602 wrapping com.mysql.cj.jdbc.ConnectionImpl@1e8fef41] will not be managed by Spring
[02:21:53:600] [DEBUG] - org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT f.*, e.`name`, d.* FROM adm_leave_form f, adm_process_flow pf, adm_employee e, adm_department d WHERE f.form_id = pf.form_id AND f.employee_id = e.employee_id AND e.department_id = d.department_id AND pf.state = ? AND pf.operator_id = ? 
[02:21:53:601] [DEBUG] - org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: process(String), 1(Long)
[02:21:53:605] [DEBUG] - org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 0
[02:21:53:605] [DEBUG] - org.mybatis.spring.SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2fe62fa1]
[02:21:53:620] [DEBUG] - org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor.writeWithMessageConverters(AbstractMessageConverterMethodProcessor.java:273) - Using 'application/json', given [application/json, text/javascript, */*;q=0.01] and supported [application/json, application/*+json, application/json, application/*+json]
[02:21:53:620] [DEBUG] - org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:91) - Writing [{msg=, code=0, data=[], count=0}]
[02:21:53:622] [DEBUG] - org.springframework.web.servlet.FrameworkServlet.logResult(FrameworkServlet.java:1131) - Completed 200 OK
[02:21:56:741] [DEBUG] - org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:91) - GET "/logout", parameters={}
[02:21:56:742] [DEBUG] - org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:412) - Mapped to com.wei.oa_spring.controller.UserController#logout(HttpSession)
[02:21:56:758] [DEBUG] - org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:310) - View name 'redirect:', model {}
[02:21:56:759] [DEBUG] - org.springframework.web.servlet.FrameworkServlet.logResult(FrameworkServlet.java:1131) - Completed 302 FOUND
[02:21:56:765] [DEBUG] - org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:91) - GET "/login", parameters={}
[02:21:56:766] [DEBUG] - org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:412) - Mapped to com.wei.oa_spring.controller.UserController#login_page()
[02:21:56:773] [DEBUG] - org.springframework.web.servlet.view.ContentNegotiatingViewResolver.getBestView(ContentNegotiatingViewResolver.java:348) - Selected 'text/html' given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, application/signed-exchange;v=b3;q=0.7, */*;q=0.8]
[02:21:56:773] [DEBUG] - org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:310) - View name 'login', model {msg=传给Freemarker的值}
[02:21:56:773] [DEBUG] - org.springframework.web.servlet.view.AbstractTemplateView.renderMergedOutputModel(AbstractTemplateView.java:176) - Rendering [login.ftl]
[02:21:56:774] [DEBUG] - org.springframework.web.servlet.FrameworkServlet.logResult(FrameworkServlet.java:1131) - Completed 200 OK
[02:22:00:733] [DEBUG] - org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:91) - POST "/check_login", parameters={masked}
[02:22:00:733] [DEBUG] - org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:412) - Mapped to com.wei.oa_spring.controller.UserController#login(String, String, HttpSession)
[02:22:00:736] [DEBUG] - org.mybatis.spring.SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[02:22:00:736] [DEBUG] - org.mybatis.spring.SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3cd853ab] was not registered for synchronization because synchronization is not active
[02:22:00:737] [DEBUG] - org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:115) - Fetching JDBC Connection from DataSource
[02:22:00:737] [DEBUG] - org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [HikariProxyConnection@1942251602 wrapping com.mysql.cj.jdbc.ConnectionImpl@1e8fef41] will not be managed by Spring
[02:22:00:738] [DEBUG] - org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: select user_id , username, `password`, employee_id, salt from sys_user where username = ? and password = ? 
[02:22:00:738] [DEBUG] - org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: m7(String), S6h8CwRiXkdyIFUP1rFF1g==(String)
[02:22:00:739] [DEBUG] - org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 0
[02:22:00:740] [DEBUG] - org.mybatis.spring.SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3cd853ab]
[02:22:00:743] [DEBUG] - org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:398) - Using @ExceptionHandler com.wei.oa_spring.exception.GlobalExceptionHandler#handleImoocMallException(OAException)
[02:22:00:759] [DEBUG] - org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor.writeWithMessageConverters(AbstractMessageConverterMethodProcessor.java:273) - Using 'application/json', given [application/json, text/javascript, */*;q=0.01] and supported [application/json, application/*+json, application/json, application/*+json]
[02:22:00:759] [DEBUG] - org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:91) - Writing [ApiRestResponse{status=10006, msg='账号或密码错误', data=null}]
[02:22:00:759] [DEBUG] - org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:145) - Resolved [com.wei.oa_spring.exception.OAException: 账号或密码错误]
[02:22:00:759] [DEBUG] - org.springframework.web.servlet.FrameworkServlet.logResult(FrameworkServlet.java:1131) - Completed 200 OK
[02:22:06:909] [DEBUG] - org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:91) - POST "/check_login", parameters={masked}
[02:22:06:909] [DEBUG] - org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:412) - Mapped to com.wei.oa_spring.controller.UserController#login(String, String, HttpSession)
[02:22:06:912] [DEBUG] - org.mybatis.spring.SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[02:22:06:912] [DEBUG] - org.mybatis.spring.SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@367fad45] was not registered for synchronization because synchronization is not active
[02:22:06:912] [DEBUG] - org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:115) - Fetching JDBC Connection from DataSource
[02:22:06:913] [DEBUG] - org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [HikariProxyConnection@1286011928 wrapping com.mysql.cj.jdbc.ConnectionImpl@1e8fef41] will not be managed by Spring
[02:22:06:913] [DEBUG] - org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: select user_id , username, `password`, employee_id, salt from sys_user where username = ? and password = ? 
[02:22:06:914] [DEBUG] - org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: t7(String), S6h8CwRiXkdyIFUP1rFF1g==(String)
[02:22:06:915] [DEBUG] - org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[02:22:06:916] [DEBUG] - org.mybatis.spring.SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@367fad45]
[02:22:06:920] [DEBUG] - org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor.writeWithMessageConverters(AbstractMessageConverterMethodProcessor.java:273) - Using 'application/json', given [application/json, text/javascript, */*;q=0.01] and supported [application/json, application/*+json, application/json, application/*+json]
[02:22:06:921] [DEBUG] - org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:91) - Writing [ApiRestResponse{status=10000, msg='SUCCESS', data=com.wei.oa_spring.model.pojo.User@40f097b}]
[02:22:06:921] [DEBUG] - org.springframework.web.servlet.FrameworkServlet.logResult(FrameworkServlet.java:1131) - Completed 200 OK
[02:22:06:945] [DEBUG] - org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:91) - GET "/index", parameters={}
[02:22:06:946] [DEBUG] - org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:412) - Mapped to com.wei.oa_spring.controller.IndexController#index(HttpServletRequest)
[02:22:06:948] [DEBUG] - org.mybatis.spring.SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[02:22:06:949] [DEBUG] - org.mybatis.spring.SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@211f5584] was not registered for synchronization because synchronization is not active
[02:22:06:950] [DEBUG] - org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:115) - Fetching JDBC Connection from DataSource
[02:22:06:950] [DEBUG] - org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [HikariProxyConnection@150850321 wrapping com.mysql.cj.jdbc.ConnectionImpl@1e8fef41] will not be managed by Spring
[02:22:06:951] [DEBUG] - org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: select employee_id , `name`, department_id, title, `level` from adm_employee where employee_id = ? 
[02:22:06:952] [DEBUG] - org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 2(Long)
[02:22:06:954] [DEBUG] - org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[02:22:06:954] [DEBUG] - org.mybatis.spring.SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@211f5584]
[02:22:06:955] [DEBUG] - org.mybatis.spring.SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[02:22:06:955] [DEBUG] - org.mybatis.spring.SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@53db6995] was not registered for synchronization because synchronization is not active
[02:22:06:955] [DEBUG] - org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:115) - Fetching JDBC Connection from DataSource
[02:22:06:956] [DEBUG] - org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [HikariProxyConnection@1730562644 wrapping com.mysql.cj.jdbc.ConnectionImpl@1e8fef41] will not be managed by Spring
[02:22:06:956] [DEBUG] - org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: select department_id, department_name from adm_department where department_id = ? 
[02:22:06:957] [DEBUG] - org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 2(Long)
[02:22:06:959] [DEBUG] - org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[02:22:06:959] [DEBUG] - org.mybatis.spring.SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@53db6995]
[02:22:06:960] [DEBUG] - org.mybatis.spring.SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[02:22:06:960] [DEBUG] - org.mybatis.spring.SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7a0a55c9] was not registered for synchronization because synchronization is not active
[02:22:06:960] [DEBUG] - org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:115) - Fetching JDBC Connection from DataSource
[02:22:06:961] [DEBUG] - org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [HikariProxyConnection@1913986268 wrapping com.mysql.cj.jdbc.ConnectionImpl@1e8fef41] will not be managed by Spring
[02:22:06:961] [DEBUG] - org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT DISTINCT n.* from sys_role_user ru, sys_role_node rn, sys_node n where ru.role_id = rn.role_id and user_id = ? and rn.node_id = n.node_id ORDER BY n.node_code 
[02:22:06:961] [DEBUG] - org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 2(Long)
[02:22:06:964] [DEBUG] - org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 4
[02:22:06:965] [DEBUG] - org.mybatis.spring.SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7a0a55c9]
[02:22:06:972] [DEBUG] - org.springframework.web.servlet.view.ContentNegotiatingViewResolver.getBestView(ContentNegotiatingViewResolver.java:348) - Selected 'text/html' given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, application/signed-exchange;v=b3;q=0.7, */*;q=0.8]
[02:22:06:972] [DEBUG] - org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:310) - View name '/index', model {}
[02:22:06:972] [DEBUG] - org.springframework.web.servlet.view.AbstractTemplateView.renderMergedOutputModel(AbstractTemplateView.java:176) - Rendering [/index.ftl]
[02:22:06:974] [DEBUG] - org.springframework.web.servlet.FrameworkServlet.logResult(FrameworkServlet.java:1131) - Completed 200 OK
[02:22:07:071] [DEBUG] - org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:91) - GET "/forward/notice", parameters={}
[02:22:07:072] [DEBUG] - org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:412) - Mapped to com.wei.oa_spring.controller.ForwardController#doGet(String, HttpServletRequest, HttpServletResponse)
[02:22:07:083] [DEBUG] - org.springframework.web.servlet.view.ContentNegotiatingViewResolver.getBestView(ContentNegotiatingViewResolver.java:348) - Selected 'text/html' given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, application/signed-exchange;v=b3;q=0.7, */*;q=0.8]
[02:22:07:083] [DEBUG] - org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:310) - View name '/notice', model {}
[02:22:07:084] [DEBUG] - org.springframework.web.servlet.view.AbstractTemplateView.renderMergedOutputModel(AbstractTemplateView.java:176) - Rendering [/notice.ftl]
[02:22:07:085] [DEBUG] - org.springframework.web.servlet.FrameworkServlet.logResult(FrameworkServlet.java:1131) - Completed 200 OK
[02:22:07:200] [DEBUG] - org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:91) - GET "/notice/list?page=1&limit=10", parameters={masked}
[02:22:07:200] [DEBUG] - org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:412) - Mapped to com.wei.oa_spring.controller.NoticeController#getNoticeList(HttpSession, HttpServletRequest, HttpServletResponse)
[02:22:07:202] [DEBUG] - org.mybatis.spring.SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[02:22:07:202] [DEBUG] - org.mybatis.spring.SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5985e725] was not registered for synchronization because synchronization is not active
[02:22:07:203] [DEBUG] - org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:115) - Fetching JDBC Connection from DataSource
[02:22:07:203] [DEBUG] - org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [HikariProxyConnection@1572497613 wrapping com.mysql.cj.jdbc.ConnectionImpl@1e8fef41] will not be managed by Spring
[02:22:07:203] [DEBUG] - org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: select notice_id , receiver_id, content, create_time from sys_notice where receiver_id = ? order by create_time desc limit 0,100 
[02:22:07:204] [DEBUG] - org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 2(Long)
[02:22:07:207] [DEBUG] - org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 8
[02:22:07:208] [DEBUG] - org.mybatis.spring.SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5985e725]
[02:22:07:210] [DEBUG] - org.springframework.web.servlet.FrameworkServlet.logResult(FrameworkServlet.java:1131) - Completed 200 OK
[02:22:11:187] [DEBUG] - org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:91) - GET "/forward/audit", parameters={}
[02:22:11:188] [DEBUG] - org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:412) - Mapped to com.wei.oa_spring.controller.ForwardController#doGet(String, HttpServletRequest, HttpServletResponse)
[02:22:11:196] [DEBUG] - org.springframework.web.servlet.view.ContentNegotiatingViewResolver.getBestView(ContentNegotiatingViewResolver.java:348) - Selected 'text/html' given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, application/signed-exchange;v=b3;q=0.7, */*;q=0.8]
[02:22:11:196] [DEBUG] - org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:310) - View name '/audit', model {}
[02:22:11:196] [DEBUG] - org.springframework.web.servlet.view.AbstractTemplateView.renderMergedOutputModel(AbstractTemplateView.java:176) - Rendering [/audit.ftl]
[02:22:11:197] [DEBUG] - org.springframework.web.servlet.FrameworkServlet.logResult(FrameworkServlet.java:1131) - Completed 200 OK
[02:22:11:317] [DEBUG] - org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:91) - GET "/leave/list?page=1&limit=10", parameters={masked}
[02:22:11:317] [DEBUG] - org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:412) - Mapped to com.wei.oa_spring.controller.LeaveFormController#getLeaveFormList(HttpSession)
[02:22:11:320] [DEBUG] - org.mybatis.spring.SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[02:22:11:320] [DEBUG] - org.mybatis.spring.SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4e826d6a] was not registered for synchronization because synchronization is not active
[02:22:11:322] [DEBUG] - org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:115) - Fetching JDBC Connection from DataSource
[02:22:11:323] [DEBUG] - org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [HikariProxyConnection@1680816942 wrapping com.mysql.cj.jdbc.ConnectionImpl@1e8fef41] will not be managed by Spring
[02:22:11:323] [DEBUG] - org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT f.*, e.`name`, d.* FROM adm_leave_form f, adm_process_flow pf, adm_employee e, adm_department d WHERE f.form_id = pf.form_id AND f.employee_id = e.employee_id AND e.department_id = d.department_id AND pf.state = ? AND pf.operator_id = ? 
[02:22:11:324] [DEBUG] - org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: process(String), 2(Long)
[02:22:11:326] [DEBUG] - org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 0
[02:22:11:327] [DEBUG] - org.mybatis.spring.SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4e826d6a]
[02:22:11:330] [DEBUG] - org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor.writeWithMessageConverters(AbstractMessageConverterMethodProcessor.java:273) - Using 'application/json', given [application/json, text/javascript, */*;q=0.01] and supported [application/json, application/*+json, application/json, application/*+json]
[02:22:11:330] [DEBUG] - org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:91) - Writing [{msg=, code=0, data=[], count=0}]
[02:22:11:332] [DEBUG] - org.springframework.web.servlet.FrameworkServlet.logResult(FrameworkServlet.java:1131) - Completed 200 OK
[02:22:11:739] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417) - imooc_oa_datasource - Pool stats (total=10, active=0, idle=10, waiting=0)
[02:22:12:007] [DEBUG] - org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:91) - GET "/forward/form", parameters={}
[02:22:12:007] [DEBUG] - org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:412) - Mapped to com.wei.oa_spring.controller.ForwardController#doGet(String, HttpServletRequest, HttpServletResponse)
[02:22:12:014] [DEBUG] - org.springframework.web.servlet.view.ContentNegotiatingViewResolver.getBestView(ContentNegotiatingViewResolver.java:348) - Selected 'text/html' given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, application/signed-exchange;v=b3;q=0.7, */*;q=0.8]
[02:22:12:014] [DEBUG] - org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:310) - View name '/form', model {}
[02:22:12:015] [DEBUG] - org.springframework.web.servlet.view.AbstractTemplateView.renderMergedOutputModel(AbstractTemplateView.java:176) - Rendering [/form.ftl]
[02:22:12:015] [DEBUG] - org.springframework.web.servlet.FrameworkServlet.logResult(FrameworkServlet.java:1131) - Completed 200 OK
[02:22:27:588] [DEBUG] - org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:91) - POST "/leave/create", parameters={masked}
[02:22:27:589] [DEBUG] - org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:412) - Mapped to com.wei.oa_spring.controller.LeaveFormController#create(HttpServletRequest, HttpSession)
[02:22:27:591] [DEBUG] - org.mybatis.spring.SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[02:22:27:592] [DEBUG] - org.mybatis.spring.SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3296ace] was not registered for synchronization because synchronization is not active
[02:22:27:592] [DEBUG] - org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:115) - Fetching JDBC Connection from DataSource
[02:22:27:593] [DEBUG] - org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [HikariProxyConnection@172692972 wrapping com.mysql.cj.jdbc.ConnectionImpl@1e8fef41] will not be managed by Spring
[02:22:27:593] [DEBUG] - org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: select employee_id , `name`, department_id, title, `level` from adm_employee where employee_id = ? 
[02:22:27:594] [DEBUG] - org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 2(Long)
[02:22:27:595] [DEBUG] - org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[02:22:27:595] [DEBUG] - org.mybatis.spring.SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3296ace]
[02:22:27:595] [DEBUG] - org.mybatis.spring.SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[02:22:27:595] [DEBUG] - org.mybatis.spring.SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@ee36963] was not registered for synchronization because synchronization is not active
[02:22:27:620] [DEBUG] - org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:115) - Fetching JDBC Connection from DataSource
[02:22:27:620] [DEBUG] - org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [HikariProxyConnection@1741127653 wrapping com.mysql.cj.jdbc.ConnectionImpl@1e8fef41] will not be managed by Spring
[02:22:27:620] [DEBUG] - org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: insert into adm_leave_form ( employee_id, form_type, start_time, end_time, reason, create_time, `state` ) values ( ?, ?, ?, ?, ?, ?, ? ) 
[02:22:27:630] [DEBUG] - org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 2(Long), 1(Integer), 2023-03-22 00:00:00.0(Timestamp), 2023-04-25 00:00:00.0(Timestamp), 请假三天(String), 2023-03-22 02:22:27.591(Timestamp), processing(String)
[02:22:27:653] [DEBUG] - org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==    Updates: 1
[02:22:27:653] [DEBUG] - org.mybatis.spring.SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@ee36963]
[02:22:32:787] [DEBUG] - org.mybatis.spring.SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[02:22:32:787] [DEBUG] - org.mybatis.spring.SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1cb58e3c] was not registered for synchronization because synchronization is not active
[02:22:32:797] [DEBUG] - org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:115) - Fetching JDBC Connection from DataSource
[02:22:32:797] [DEBUG] - org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [HikariProxyConnection@1176793351 wrapping com.mysql.cj.jdbc.ConnectionImpl@1e8fef41] will not be managed by Spring
[02:22:32:797] [DEBUG] - org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: insert into adm_process_flow ( form_id, operator_id, `action`, create_time, order_no, `state`, is_last ) values ( ?, ?, ?, ?, ?, ?, ? ) 
[02:22:32:807] [DEBUG] - org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 69(Long), 2(Long), apply(String), 2023-03-22 02:22:27.653(Timestamp), 1(Integer), complete(String), 0(Integer)
[02:22:32:807] [DEBUG] - org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==    Updates: 1
[02:22:32:807] [DEBUG] - org.mybatis.spring.SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1cb58e3c]
[02:22:32:807] [DEBUG] - org.mybatis.spring.SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[02:22:32:807] [DEBUG] - org.mybatis.spring.SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6a71aee9] was not registered for synchronization because synchronization is not active
[02:22:32:827] [DEBUG] - org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:115) - Fetching JDBC Connection from DataSource
[02:22:32:827] [DEBUG] - org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [HikariProxyConnection@1239282615 wrapping com.mysql.cj.jdbc.ConnectionImpl@1e8fef41] will not be managed by Spring
[02:22:32:827] [DEBUG] - org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT employee_id , `name`, department_id, title, `level` from adm_employee where level = 8 
[02:22:32:827] [DEBUG] - org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 
[02:22:32:837] [DEBUG] - org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[02:22:32:837] [DEBUG] - org.mybatis.spring.SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6a71aee9]
[02:22:32:837] [DEBUG] - org.mybatis.spring.SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[02:22:32:837] [DEBUG] - org.mybatis.spring.SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@75db995c] was not registered for synchronization because synchronization is not active
[02:22:32:837] [DEBUG] - org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:115) - Fetching JDBC Connection from DataSource
[02:22:32:837] [DEBUG] - org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [HikariProxyConnection@1422907011 wrapping com.mysql.cj.jdbc.ConnectionImpl@1e8fef41] will not be managed by Spring
[02:22:32:837] [DEBUG] - org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: insert into adm_process_flow ( form_id, operator_id, `action`, create_time, order_no, `state`, is_last ) values ( ?, ?, ?, ?, ?, ?, ? ) 
[02:22:32:847] [DEBUG] - org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 69(Long), 1(Long), audit(String), 2023-03-22 02:22:32.837(Timestamp), 2(Integer), process(String), 1(Integer)
[02:22:32:847] [DEBUG] - org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==    Updates: 1
[02:22:32:847] [DEBUG] - org.mybatis.spring.SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@75db995c]
[02:22:32:847] [DEBUG] - org.mybatis.spring.SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[02:22:32:847] [DEBUG] - org.mybatis.spring.SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@54112724] was not registered for synchronization because synchronization is not active
[02:22:32:847] [DEBUG] - org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:115) - Fetching JDBC Connection from DataSource
[02:22:32:847] [DEBUG] - org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [HikariProxyConnection@75876852 wrapping com.mysql.cj.jdbc.ConnectionImpl@1e8fef41] will not be managed by Spring
[02:22:32:847] [DEBUG] - org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: insert into sys_notice (notice_id, receiver_id, content, create_time) values (?, ?, ?, ?) 
[02:22:32:847] [DEBUG] - org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: null, 2(Long), 您的请假申请[2023-03-22-00时-2023-04-25-00时]已提交，请等待上级审批(String), 2023-03-22 02:22:32.847(Timestamp)
[02:22:32:847] [DEBUG] - org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==    Updates: 1
[02:22:32:857] [DEBUG] - org.mybatis.spring.SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@54112724]
[02:22:32:857] [DEBUG] - org.mybatis.spring.SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[02:22:32:857] [DEBUG] - org.mybatis.spring.SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6ec1c71e] was not registered for synchronization because synchronization is not active
[02:22:32:857] [DEBUG] - org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:115) - Fetching JDBC Connection from DataSource
[02:22:32:857] [DEBUG] - org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [HikariProxyConnection@867493349 wrapping com.mysql.cj.jdbc.ConnectionImpl@1e8fef41] will not be managed by Spring
[02:22:32:857] [DEBUG] - org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: insert into sys_notice (notice_id, receiver_id, content, create_time) values (?, ?, ?, ?) 
[02:22:32:857] [DEBUG] - org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: null, 1(Long), 部门经理-齐部门经理提起请假申请[2023-03-22-00时-2023-04-25-00时],请尽快审批(String), 2023-03-22 02:22:32.857(Timestamp)
[02:22:32:857] [DEBUG] - org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==    Updates: 1
[02:22:32:857] [DEBUG] - org.mybatis.spring.SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6ec1c71e]
[02:22:32:867] [DEBUG] - org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor.writeWithMessageConverters(AbstractMessageConverterMethodProcessor.java:273) - Using 'application/json', given [application/json, text/javascript, */*;q=0.01] and supported [application/json, application/*+json, application/json, application/*+json]
[02:22:32:867] [DEBUG] - org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:91) - Writing [{code=0, message=success}]
[02:22:32:867] [DEBUG] - org.springframework.web.servlet.FrameworkServlet.logResult(FrameworkServlet.java:1131) - Completed 200 OK
[02:22:34:193] [DEBUG] - org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:91) - GET "/forward/notice", parameters={}
[02:22:34:194] [DEBUG] - org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:412) - Mapped to com.wei.oa_spring.controller.ForwardController#doGet(String, HttpServletRequest, HttpServletResponse)
[02:22:34:204] [DEBUG] - org.springframework.web.servlet.view.ContentNegotiatingViewResolver.getBestView(ContentNegotiatingViewResolver.java:348) - Selected 'text/html' given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, application/signed-exchange;v=b3;q=0.7, */*;q=0.8]
[02:22:34:204] [DEBUG] - org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:310) - View name '/notice', model {}
[02:22:34:204] [DEBUG] - org.springframework.web.servlet.view.AbstractTemplateView.renderMergedOutputModel(AbstractTemplateView.java:176) - Rendering [/notice.ftl]
[02:22:34:205] [DEBUG] - org.springframework.web.servlet.FrameworkServlet.logResult(FrameworkServlet.java:1131) - Completed 200 OK
[02:22:34:326] [DEBUG] - org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:91) - GET "/notice/list?page=1&limit=10", parameters={masked}
[02:22:34:326] [DEBUG] - org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:412) - Mapped to com.wei.oa_spring.controller.NoticeController#getNoticeList(HttpSession, HttpServletRequest, HttpServletResponse)
[02:22:34:328] [DEBUG] - org.mybatis.spring.SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[02:22:34:329] [DEBUG] - org.mybatis.spring.SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6cf5784f] was not registered for synchronization because synchronization is not active
[02:22:34:330] [DEBUG] - org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:115) - Fetching JDBC Connection from DataSource
[02:22:34:331] [DEBUG] - org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [HikariProxyConnection@2079174287 wrapping com.mysql.cj.jdbc.ConnectionImpl@1e8fef41] will not be managed by Spring
[02:22:34:331] [DEBUG] - org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: select notice_id , receiver_id, content, create_time from sys_notice where receiver_id = ? order by create_time desc limit 0,100 
[02:22:34:331] [DEBUG] - org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 2(Long)
[02:22:34:335] [DEBUG] - org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 9
[02:22:34:336] [DEBUG] - org.mybatis.spring.SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6cf5784f]
[02:22:34:337] [DEBUG] - org.springframework.web.servlet.FrameworkServlet.logResult(FrameworkServlet.java:1131) - Completed 200 OK
[02:22:41:742] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417) - imooc_oa_datasource - Pool stats (total=10, active=0, idle=10, waiting=0)
[02:22:55:498] [DEBUG] - org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:91) - GET "/logout", parameters={}
[02:22:55:499] [DEBUG] - org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:412) - Mapped to com.wei.oa_spring.controller.UserController#logout(HttpSession)
[02:22:55:502] [DEBUG] - org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:310) - View name 'redirect:', model {}
[02:22:55:502] [DEBUG] - org.springframework.web.servlet.FrameworkServlet.logResult(FrameworkServlet.java:1131) - Completed 302 FOUND
[02:22:55:508] [DEBUG] - org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:91) - GET "/login", parameters={}
[02:22:55:509] [DEBUG] - org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:412) - Mapped to com.wei.oa_spring.controller.UserController#login_page()
[02:22:55:516] [DEBUG] - org.springframework.web.servlet.view.ContentNegotiatingViewResolver.getBestView(ContentNegotiatingViewResolver.java:348) - Selected 'text/html' given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, application/signed-exchange;v=b3;q=0.7, */*;q=0.8]
[02:22:55:516] [DEBUG] - org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:310) - View name 'login', model {msg=传给Freemarker的值}
[02:22:55:516] [DEBUG] - org.springframework.web.servlet.view.AbstractTemplateView.renderMergedOutputModel(AbstractTemplateView.java:176) - Rendering [login.ftl]
[02:22:55:517] [DEBUG] - org.springframework.web.servlet.FrameworkServlet.logResult(FrameworkServlet.java:1131) - Completed 200 OK
[02:22:58:786] [DEBUG] - org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:91) - POST "/check_login", parameters={masked}
[02:22:58:787] [DEBUG] - org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:412) - Mapped to com.wei.oa_spring.controller.UserController#login(String, String, HttpSession)
[02:22:58:788] [DEBUG] - org.mybatis.spring.SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[02:22:58:789] [DEBUG] - org.mybatis.spring.SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@78971251] was not registered for synchronization because synchronization is not active
[02:22:58:789] [DEBUG] - org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:115) - Fetching JDBC Connection from DataSource
[02:22:58:790] [DEBUG] - org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [HikariProxyConnection@632839614 wrapping com.mysql.cj.jdbc.ConnectionImpl@1e8fef41] will not be managed by Spring
[02:22:58:790] [DEBUG] - org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: select user_id , username, `password`, employee_id, salt from sys_user where username = ? and password = ? 
[02:22:58:790] [DEBUG] - org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: m8(String), S6h8CwRiXkdyIFUP1rFF1g==(String)
[02:22:58:792] [DEBUG] - org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[02:22:58:792] [DEBUG] - org.mybatis.spring.SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@78971251]
[02:22:58:796] [DEBUG] - org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor.writeWithMessageConverters(AbstractMessageConverterMethodProcessor.java:273) - Using 'application/json', given [application/json, text/javascript, */*;q=0.01] and supported [application/json, application/*+json, application/json, application/*+json]
[02:22:58:797] [DEBUG] - org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:91) - Writing [ApiRestResponse{status=10000, msg='SUCCESS', data=com.wei.oa_spring.model.pojo.User@3c9c1637}]
[02:22:58:798] [DEBUG] - org.springframework.web.servlet.FrameworkServlet.logResult(FrameworkServlet.java:1131) - Completed 200 OK
[02:22:58:818] [DEBUG] - org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:91) - GET "/index", parameters={}
[02:22:58:818] [DEBUG] - org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:412) - Mapped to com.wei.oa_spring.controller.IndexController#index(HttpServletRequest)
[02:22:58:820] [DEBUG] - org.mybatis.spring.SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[02:22:58:821] [DEBUG] - org.mybatis.spring.SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7d655641] was not registered for synchronization because synchronization is not active
[02:22:58:821] [DEBUG] - org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:115) - Fetching JDBC Connection from DataSource
[02:22:58:821] [DEBUG] - org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [HikariProxyConnection@2014238320 wrapping com.mysql.cj.jdbc.ConnectionImpl@1e8fef41] will not be managed by Spring
[02:22:58:822] [DEBUG] - org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: select employee_id , `name`, department_id, title, `level` from adm_employee where employee_id = ? 
[02:22:58:822] [DEBUG] - org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 1(Long)
[02:22:58:824] [DEBUG] - org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[02:22:58:824] [DEBUG] - org.mybatis.spring.SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7d655641]
[02:22:58:824] [DEBUG] - org.mybatis.spring.SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[02:22:58:825] [DEBUG] - org.mybatis.spring.SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3ab9b77c] was not registered for synchronization because synchronization is not active
[02:22:58:825] [DEBUG] - org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:115) - Fetching JDBC Connection from DataSource
[02:22:58:825] [DEBUG] - org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [HikariProxyConnection@1832466740 wrapping com.mysql.cj.jdbc.ConnectionImpl@1e8fef41] will not be managed by Spring
[02:22:58:825] [DEBUG] - org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: select department_id, department_name from adm_department where department_id = ? 
[02:22:58:826] [DEBUG] - org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 1(Long)
[02:22:58:827] [DEBUG] - org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[02:22:58:828] [DEBUG] - org.mybatis.spring.SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3ab9b77c]
[02:22:58:828] [DEBUG] - org.mybatis.spring.SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[02:22:58:828] [DEBUG] - org.mybatis.spring.SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2882b986] was not registered for synchronization because synchronization is not active
[02:22:58:828] [DEBUG] - org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:115) - Fetching JDBC Connection from DataSource
[02:22:58:829] [DEBUG] - org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [HikariProxyConnection@1601698237 wrapping com.mysql.cj.jdbc.ConnectionImpl@1e8fef41] will not be managed by Spring
[02:22:58:829] [DEBUG] - org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT DISTINCT n.* from sys_role_user ru, sys_role_node rn, sys_node n where ru.role_id = rn.role_id and user_id = ? and rn.node_id = n.node_id ORDER BY n.node_code 
[02:22:58:830] [DEBUG] - org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 1(Long)
[02:22:58:832] [DEBUG] - org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 4
[02:22:58:833] [DEBUG] - org.mybatis.spring.SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2882b986]
[02:22:58:839] [DEBUG] - org.springframework.web.servlet.view.ContentNegotiatingViewResolver.getBestView(ContentNegotiatingViewResolver.java:348) - Selected 'text/html' given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, application/signed-exchange;v=b3;q=0.7, */*;q=0.8]
[02:22:58:839] [DEBUG] - org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:310) - View name '/index', model {}
[02:22:58:839] [DEBUG] - org.springframework.web.servlet.view.AbstractTemplateView.renderMergedOutputModel(AbstractTemplateView.java:176) - Rendering [/index.ftl]
[02:22:58:840] [DEBUG] - org.springframework.web.servlet.FrameworkServlet.logResult(FrameworkServlet.java:1131) - Completed 200 OK
[02:22:58:942] [DEBUG] - org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:91) - GET "/forward/notice", parameters={}
[02:22:58:943] [DEBUG] - org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:412) - Mapped to com.wei.oa_spring.controller.ForwardController#doGet(String, HttpServletRequest, HttpServletResponse)
[02:22:58:951] [DEBUG] - org.springframework.web.servlet.view.ContentNegotiatingViewResolver.getBestView(ContentNegotiatingViewResolver.java:348) - Selected 'text/html' given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, application/signed-exchange;v=b3;q=0.7, */*;q=0.8]
[02:22:58:951] [DEBUG] - org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:310) - View name '/notice', model {}
[02:22:58:951] [DEBUG] - org.springframework.web.servlet.view.AbstractTemplateView.renderMergedOutputModel(AbstractTemplateView.java:176) - Rendering [/notice.ftl]
[02:22:58:952] [DEBUG] - org.springframework.web.servlet.FrameworkServlet.logResult(FrameworkServlet.java:1131) - Completed 200 OK
[02:22:59:104] [DEBUG] - org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:91) - GET "/notice/list?page=1&limit=10", parameters={masked}
[02:22:59:104] [DEBUG] - org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:412) - Mapped to com.wei.oa_spring.controller.NoticeController#getNoticeList(HttpSession, HttpServletRequest, HttpServletResponse)
[02:22:59:106] [DEBUG] - org.mybatis.spring.SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[02:22:59:107] [DEBUG] - org.mybatis.spring.SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6d83175a] was not registered for synchronization because synchronization is not active
[02:22:59:107] [DEBUG] - org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:115) - Fetching JDBC Connection from DataSource
[02:22:59:107] [DEBUG] - org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [HikariProxyConnection@1145820160 wrapping com.mysql.cj.jdbc.ConnectionImpl@1e8fef41] will not be managed by Spring
[02:22:59:108] [DEBUG] - org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: select notice_id , receiver_id, content, create_time from sys_notice where receiver_id = ? order by create_time desc limit 0,100 
[02:22:59:109] [DEBUG] - org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 1(Long)
[02:22:59:112] [DEBUG] - org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 16
[02:22:59:114] [DEBUG] - org.mybatis.spring.SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6d83175a]
[02:22:59:115] [DEBUG] - org.springframework.web.servlet.FrameworkServlet.logResult(FrameworkServlet.java:1131) - Completed 200 OK
[02:23:00:294] [DEBUG] - org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:91) - GET "/forward/audit", parameters={}
[02:23:00:295] [DEBUG] - org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:412) - Mapped to com.wei.oa_spring.controller.ForwardController#doGet(String, HttpServletRequest, HttpServletResponse)
[02:23:00:305] [DEBUG] - org.springframework.web.servlet.view.ContentNegotiatingViewResolver.getBestView(ContentNegotiatingViewResolver.java:348) - Selected 'text/html' given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, application/signed-exchange;v=b3;q=0.7, */*;q=0.8]
[02:23:00:305] [DEBUG] - org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:310) - View name '/audit', model {}
[02:23:00:305] [DEBUG] - org.springframework.web.servlet.view.AbstractTemplateView.renderMergedOutputModel(AbstractTemplateView.java:176) - Rendering [/audit.ftl]
[02:23:00:306] [DEBUG] - org.springframework.web.servlet.FrameworkServlet.logResult(FrameworkServlet.java:1131) - Completed 200 OK
[02:23:00:453] [DEBUG] - org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:91) - GET "/leave/list?page=1&limit=10", parameters={masked}
[02:23:00:453] [DEBUG] - org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:412) - Mapped to com.wei.oa_spring.controller.LeaveFormController#getLeaveFormList(HttpSession)
[02:23:00:455] [DEBUG] - org.mybatis.spring.SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[02:23:00:456] [DEBUG] - org.mybatis.spring.SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@16452440] was not registered for synchronization because synchronization is not active
[02:23:00:456] [DEBUG] - org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:115) - Fetching JDBC Connection from DataSource
[02:23:00:457] [DEBUG] - org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [HikariProxyConnection@1629415671 wrapping com.mysql.cj.jdbc.ConnectionImpl@1e8fef41] will not be managed by Spring
[02:23:00:457] [DEBUG] - org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT f.*, e.`name`, d.* FROM adm_leave_form f, adm_process_flow pf, adm_employee e, adm_department d WHERE f.form_id = pf.form_id AND f.employee_id = e.employee_id AND e.department_id = d.department_id AND pf.state = ? AND pf.operator_id = ? 
[02:23:00:458] [DEBUG] - org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: process(String), 1(Long)
[02:23:00:461] [DEBUG] - org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[02:23:00:462] [DEBUG] - org.mybatis.spring.SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@16452440]
[02:23:00:466] [DEBUG] - org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor.writeWithMessageConverters(AbstractMessageConverterMethodProcessor.java:273) - Using 'application/json', given [application/json, text/javascript, */*;q=0.01] and supported [application/json, application/*+json, application/json, application/*+json]
[02:23:00:466] [DEBUG] - org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:91) - Writing [{msg=, code=0, data=[{start_time=2023-03-22 00:00:00.0, reason=请假三天, create_time=2023-03-22 02:22:28 (truncated)...]
[02:23:00:468] [DEBUG] - org.springframework.web.servlet.FrameworkServlet.logResult(FrameworkServlet.java:1131) - Completed 200 OK
[02:23:11:750] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417) - imooc_oa_datasource - Pool stats (total=10, active=0, idle=10, waiting=0)
[02:23:41:751] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417) - imooc_oa_datasource - Pool stats (total=10, active=0, idle=10, waiting=0)
[02:24:11:756] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417) - imooc_oa_datasource - Pool stats (total=10, active=0, idle=10, waiting=0)
[02:24:41:772] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417) - imooc_oa_datasource - Pool stats (total=10, active=0, idle=10, waiting=0)
[02:25:11:786] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417) - imooc_oa_datasource - Pool stats (total=10, active=0, idle=10, waiting=0)
[02:25:41:788] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417) - imooc_oa_datasource - Pool stats (total=10, active=0, idle=10, waiting=0)
[02:26:11:796] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417) - imooc_oa_datasource - Pool stats (total=10, active=0, idle=10, waiting=0)
[02:26:41:800] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417) - imooc_oa_datasource - Pool stats (total=10, active=0, idle=10, waiting=0)
[02:26:46:926] [DEBUG] - org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:91) - POST "/leave/audit", parameters={masked}
[02:26:46:927] [DEBUG] - org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:412) - Mapped to com.wei.oa_spring.controller.LeaveFormController#audit(HttpSession, HttpServletRequest, HttpServletResponse)
[02:26:46:929] [DEBUG] - org.mybatis.spring.SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[02:26:46:929] [DEBUG] - org.mybatis.spring.SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@54f2f237] was not registered for synchronization because synchronization is not active
[02:26:46:929] [DEBUG] - org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:115) - Fetching JDBC Connection from DataSource
[02:26:46:930] [DEBUG] - org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [HikariProxyConnection@23757483 wrapping com.mysql.cj.jdbc.ConnectionImpl@1e8fef41] will not be managed by Spring
[02:26:46:930] [DEBUG] - org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: select * from adm_process_flow where form_id = ? order by order_no 
[02:26:46:931] [DEBUG] - org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 69(Long)
[02:26:46:933] [DEBUG] - org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 2
[02:26:46:933] [DEBUG] - org.mybatis.spring.SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@54f2f237]
[02:26:46:934] [DEBUG] - org.mybatis.spring.SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[02:26:46:935] [DEBUG] - org.mybatis.spring.SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1414f06d] was not registered for synchronization because synchronization is not active
[02:26:46:935] [DEBUG] - org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:115) - Fetching JDBC Connection from DataSource
[02:26:46:935] [DEBUG] - org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [HikariProxyConnection@1102989214 wrapping com.mysql.cj.jdbc.ConnectionImpl@1e8fef41] will not be managed by Spring
[02:26:46:935] [DEBUG] - org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: UPDATE adm_process_flow SET form_id = ?, operator_id=?, action = ?, result=?, reason = ?, audit_time = ?, state = ? where process_id = ? 
[02:26:46:936] [DEBUG] - org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 69(Long), 1(Long), audit(String), approved(String), (String), 2023-03-22 02:26:46.934(Timestamp), complete(String), 121(Long)
[02:26:46:946] [DEBUG] - org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==    Updates: 1
[02:26:46:946] [DEBUG] - org.mybatis.spring.SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1414f06d]
[02:26:46:946] [DEBUG] - org.mybatis.spring.SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[02:26:46:946] [DEBUG] - org.mybatis.spring.SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@51cc5279] was not registered for synchronization because synchronization is not active
[02:26:46:948] [DEBUG] - org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:115) - Fetching JDBC Connection from DataSource
[02:26:46:948] [DEBUG] - org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [HikariProxyConnection@1651001269 wrapping com.mysql.cj.jdbc.ConnectionImpl@1e8fef41] will not be managed by Spring
[02:26:46:950] [DEBUG] - org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: select form_id, employee_id, form_type, start_time, end_time, reason, create_time, `state` from adm_leave_form where form_id = ? 
[02:26:46:950] [DEBUG] - org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 69(Long)
[02:26:46:950] [DEBUG] - org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[02:26:46:950] [DEBUG] - org.mybatis.spring.SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@51cc5279]
[02:26:46:950] [DEBUG] - org.mybatis.spring.SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[02:26:46:950] [DEBUG] - org.mybatis.spring.SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@41286b7a] was not registered for synchronization because synchronization is not active
[02:26:46:950] [DEBUG] - org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:115) - Fetching JDBC Connection from DataSource
[02:26:46:950] [DEBUG] - org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [HikariProxyConnection@1925490364 wrapping com.mysql.cj.jdbc.ConnectionImpl@1e8fef41] will not be managed by Spring
[02:26:46:950] [DEBUG] - org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: select employee_id , `name`, department_id, title, `level` from adm_employee where employee_id = ? 
[02:26:46:950] [DEBUG] - org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 2(Long)
[02:26:46:950] [DEBUG] - org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[02:26:46:950] [DEBUG] - org.mybatis.spring.SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@41286b7a]
[02:26:46:950] [DEBUG] - org.mybatis.spring.SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[02:26:46:950] [DEBUG] - org.mybatis.spring.SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4884c1cf] was not registered for synchronization because synchronization is not active
[02:26:46:950] [DEBUG] - org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:115) - Fetching JDBC Connection from DataSource
[02:26:46:950] [DEBUG] - org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [HikariProxyConnection@1257574430 wrapping com.mysql.cj.jdbc.ConnectionImpl@1e8fef41] will not be managed by Spring
[02:26:46:950] [DEBUG] - org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: select employee_id , `name`, department_id, title, `level` from adm_employee where employee_id = ? 
[02:26:46:950] [DEBUG] - org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 1(Long)
[02:26:46:950] [DEBUG] - org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[02:26:46:950] [DEBUG] - org.mybatis.spring.SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4884c1cf]
[02:26:46:950] [DEBUG] - org.mybatis.spring.SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[02:26:46:950] [DEBUG] - org.mybatis.spring.SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@472d6b4c] was not registered for synchronization because synchronization is not active
[02:26:46:960] [DEBUG] - org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:115) - Fetching JDBC Connection from DataSource
[02:26:46:960] [DEBUG] - org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [HikariProxyConnection@692666591 wrapping com.mysql.cj.jdbc.ConnectionImpl@1e8fef41] will not be managed by Spring
[02:26:46:960] [DEBUG] - org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: update adm_leave_form SET employee_id = ?, form_type = ?, start_time = ?, end_time = ?, reason = ?, create_time = ?, `state` = ? where form_id = ? 
[02:26:46:960] [DEBUG] - org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 2(Long), 1(Integer), 2023-03-22 00:00:00.0(Timestamp), 2023-04-25 00:00:00.0(Timestamp), 请假三天(String), 2023-03-22 02:22:28.0(Timestamp), approved(String), 69(Long)
[02:26:46:960] [DEBUG] - org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==    Updates: 1
[02:26:46:965] [DEBUG] - org.mybatis.spring.SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@472d6b4c]
[02:26:46:965] [DEBUG] - org.mybatis.spring.SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[02:26:46:966] [DEBUG] - org.mybatis.spring.SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4bf891b7] was not registered for synchronization because synchronization is not active
[02:26:46:966] [DEBUG] - org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:115) - Fetching JDBC Connection from DataSource
[02:26:46:966] [DEBUG] - org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [HikariProxyConnection@1730409615 wrapping com.mysql.cj.jdbc.ConnectionImpl@1e8fef41] will not be managed by Spring
[02:26:46:966] [DEBUG] - org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: insert into sys_notice ( receiver_id, content, create_time ) values ( ?, ?, ? ) 
[02:26:46:966] [DEBUG] - org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 2(Long), 您的请假申请[2023-03-22-00时-2023-04-25-00时]总经理张总经理已批准,审批意见:,审批流程已结束(String), 2023-03-22 02:26:46.965(Timestamp)
[02:26:46:966] [DEBUG] - org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==    Updates: 1
[02:26:46:966] [DEBUG] - org.mybatis.spring.SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4bf891b7]
[02:26:46:966] [DEBUG] - org.mybatis.spring.SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[02:26:46:966] [DEBUG] - org.mybatis.spring.SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@396c4115] was not registered for synchronization because synchronization is not active
[02:26:46:966] [DEBUG] - org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:115) - Fetching JDBC Connection from DataSource
[02:26:46:966] [DEBUG] - org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [HikariProxyConnection@907414182 wrapping com.mysql.cj.jdbc.ConnectionImpl@1e8fef41] will not be managed by Spring
[02:26:46:966] [DEBUG] - org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: insert into sys_notice (notice_id, receiver_id, content, create_time) values (?, ?, ?, ?) 
[02:26:46:966] [DEBUG] - org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: null, 1(Long), 部门经理-齐部门经理提起请假申请[2023-03-22-00时-2023-04-25-00时]您已批准,审批意见:,审批流程已结束(String), 2023-03-22 02:26:46.966(Timestamp)
[02:26:46:976] [DEBUG] - org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==    Updates: 1
[02:26:46:976] [DEBUG] - org.mybatis.spring.SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@396c4115]
[02:26:46:976] [DEBUG] - org.mybatis.spring.SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[02:26:46:976] [DEBUG] - org.mybatis.spring.SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@32e216d9] was not registered for synchronization because synchronization is not active
[02:26:46:976] [DEBUG] - org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:115) - Fetching JDBC Connection from DataSource
[02:26:46:976] [DEBUG] - org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [HikariProxyConnection@1767738745 wrapping com.mysql.cj.jdbc.ConnectionImpl@1e8fef41] will not be managed by Spring
[02:26:46:976] [DEBUG] - org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: select * from adm_process_flow where form_id = ? order by order_no 
[02:26:46:976] [DEBUG] - org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 69(Long)
[02:26:46:976] [DEBUG] - org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 2
[02:26:46:976] [DEBUG] - org.mybatis.spring.SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@32e216d9]
[02:26:46:982] [DEBUG] - org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:398) - Using @ExceptionHandler com.wei.oa_spring.exception.GlobalExceptionHandler#handleImoocMallException(OAException)
[02:26:46:982] [DEBUG] - org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor.writeWithMessageConverters(AbstractMessageConverterMethodProcessor.java:273) - Using 'application/json', given [application/json, text/javascript, */*;q=0.01] and supported [application/json, application/*+json, application/json, application/*+json]
[02:26:46:982] [DEBUG] - org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:91) - Writing [ApiRestResponse{status=100015, msg='未找到待处理任务', data=null}]
[02:26:46:982] [DEBUG] - org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:145) - Resolved [com.wei.oa_spring.exception.OAException: 未找到待处理任务]
[02:26:46:982] [DEBUG] - org.springframework.web.servlet.FrameworkServlet.logResult(FrameworkServlet.java:1131) - Completed 200 OK
[02:26:52:820] [DEBUG] - org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:91) - GET "/index", parameters={}
[02:26:52:820] [DEBUG] - org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:412) - Mapped to com.wei.oa_spring.controller.IndexController#index(HttpServletRequest)
[02:26:52:822] [DEBUG] - org.mybatis.spring.SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[02:26:52:822] [DEBUG] - org.mybatis.spring.SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5ca41511] was not registered for synchronization because synchronization is not active
[02:26:52:823] [DEBUG] - org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:115) - Fetching JDBC Connection from DataSource
[02:26:52:824] [DEBUG] - org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [HikariProxyConnection@1029227805 wrapping com.mysql.cj.jdbc.ConnectionImpl@1e8fef41] will not be managed by Spring
[02:26:52:824] [DEBUG] - org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: select employee_id , `name`, department_id, title, `level` from adm_employee where employee_id = ? 
[02:26:52:825] [DEBUG] - org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 1(Long)
[02:26:52:826] [DEBUG] - org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[02:26:52:826] [DEBUG] - org.mybatis.spring.SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5ca41511]
[02:26:52:827] [DEBUG] - org.mybatis.spring.SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[02:26:52:827] [DEBUG] - org.mybatis.spring.SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4b8615d] was not registered for synchronization because synchronization is not active
[02:26:52:827] [DEBUG] - org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:115) - Fetching JDBC Connection from DataSource
[02:26:52:827] [DEBUG] - org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [HikariProxyConnection@1358439246 wrapping com.mysql.cj.jdbc.ConnectionImpl@1e8fef41] will not be managed by Spring
[02:26:52:828] [DEBUG] - org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: select department_id, department_name from adm_department where department_id = ? 
[02:26:52:828] [DEBUG] - org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 1(Long)
[02:26:52:829] [DEBUG] - org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[02:26:52:829] [DEBUG] - org.mybatis.spring.SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4b8615d]
[02:26:52:830] [DEBUG] - org.mybatis.spring.SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[02:26:52:830] [DEBUG] - org.mybatis.spring.SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@28c153b6] was not registered for synchronization because synchronization is not active
[02:26:52:831] [DEBUG] - org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:115) - Fetching JDBC Connection from DataSource
[02:26:52:831] [DEBUG] - org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [HikariProxyConnection@1865710970 wrapping com.mysql.cj.jdbc.ConnectionImpl@1e8fef41] will not be managed by Spring
[02:26:52:832] [DEBUG] - org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT DISTINCT n.* from sys_role_user ru, sys_role_node rn, sys_node n where ru.role_id = rn.role_id and user_id = ? and rn.node_id = n.node_id ORDER BY n.node_code 
[02:26:52:832] [DEBUG] - org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 1(Long)
[02:26:52:837] [DEBUG] - org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 4
[02:26:52:838] [DEBUG] - org.mybatis.spring.SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@28c153b6]
[02:26:52:844] [DEBUG] - org.springframework.web.servlet.view.ContentNegotiatingViewResolver.getBestView(ContentNegotiatingViewResolver.java:348) - Selected 'text/html' given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, application/signed-exchange;v=b3;q=0.7, */*;q=0.8]
[02:26:52:844] [DEBUG] - org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:310) - View name '/index', model {}
[02:26:52:844] [DEBUG] - org.springframework.web.servlet.view.AbstractTemplateView.renderMergedOutputModel(AbstractTemplateView.java:176) - Rendering [/index.ftl]
[02:26:52:845] [DEBUG] - org.springframework.web.servlet.FrameworkServlet.logResult(FrameworkServlet.java:1131) - Completed 200 OK
[02:26:52:939] [DEBUG] - org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:91) - GET "/forward/notice", parameters={}
[02:26:52:940] [DEBUG] - org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:412) - Mapped to com.wei.oa_spring.controller.ForwardController#doGet(String, HttpServletRequest, HttpServletResponse)
[02:26:52:950] [DEBUG] - org.springframework.web.servlet.view.ContentNegotiatingViewResolver.getBestView(ContentNegotiatingViewResolver.java:348) - Selected 'text/html' given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, application/signed-exchange;v=b3;q=0.7, */*;q=0.8]
[02:26:52:950] [DEBUG] - org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:310) - View name '/notice', model {}
[02:26:52:950] [DEBUG] - org.springframework.web.servlet.view.AbstractTemplateView.renderMergedOutputModel(AbstractTemplateView.java:176) - Rendering [/notice.ftl]
[02:26:52:952] [DEBUG] - org.springframework.web.servlet.FrameworkServlet.logResult(FrameworkServlet.java:1131) - Completed 200 OK
[02:26:53:116] [DEBUG] - org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:91) - GET "/notice/list?page=1&limit=10", parameters={masked}
[02:26:53:117] [DEBUG] - org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:412) - Mapped to com.wei.oa_spring.controller.NoticeController#getNoticeList(HttpSession, HttpServletRequest, HttpServletResponse)
[02:26:53:120] [DEBUG] - org.mybatis.spring.SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[02:26:53:121] [DEBUG] - org.mybatis.spring.SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@13c87f45] was not registered for synchronization because synchronization is not active
[02:26:53:122] [DEBUG] - org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:115) - Fetching JDBC Connection from DataSource
[02:26:53:123] [DEBUG] - org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [HikariProxyConnection@1960045225 wrapping com.mysql.cj.jdbc.ConnectionImpl@1e8fef41] will not be managed by Spring
[02:26:53:123] [DEBUG] - org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: select notice_id , receiver_id, content, create_time from sys_notice where receiver_id = ? order by create_time desc limit 0,100 
[02:26:53:124] [DEBUG] - org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 1(Long)
[02:26:53:128] [DEBUG] - org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 17
[02:26:53:129] [DEBUG] - org.mybatis.spring.SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@13c87f45]
[02:26:53:130] [DEBUG] - org.springframework.web.servlet.FrameworkServlet.logResult(FrameworkServlet.java:1131) - Completed 200 OK
[02:26:54:191] [DEBUG] - org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:91) - GET "/forward/audit", parameters={}
[02:26:54:191] [DEBUG] - org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:412) - Mapped to com.wei.oa_spring.controller.ForwardController#doGet(String, HttpServletRequest, HttpServletResponse)
[02:26:54:198] [DEBUG] - org.springframework.web.servlet.view.ContentNegotiatingViewResolver.getBestView(ContentNegotiatingViewResolver.java:348) - Selected 'text/html' given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, application/signed-exchange;v=b3;q=0.7, */*;q=0.8]
[02:26:54:198] [DEBUG] - org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:310) - View name '/audit', model {}
[02:26:54:198] [DEBUG] - org.springframework.web.servlet.view.AbstractTemplateView.renderMergedOutputModel(AbstractTemplateView.java:176) - Rendering [/audit.ftl]
[02:26:54:199] [DEBUG] - org.springframework.web.servlet.FrameworkServlet.logResult(FrameworkServlet.java:1131) - Completed 200 OK
[02:26:54:319] [DEBUG] - org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:91) - GET "/leave/list?page=1&limit=10", parameters={masked}
[02:26:54:319] [DEBUG] - org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:412) - Mapped to com.wei.oa_spring.controller.LeaveFormController#getLeaveFormList(HttpSession)
[02:26:54:321] [DEBUG] - org.mybatis.spring.SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[02:26:54:321] [DEBUG] - org.mybatis.spring.SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7b17332b] was not registered for synchronization because synchronization is not active
[02:26:54:322] [DEBUG] - org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:115) - Fetching JDBC Connection from DataSource
[02:26:54:323] [DEBUG] - org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [HikariProxyConnection@957637134 wrapping com.mysql.cj.jdbc.ConnectionImpl@1e8fef41] will not be managed by Spring
[02:26:54:324] [DEBUG] - org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT f.*, e.`name`, d.* FROM adm_leave_form f, adm_process_flow pf, adm_employee e, adm_department d WHERE f.form_id = pf.form_id AND f.employee_id = e.employee_id AND e.department_id = d.department_id AND pf.state = ? AND pf.operator_id = ? 
[02:26:54:325] [DEBUG] - org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: process(String), 1(Long)
[02:26:54:326] [DEBUG] - org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 0
[02:26:54:327] [DEBUG] - org.mybatis.spring.SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7b17332b]
[02:26:54:329] [DEBUG] - org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor.writeWithMessageConverters(AbstractMessageConverterMethodProcessor.java:273) - Using 'application/json', given [application/json, text/javascript, */*;q=0.01] and supported [application/json, application/*+json, application/json, application/*+json]
[02:26:54:329] [DEBUG] - org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:91) - Writing [{msg=, code=0, data=[], count=0}]
[02:26:54:330] [DEBUG] - org.springframework.web.servlet.FrameworkServlet.logResult(FrameworkServlet.java:1131) - Completed 200 OK
[02:27:11:803] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417) - imooc_oa_datasource - Pool stats (total=10, active=0, idle=10, waiting=0)
[02:27:41:804] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417) - imooc_oa_datasource - Pool stats (total=10, active=0, idle=10, waiting=0)
[02:28:11:814] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417) - imooc_oa_datasource - Pool stats (total=10, active=0, idle=10, waiting=0)
[02:28:41:816] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417) - imooc_oa_datasource - Pool stats (total=10, active=0, idle=10, waiting=0)
[02:29:11:825] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417) - imooc_oa_datasource - Pool stats (total=10, active=0, idle=10, waiting=0)
[02:29:41:833] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417) - imooc_oa_datasource - Pool stats (total=10, active=0, idle=10, waiting=0)
[02:30:11:840] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417) - imooc_oa_datasource - Pool stats (total=10, active=0, idle=10, waiting=0)
[02:30:30:952] [DEBUG] - org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:91) - GET "/forward/form", parameters={}
[02:30:30:955] [DEBUG] - org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:412) - Mapped to com.wei.oa_spring.controller.ForwardController#doGet(String, HttpServletRequest, HttpServletResponse)
[02:30:30:966] [DEBUG] - org.springframework.web.servlet.view.ContentNegotiatingViewResolver.getBestView(ContentNegotiatingViewResolver.java:348) - Selected 'text/html' given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, application/signed-exchange;v=b3;q=0.7, */*;q=0.8]
[02:30:30:966] [DEBUG] - org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:310) - View name '/form', model {}
[02:30:30:966] [DEBUG] - org.springframework.web.servlet.view.AbstractTemplateView.renderMergedOutputModel(AbstractTemplateView.java:176) - Rendering [/form.ftl]
[02:30:30:967] [DEBUG] - org.springframework.web.servlet.FrameworkServlet.logResult(FrameworkServlet.java:1131) - Completed 200 OK
[02:30:31:441] [DEBUG] - org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:91) - GET "/forward/notice", parameters={}
[02:30:31:441] [DEBUG] - org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:412) - Mapped to com.wei.oa_spring.controller.ForwardController#doGet(String, HttpServletRequest, HttpServletResponse)
[02:30:31:448] [DEBUG] - org.springframework.web.servlet.view.ContentNegotiatingViewResolver.getBestView(ContentNegotiatingViewResolver.java:348) - Selected 'text/html' given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, application/signed-exchange;v=b3;q=0.7, */*;q=0.8]
[02:30:31:448] [DEBUG] - org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:310) - View name '/notice', model {}
[02:30:31:448] [DEBUG] - org.springframework.web.servlet.view.AbstractTemplateView.renderMergedOutputModel(AbstractTemplateView.java:176) - Rendering [/notice.ftl]
[02:30:31:449] [DEBUG] - org.springframework.web.servlet.FrameworkServlet.logResult(FrameworkServlet.java:1131) - Completed 200 OK
[02:30:31:571] [DEBUG] - org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:91) - GET "/notice/list?page=1&limit=10", parameters={masked}
[02:30:31:571] [DEBUG] - org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:412) - Mapped to com.wei.oa_spring.controller.NoticeController#getNoticeList(HttpSession, HttpServletRequest, HttpServletResponse)
[02:30:31:573] [DEBUG] - org.mybatis.spring.SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[02:30:31:573] [DEBUG] - org.mybatis.spring.SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@69cc8965] was not registered for synchronization because synchronization is not active
[02:30:31:574] [DEBUG] - org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:115) - Fetching JDBC Connection from DataSource
[02:30:31:576] [DEBUG] - org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [HikariProxyConnection@1262100059 wrapping com.mysql.cj.jdbc.ConnectionImpl@1e8fef41] will not be managed by Spring
[02:30:31:577] [DEBUG] - org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: select notice_id , receiver_id, content, create_time from sys_notice where receiver_id = ? order by create_time desc limit 0,100 
[02:30:31:578] [DEBUG] - org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 1(Long)
[02:30:31:584] [DEBUG] - org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 17
[02:30:31:585] [DEBUG] - org.mybatis.spring.SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@69cc8965]
[02:30:31:588] [DEBUG] - org.springframework.web.servlet.FrameworkServlet.logResult(FrameworkServlet.java:1131) - Completed 200 OK
[02:30:31:953] [DEBUG] - org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:91) - GET "/forward/form", parameters={}
[02:30:31:954] [DEBUG] - org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:412) - Mapped to com.wei.oa_spring.controller.ForwardController#doGet(String, HttpServletRequest, HttpServletResponse)
[02:30:31:959] [DEBUG] - org.springframework.web.servlet.view.ContentNegotiatingViewResolver.getBestView(ContentNegotiatingViewResolver.java:348) - Selected 'text/html' given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, application/signed-exchange;v=b3;q=0.7, */*;q=0.8]
[02:30:31:959] [DEBUG] - org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:310) - View name '/form', model {}
[02:30:31:960] [DEBUG] - org.springframework.web.servlet.view.AbstractTemplateView.renderMergedOutputModel(AbstractTemplateView.java:176) - Rendering [/form.ftl]
[02:30:31:960] [DEBUG] - org.springframework.web.servlet.FrameworkServlet.logResult(FrameworkServlet.java:1131) - Completed 200 OK
[02:30:32:322] [DEBUG] - org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:91) - GET "/forward/audit", parameters={}
[02:30:32:323] [DEBUG] - org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:412) - Mapped to com.wei.oa_spring.controller.ForwardController#doGet(String, HttpServletRequest, HttpServletResponse)
[02:30:32:330] [DEBUG] - org.springframework.web.servlet.view.ContentNegotiatingViewResolver.getBestView(ContentNegotiatingViewResolver.java:348) - Selected 'text/html' given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, application/signed-exchange;v=b3;q=0.7, */*;q=0.8]
[02:30:32:330] [DEBUG] - org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:310) - View name '/audit', model {}
[02:30:32:330] [DEBUG] - org.springframework.web.servlet.view.AbstractTemplateView.renderMergedOutputModel(AbstractTemplateView.java:176) - Rendering [/audit.ftl]
[02:30:32:331] [DEBUG] - org.springframework.web.servlet.FrameworkServlet.logResult(FrameworkServlet.java:1131) - Completed 200 OK
[02:30:32:450] [DEBUG] - org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:91) - GET "/leave/list?page=1&limit=10", parameters={masked}
[02:30:32:451] [DEBUG] - org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:412) - Mapped to com.wei.oa_spring.controller.LeaveFormController#getLeaveFormList(HttpSession)
[02:30:32:453] [DEBUG] - org.mybatis.spring.SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[02:30:32:454] [DEBUG] - org.mybatis.spring.SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@717ce80] was not registered for synchronization because synchronization is not active
[02:30:32:455] [DEBUG] - org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:115) - Fetching JDBC Connection from DataSource
[02:30:32:456] [DEBUG] - org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [HikariProxyConnection@1828387433 wrapping com.mysql.cj.jdbc.ConnectionImpl@1e8fef41] will not be managed by Spring
[02:30:32:456] [DEBUG] - org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT f.*, e.`name`, d.* FROM adm_leave_form f, adm_process_flow pf, adm_employee e, adm_department d WHERE f.form_id = pf.form_id AND f.employee_id = e.employee_id AND e.department_id = d.department_id AND pf.state = ? AND pf.operator_id = ? 
[02:30:32:457] [DEBUG] - org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: process(String), 1(Long)
[02:30:32:459] [DEBUG] - org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 0
[02:30:32:460] [DEBUG] - org.mybatis.spring.SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@717ce80]
[02:30:32:463] [DEBUG] - org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor.writeWithMessageConverters(AbstractMessageConverterMethodProcessor.java:273) - Using 'application/json', given [application/json, text/javascript, */*;q=0.01] and supported [application/json, application/*+json, application/json, application/*+json]
[02:30:32:463] [DEBUG] - org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:91) - Writing [{msg=, code=0, data=[], count=0}]
[02:30:32:464] [DEBUG] - org.springframework.web.servlet.FrameworkServlet.logResult(FrameworkServlet.java:1131) - Completed 200 OK
[02:30:41:842] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417) - imooc_oa_datasource - Pool stats (total=10, active=0, idle=10, waiting=0)
[02:31:11:843] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417) - imooc_oa_datasource - Pool stats (total=10, active=0, idle=10, waiting=0)
[02:31:41:845] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417) - imooc_oa_datasource - Pool stats (total=10, active=0, idle=10, waiting=0)
[02:32:11:846] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417) - imooc_oa_datasource - Pool stats (total=10, active=0, idle=10, waiting=0)
[02:32:41:847] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417) - imooc_oa_datasource - Pool stats (total=10, active=0, idle=10, waiting=0)
[02:33:11:849] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417) - imooc_oa_datasource - Pool stats (total=10, active=0, idle=10, waiting=0)
[02:33:41:850] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417) - imooc_oa_datasource - Pool stats (total=10, active=0, idle=10, waiting=0)
[02:34:11:851] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417) - imooc_oa_datasource - Pool stats (total=10, active=0, idle=10, waiting=0)
[02:34:41:853] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417) - imooc_oa_datasource - Pool stats (total=10, active=0, idle=10, waiting=0)
[02:35:11:854] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417) - imooc_oa_datasource - Pool stats (total=10, active=0, idle=10, waiting=0)
[02:35:41:854] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417) - imooc_oa_datasource - Pool stats (total=10, active=0, idle=10, waiting=0)
[02:36:11:855] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417) - imooc_oa_datasource - Pool stats (total=10, active=0, idle=10, waiting=0)
[02:36:41:856] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417) - imooc_oa_datasource - Pool stats (total=10, active=0, idle=10, waiting=0)
[02:37:11:856] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417) - imooc_oa_datasource - Pool stats (total=10, active=0, idle=10, waiting=0)
[02:37:29:596] [DEBUG] - com.zaxxer.hikari.pool.PoolBase.quietlyCloseConnection(PoolBase.java:129) - imooc_oa_datasource - Closing connection com.mysql.cj.jdbc.ConnectionImpl@6a5a7cba: (connection has passed maxLifetime)
[02:37:29:607] [DEBUG] - com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator.call(HikariPool.java:730) - imooc_oa_datasource - Added connection com.mysql.cj.jdbc.ConnectionImpl@9b0ce2c
[02:37:31:854] [DEBUG] - com.zaxxer.hikari.pool.PoolBase.quietlyCloseConnection(PoolBase.java:129) - imooc_oa_datasource - Closing connection com.mysql.cj.jdbc.ConnectionImpl@1ad6447: (connection has passed maxLifetime)
[02:37:31:863] [DEBUG] - com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator.call(HikariPool.java:730) - imooc_oa_datasource - Added connection com.mysql.cj.jdbc.ConnectionImpl@7d345895
[02:37:41:857] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417) - imooc_oa_datasource - Pool stats (total=10, active=0, idle=10, waiting=0)
[02:37:43:636] [DEBUG] - com.zaxxer.hikari.pool.PoolBase.quietlyCloseConnection(PoolBase.java:129) - imooc_oa_datasource - Closing connection com.mysql.cj.jdbc.ConnectionImpl@4f698527: (connection has passed maxLifetime)
[02:37:43:646] [DEBUG] - com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator.call(HikariPool.java:730) - imooc_oa_datasource - Added connection com.mysql.cj.jdbc.ConnectionImpl@2c54f05c
[02:37:48:004] [DEBUG] - com.zaxxer.hikari.pool.PoolBase.quietlyCloseConnection(PoolBase.java:129) - imooc_oa_datasource - Closing connection com.mysql.cj.jdbc.ConnectionImpl@21b9a7ec: (connection has passed maxLifetime)
[02:37:48:010] [DEBUG] - com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator.call(HikariPool.java:730) - imooc_oa_datasource - Added connection com.mysql.cj.jdbc.ConnectionImpl@58753383
[02:37:55:504] [DEBUG] - com.zaxxer.hikari.pool.PoolBase.quietlyCloseConnection(PoolBase.java:129) - imooc_oa_datasource - Closing connection com.mysql.cj.jdbc.ConnectionImpl@7402d015: (connection has passed maxLifetime)
[02:37:55:512] [DEBUG] - com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator.call(HikariPool.java:730) - imooc_oa_datasource - Added connection com.mysql.cj.jdbc.ConnectionImpl@7aa618da
[02:37:57:745] [DEBUG] - com.zaxxer.hikari.pool.PoolBase.quietlyCloseConnection(PoolBase.java:129) - imooc_oa_datasource - Closing connection com.mysql.cj.jdbc.ConnectionImpl@1e8fef41: (connection has passed maxLifetime)
[02:37:57:753] [DEBUG] - com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator.call(HikariPool.java:730) - imooc_oa_datasource - Added connection com.mysql.cj.jdbc.ConnectionImpl@45fe2139
[02:38:00:625] [DEBUG] - com.zaxxer.hikari.pool.PoolBase.quietlyCloseConnection(PoolBase.java:129) - imooc_oa_datasource - Closing connection com.mysql.cj.jdbc.ConnectionImpl@25077e57: (connection has passed maxLifetime)
[02:38:00:633] [DEBUG] - com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator.call(HikariPool.java:730) - imooc_oa_datasource - Added connection com.mysql.cj.jdbc.ConnectionImpl@3a7889e1
[02:38:02:883] [DEBUG] - com.zaxxer.hikari.pool.PoolBase.quietlyCloseConnection(PoolBase.java:129) - imooc_oa_datasource - Closing connection com.mysql.cj.jdbc.ConnectionImpl@2c7d0385: (connection has passed maxLifetime)
[02:38:02:889] [DEBUG] - com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator.call(HikariPool.java:730) - imooc_oa_datasource - Added connection com.mysql.cj.jdbc.ConnectionImpl@5d8aadec
[02:38:03:894] [DEBUG] - com.zaxxer.hikari.pool.PoolBase.quietlyCloseConnection(PoolBase.java:129) - imooc_oa_datasource - Closing connection com.mysql.cj.jdbc.ConnectionImpl@518c55ba: (connection has passed maxLifetime)
[02:38:03:901] [DEBUG] - com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator.call(HikariPool.java:730) - imooc_oa_datasource - Added connection com.mysql.cj.jdbc.ConnectionImpl@6c4062f6
[02:38:10:108] [DEBUG] - com.zaxxer.hikari.pool.PoolBase.quietlyCloseConnection(PoolBase.java:129) - imooc_oa_datasource - Closing connection com.mysql.cj.jdbc.ConnectionImpl@5561a767: (connection has passed maxLifetime)
[02:38:10:112] [DEBUG] - com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator.call(HikariPool.java:730) - imooc_oa_datasource - Added connection com.mysql.cj.jdbc.ConnectionImpl@3d1b82db
[02:38:11:859] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417) - imooc_oa_datasource - Pool stats (total=10, active=0, idle=10, waiting=0)
[02:38:41:861] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417) - imooc_oa_datasource - Pool stats (total=10, active=0, idle=10, waiting=0)
[02:39:11:862] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417) - imooc_oa_datasource - Pool stats (total=10, active=0, idle=10, waiting=0)
[02:39:41:865] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417) - imooc_oa_datasource - Pool stats (total=10, active=0, idle=10, waiting=0)
[02:40:11:867] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417) - imooc_oa_datasource - Pool stats (total=10, active=0, idle=10, waiting=0)
[02:40:41:867] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417) - imooc_oa_datasource - Pool stats (total=10, active=0, idle=10, waiting=0)
[02:41:11:869] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417) - imooc_oa_datasource - Pool stats (total=10, active=0, idle=10, waiting=0)
[02:41:41:870] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417) - imooc_oa_datasource - Pool stats (total=10, active=0, idle=10, waiting=0)
[02:42:11:872] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417) - imooc_oa_datasource - Pool stats (total=10, active=0, idle=10, waiting=0)
[02:42:41:873] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417) - imooc_oa_datasource - Pool stats (total=10, active=0, idle=10, waiting=0)
[02:43:11:875] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417) - imooc_oa_datasource - Pool stats (total=10, active=0, idle=10, waiting=0)
[02:43:41:877] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417) - imooc_oa_datasource - Pool stats (total=10, active=0, idle=10, waiting=0)
[02:44:11:878] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417) - imooc_oa_datasource - Pool stats (total=10, active=0, idle=10, waiting=0)
[02:44:41:878] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417) - imooc_oa_datasource - Pool stats (total=10, active=0, idle=10, waiting=0)
[02:45:11:880] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417) - imooc_oa_datasource - Pool stats (total=10, active=0, idle=10, waiting=0)
[02:45:41:881] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417) - imooc_oa_datasource - Pool stats (total=10, active=0, idle=10, waiting=0)
[02:46:11:882] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417) - imooc_oa_datasource - Pool stats (total=10, active=0, idle=10, waiting=0)
[02:46:41:882] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417) - imooc_oa_datasource - Pool stats (total=10, active=0, idle=10, waiting=0)
[02:47:11:884] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417) - imooc_oa_datasource - Pool stats (total=10, active=0, idle=10, waiting=0)
[02:47:41:885] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417) - imooc_oa_datasource - Pool stats (total=10, active=0, idle=10, waiting=0)
[02:48:11:885] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417) - imooc_oa_datasource - Pool stats (total=10, active=0, idle=10, waiting=0)
[02:48:41:887] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417) - imooc_oa_datasource - Pool stats (total=10, active=0, idle=10, waiting=0)
[02:49:11:888] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417) - imooc_oa_datasource - Pool stats (total=10, active=0, idle=10, waiting=0)
[02:49:41:889] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417) - imooc_oa_datasource - Pool stats (total=10, active=0, idle=10, waiting=0)
[02:50:11:889] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417) - imooc_oa_datasource - Pool stats (total=10, active=0, idle=10, waiting=0)
[02:50:41:890] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417) - imooc_oa_datasource - Pool stats (total=10, active=0, idle=10, waiting=0)
[02:51:11:891] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417) - imooc_oa_datasource - Pool stats (total=10, active=0, idle=10, waiting=0)
[02:51:41:891] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417) - imooc_oa_datasource - Pool stats (total=10, active=0, idle=10, waiting=0)
[02:52:11:893] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417) - imooc_oa_datasource - Pool stats (total=10, active=0, idle=10, waiting=0)
[02:52:41:893] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417) - imooc_oa_datasource - Pool stats (total=10, active=0, idle=10, waiting=0)
[02:53:11:895] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417) - imooc_oa_datasource - Pool stats (total=10, active=0, idle=10, waiting=0)
[02:53:41:896] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417) - imooc_oa_datasource - Pool stats (total=10, active=0, idle=10, waiting=0)
[02:54:11:897] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417) - imooc_oa_datasource - Pool stats (total=10, active=0, idle=10, waiting=0)
[02:54:41:898] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417) - imooc_oa_datasource - Pool stats (total=10, active=0, idle=10, waiting=0)
[02:55:11:900] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417) - imooc_oa_datasource - Pool stats (total=10, active=0, idle=10, waiting=0)
[02:55:41:902] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417) - imooc_oa_datasource - Pool stats (total=10, active=0, idle=10, waiting=0)
[02:56:11:902] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417) - imooc_oa_datasource - Pool stats (total=10, active=0, idle=10, waiting=0)
[02:56:41:904] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417) - imooc_oa_datasource - Pool stats (total=10, active=0, idle=10, waiting=0)
[02:57:11:905] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417) - imooc_oa_datasource - Pool stats (total=10, active=0, idle=10, waiting=0)
[02:57:41:906] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417) - imooc_oa_datasource - Pool stats (total=10, active=0, idle=10, waiting=0)
[02:58:11:906] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417) - imooc_oa_datasource - Pool stats (total=10, active=0, idle=10, waiting=0)
[02:58:41:907] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417) - imooc_oa_datasource - Pool stats (total=10, active=0, idle=10, waiting=0)
[02:59:11:909] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417) - imooc_oa_datasource - Pool stats (total=10, active=0, idle=10, waiting=0)
[02:59:41:911] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417) - imooc_oa_datasource - Pool stats (total=10, active=0, idle=10, waiting=0)
[03:00:11:913] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417) - imooc_oa_datasource - Pool stats (total=10, active=0, idle=10, waiting=0)
[03:00:41:914] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417) - imooc_oa_datasource - Pool stats (total=10, active=0, idle=10, waiting=0)
[03:01:11:915] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417) - imooc_oa_datasource - Pool stats (total=10, active=0, idle=10, waiting=0)
[03:01:41:916] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417) - imooc_oa_datasource - Pool stats (total=10, active=0, idle=10, waiting=0)
[03:02:11:917] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417) - imooc_oa_datasource - Pool stats (total=10, active=0, idle=10, waiting=0)
[03:02:41:918] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417) - imooc_oa_datasource - Pool stats (total=10, active=0, idle=10, waiting=0)
[03:03:11:920] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417) - imooc_oa_datasource - Pool stats (total=10, active=0, idle=10, waiting=0)
[03:03:41:921] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417) - imooc_oa_datasource - Pool stats (total=10, active=0, idle=10, waiting=0)
[03:04:11:922] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417) - imooc_oa_datasource - Pool stats (total=10, active=0, idle=10, waiting=0)
[03:04:41:922] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417) - imooc_oa_datasource - Pool stats (total=10, active=0, idle=10, waiting=0)
[03:05:11:924] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417) - imooc_oa_datasource - Pool stats (total=10, active=0, idle=10, waiting=0)
[03:05:41:925] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417) - imooc_oa_datasource - Pool stats (total=10, active=0, idle=10, waiting=0)
[03:06:11:927] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417) - imooc_oa_datasource - Pool stats (total=10, active=0, idle=10, waiting=0)
[03:06:41:928] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417) - imooc_oa_datasource - Pool stats (total=10, active=0, idle=10, waiting=0)
[03:06:49:585] [DEBUG] - com.zaxxer.hikari.pool.PoolBase.quietlyCloseConnection(PoolBase.java:129) - imooc_oa_datasource - Closing connection com.mysql.cj.jdbc.ConnectionImpl@9b0ce2c: (connection has passed maxLifetime)
[03:06:49:674] [DEBUG] - com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator.call(HikariPool.java:730) - imooc_oa_datasource - Added connection com.mysql.cj.jdbc.ConnectionImpl@3bfcf84d
[03:07:11:929] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417) - imooc_oa_datasource - Pool stats (total=10, active=0, idle=10, waiting=0)
[03:07:11:997] [DEBUG] - com.zaxxer.hikari.pool.PoolBase.quietlyCloseConnection(PoolBase.java:129) - imooc_oa_datasource - Closing connection com.mysql.cj.jdbc.ConnectionImpl@7aa618da: (connection has passed maxLifetime)
[03:07:12:015] [DEBUG] - com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator.call(HikariPool.java:730) - imooc_oa_datasource - Added connection com.mysql.cj.jdbc.ConnectionImpl@4247963f
[03:07:13:139] [DEBUG] - com.zaxxer.hikari.pool.PoolBase.quietlyCloseConnection(PoolBase.java:129) - imooc_oa_datasource - Closing connection com.mysql.cj.jdbc.ConnectionImpl@2c54f05c: (connection has passed maxLifetime)
[03:07:13:144] [DEBUG] - com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator.call(HikariPool.java:730) - imooc_oa_datasource - Added connection com.mysql.cj.jdbc.ConnectionImpl@36083547
[03:07:14:207] [DEBUG] - com.zaxxer.hikari.pool.PoolBase.quietlyCloseConnection(PoolBase.java:129) - imooc_oa_datasource - Closing connection com.mysql.cj.jdbc.ConnectionImpl@58753383: (connection has passed maxLifetime)
[03:07:14:214] [DEBUG] - com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator.call(HikariPool.java:730) - imooc_oa_datasource - Added connection com.mysql.cj.jdbc.ConnectionImpl@69429dc8
[03:07:14:536] [DEBUG] - com.zaxxer.hikari.pool.PoolBase.quietlyCloseConnection(PoolBase.java:129) - imooc_oa_datasource - Closing connection com.mysql.cj.jdbc.ConnectionImpl@7d345895: (connection has passed maxLifetime)
[03:07:14:543] [DEBUG] - com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator.call(HikariPool.java:730) - imooc_oa_datasource - Added connection com.mysql.cj.jdbc.ConnectionImpl@6324749f
[03:07:18:278] [DEBUG] - com.zaxxer.hikari.pool.PoolBase.quietlyCloseConnection(PoolBase.java:129) - imooc_oa_datasource - Closing connection com.mysql.cj.jdbc.ConnectionImpl@3a7889e1: (connection has passed maxLifetime)
[03:07:18:285] [DEBUG] - com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator.call(HikariPool.java:730) - imooc_oa_datasource - Added connection com.mysql.cj.jdbc.ConnectionImpl@494190ef
[03:07:21:135] [DEBUG] - com.zaxxer.hikari.pool.PoolBase.quietlyCloseConnection(PoolBase.java:129) - imooc_oa_datasource - Closing connection com.mysql.cj.jdbc.ConnectionImpl@45fe2139: (connection has passed maxLifetime)
[03:07:21:142] [DEBUG] - com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator.call(HikariPool.java:730) - imooc_oa_datasource - Added connection com.mysql.cj.jdbc.ConnectionImpl@46b3a0d0
[03:07:22:600] [DEBUG] - com.zaxxer.hikari.pool.PoolBase.quietlyCloseConnection(PoolBase.java:129) - imooc_oa_datasource - Closing connection com.mysql.cj.jdbc.ConnectionImpl@5d8aadec: (connection has passed maxLifetime)
[03:07:22:607] [DEBUG] - com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator.call(HikariPool.java:730) - imooc_oa_datasource - Added connection com.mysql.cj.jdbc.ConnectionImpl@577d6569
[03:07:41:931] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417) - imooc_oa_datasource - Pool stats (total=10, active=0, idle=10, waiting=0)
[03:07:53:661] [DEBUG] - com.zaxxer.hikari.pool.PoolBase.quietlyCloseConnection(PoolBase.java:129) - imooc_oa_datasource - Closing connection com.mysql.cj.jdbc.ConnectionImpl@3d1b82db: (connection has passed maxLifetime)
[03:07:53:670] [DEBUG] - com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator.call(HikariPool.java:730) - imooc_oa_datasource - Added connection com.mysql.cj.jdbc.ConnectionImpl@2ef4106
[03:07:53:836] [DEBUG] - com.zaxxer.hikari.pool.PoolBase.quietlyCloseConnection(PoolBase.java:129) - imooc_oa_datasource - Closing connection com.mysql.cj.jdbc.ConnectionImpl@6c4062f6: (connection has passed maxLifetime)
[03:07:53:841] [DEBUG] - com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator.call(HikariPool.java:730) - imooc_oa_datasource - Added connection com.mysql.cj.jdbc.ConnectionImpl@76609a1c
[03:08:11:932] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417) - imooc_oa_datasource - Pool stats (total=10, active=0, idle=10, waiting=0)
[03:08:41:933] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417) - imooc_oa_datasource - Pool stats (total=10, active=0, idle=10, waiting=0)
[03:09:11:935] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417) - imooc_oa_datasource - Pool stats (total=10, active=0, idle=10, waiting=0)
[03:09:41:937] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417) - imooc_oa_datasource - Pool stats (total=10, active=0, idle=10, waiting=0)
[03:10:11:938] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417) - imooc_oa_datasource - Pool stats (total=10, active=0, idle=10, waiting=0)
[03:10:41:939] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417) - imooc_oa_datasource - Pool stats (total=10, active=0, idle=10, waiting=0)
[03:11:11:940] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417) - imooc_oa_datasource - Pool stats (total=10, active=0, idle=10, waiting=0)
[03:11:41:941] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417) - imooc_oa_datasource - Pool stats (total=10, active=0, idle=10, waiting=0)
[03:12:11:943] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417) - imooc_oa_datasource - Pool stats (total=10, active=0, idle=10, waiting=0)
[03:12:41:943] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417) - imooc_oa_datasource - Pool stats (total=10, active=0, idle=10, waiting=0)
[03:13:11:945] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417) - imooc_oa_datasource - Pool stats (total=10, active=0, idle=10, waiting=0)
[03:13:41:945] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417) - imooc_oa_datasource - Pool stats (total=10, active=0, idle=10, waiting=0)
[03:14:11:947] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417) - imooc_oa_datasource - Pool stats (total=10, active=0, idle=10, waiting=0)
[03:14:41:947] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417) - imooc_oa_datasource - Pool stats (total=10, active=0, idle=10, waiting=0)
[03:15:11:948] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417) - imooc_oa_datasource - Pool stats (total=10, active=0, idle=10, waiting=0)
[03:15:41:950] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417) - imooc_oa_datasource - Pool stats (total=10, active=0, idle=10, waiting=0)
[03:16:11:950] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417) - imooc_oa_datasource - Pool stats (total=10, active=0, idle=10, waiting=0)
[03:16:41:952] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417) - imooc_oa_datasource - Pool stats (total=10, active=0, idle=10, waiting=0)
[03:17:11:954] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417) - imooc_oa_datasource - Pool stats (total=10, active=0, idle=10, waiting=0)
[03:17:41:955] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417) - imooc_oa_datasource - Pool stats (total=10, active=0, idle=10, waiting=0)
[03:18:11:957] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417) - imooc_oa_datasource - Pool stats (total=10, active=0, idle=10, waiting=0)
[03:18:41:957] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417) - imooc_oa_datasource - Pool stats (total=10, active=0, idle=10, waiting=0)
[03:19:11:959] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417) - imooc_oa_datasource - Pool stats (total=10, active=0, idle=10, waiting=0)
[03:19:41:960] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417) - imooc_oa_datasource - Pool stats (total=10, active=0, idle=10, waiting=0)
[03:20:11:962] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417) - imooc_oa_datasource - Pool stats (total=10, active=0, idle=10, waiting=0)
[03:20:37:264] [DEBUG] - org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:91) - GET "/forward/form", parameters={}
[03:20:37:269] [DEBUG] - org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:412) - Mapped to com.wei.oa_spring.controller.ForwardController#doGet(String, HttpServletRequest, HttpServletResponse)
[03:20:37:311] [DEBUG] - org.springframework.web.servlet.view.ContentNegotiatingViewResolver.getBestView(ContentNegotiatingViewResolver.java:348) - Selected 'text/html' given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, application/signed-exchange;v=b3;q=0.7, */*;q=0.8]
[03:20:37:312] [DEBUG] - org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:310) - View name '/form', model {}
[03:20:37:312] [DEBUG] - org.springframework.web.servlet.view.AbstractTemplateView.renderMergedOutputModel(AbstractTemplateView.java:176) - Rendering [/form.ftl]
[03:20:37:362] [DEBUG] - org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1377) - Error rendering view [org.springframework.web.servlet.view.freemarker.FreeMarkerView: name '/form'; URL [/form.ftl]]
freemarker.core.InvalidReferenceException: The following has evaluated to null or missing:
==> current_department  [in template "form.ftl" at line 37, column 23]

----
Tip: If the failing expression is known to legally refer to something that's sometimes null or missing, either specify a default value like myOptionalVar!myDefault, or use <#if myOptionalVar??>when-present<#else>when-missing</#if>. (These only cover the last step of the expression; to cover the whole expression, use parenthesis: (myOptionalVar.foo)!myDefault, (myOptionalVar.foo)??
----

----
FTL stack trace ("~" means nesting-related):
	- Failed at: ${current_department.departmentName}  [in template "form.ftl" at line 37, column 21]
----
	at freemarker.core.InvalidReferenceException.getInstance(InvalidReferenceException.java:134) ~[freemarker-2.3.29.jar:2.3.29]
	at freemarker.core.UnexpectedTypeException.newDescriptionBuilder(UnexpectedTypeException.java:85) ~[freemarker-2.3.29.jar:2.3.29]
	at freemarker.core.UnexpectedTypeException.<init>(UnexpectedTypeException.java:48) ~[freemarker-2.3.29.jar:2.3.29]
	at freemarker.core.NonHashException.<init>(NonHashException.java:49) ~[freemarker-2.3.29.jar:2.3.29]
	at freemarker.core.Dot._eval(Dot.java:48) ~[freemarker-2.3.29.jar:2.3.29]
	at freemarker.core.Expression.eval(Expression.java:101) ~[freemarker-2.3.29.jar:2.3.29]
	at freemarker.core.DollarVariable.calculateInterpolatedStringOrMarkup(DollarVariable.java:100) ~[freemarker-2.3.29.jar:2.3.29]
	at freemarker.core.DollarVariable.accept(DollarVariable.java:63) ~[freemarker-2.3.29.jar:2.3.29]
	at freemarker.core.Environment.visit(Environment.java:331) ~[freemarker-2.3.29.jar:2.3.29]
	at freemarker.core.Environment.visit(Environment.java:337) ~[freemarker-2.3.29.jar:2.3.29]
	at freemarker.core.Environment.process(Environment.java:310) ~[freemarker-2.3.29.jar:2.3.29]
	at freemarker.template.Template.process(Template.java:383) ~[freemarker-2.3.29.jar:2.3.29]
	at org.springframework.web.servlet.view.freemarker.FreeMarkerView.processTemplate(FreeMarkerView.java:391) ~[spring-webmvc-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.servlet.view.freemarker.FreeMarkerView.doRender(FreeMarkerView.java:304) ~[spring-webmvc-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.servlet.view.freemarker.FreeMarkerView.renderMergedTemplateModel(FreeMarkerView.java:255) ~[spring-webmvc-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.servlet.view.AbstractTemplateView.renderMergedOutputModel(AbstractTemplateView.java:179) ~[spring-webmvc-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:317) ~[spring-webmvc-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1373) [spring-webmvc-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1118) [spring-webmvc-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057) [spring-webmvc-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943) [spring-webmvc-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) [spring-webmvc-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898) [spring-webmvc-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) [spring-webmvc-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53) [tomcat-embed-websocket-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) [spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) [spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) [spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) [spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) [spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) [spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1579) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
[03:20:37:365] [DEBUG] - org.springframework.web.servlet.FrameworkServlet.logResult(FrameworkServlet.java:1101) - Failed to complete request: freemarker.core.InvalidReferenceException: The following has evaluated to null or missing:
==> current_department  [in template "form.ftl" at line 37, column 23]

----
Tip: If the failing expression is known to legally refer to something that's sometimes null or missing, either specify a default value like myOptionalVar!myDefault, or use <#if myOptionalVar??>when-present<#else>when-missing</#if>. (These only cover the last step of the expression; to cover the whole expression, use parenthesis: (myOptionalVar.foo)!myDefault, (myOptionalVar.foo)??
----

----
FTL stack trace ("~" means nesting-related):
	- Failed at: ${current_department.departmentName}  [in template "form.ftl" at line 37, column 21]
----
[03:20:37:388] [DEBUG] - org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:91) - "INCLUDE" dispatch for GET "/error", parameters={}
[03:20:37:393] [DEBUG] - org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:412) - Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#errorHtml(HttpServletRequest, HttpServletResponse)
[03:20:37:438] [DEBUG] - org.springframework.web.servlet.view.ContentNegotiatingViewResolver.getBestView(ContentNegotiatingViewResolver.java:348) - Selected 'text/html' given [text/html, text/html;q=0.8]
[03:20:37:439] [DEBUG] - org.springframework.web.servlet.FrameworkServlet.logResult(FrameworkServlet.java:1127) - Exiting from "INCLUDE" dispatch, status 200
[03:20:41:963] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417) - imooc_oa_datasource - Pool stats (total=10, active=0, idle=10, waiting=0)
[03:20:43:428] [DEBUG] - org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:91) - GET "/index", parameters={}
[03:20:43:428] [DEBUG] - org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:412) - Mapped to com.wei.oa_spring.controller.IndexController#index(HttpServletRequest)
[03:20:43:439] [DEBUG] - org.springframework.web.servlet.view.ContentNegotiatingViewResolver.getBestView(ContentNegotiatingViewResolver.java:348) - Selected 'text/html' given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, application/signed-exchange;v=b3;q=0.7, */*;q=0.8]
[03:20:43:439] [DEBUG] - org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:310) - View name 'login', model {}
[03:20:43:439] [DEBUG] - org.springframework.web.servlet.view.AbstractTemplateView.renderMergedOutputModel(AbstractTemplateView.java:176) - Rendering [login.ftl]
[03:20:43:440] [DEBUG] - org.springframework.web.servlet.FrameworkServlet.logResult(FrameworkServlet.java:1131) - Completed 200 OK
[03:20:45:063] [DEBUG] - org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:91) - POST "/check_login", parameters={masked}
[03:20:45:063] [DEBUG] - org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:412) - Mapped to com.wei.oa_spring.controller.UserController#login(String, String, HttpSession)
[03:20:45:068] [DEBUG] - org.mybatis.spring.SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[03:20:45:070] [DEBUG] - org.mybatis.spring.SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7904442f] was not registered for synchronization because synchronization is not active
[03:20:45:072] [DEBUG] - org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:115) - Fetching JDBC Connection from DataSource
[03:20:45:074] [DEBUG] - org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [HikariProxyConnection@1867203240 wrapping com.mysql.cj.jdbc.ConnectionImpl@3bfcf84d] will not be managed by Spring
[03:20:45:075] [DEBUG] - org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: select user_id , username, `password`, employee_id, salt from sys_user where username = ? and password = ? 
[03:20:45:077] [DEBUG] - org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: m8(String), S6h8CwRiXkdyIFUP1rFF1g==(String)
[03:20:45:114] [DEBUG] - org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[03:20:45:115] [DEBUG] - org.mybatis.spring.SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7904442f]
[03:20:45:120] [DEBUG] - org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor.writeWithMessageConverters(AbstractMessageConverterMethodProcessor.java:273) - Using 'application/json', given [application/json, text/javascript, */*;q=0.01] and supported [application/json, application/*+json, application/json, application/*+json]
[03:20:45:121] [DEBUG] - org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:91) - Writing [ApiRestResponse{status=10000, msg='SUCCESS', data=com.wei.oa_spring.model.pojo.User@4a3de6f7}]
[03:20:45:122] [DEBUG] - org.springframework.web.servlet.FrameworkServlet.logResult(FrameworkServlet.java:1131) - Completed 200 OK
[03:20:45:139] [DEBUG] - org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:91) - GET "/index", parameters={}
[03:20:45:140] [DEBUG] - org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:412) - Mapped to com.wei.oa_spring.controller.IndexController#index(HttpServletRequest)
[03:20:45:142] [DEBUG] - org.mybatis.spring.SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[03:20:45:142] [DEBUG] - org.mybatis.spring.SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@106a0b3e] was not registered for synchronization because synchronization is not active
[03:20:45:143] [DEBUG] - org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:115) - Fetching JDBC Connection from DataSource
[03:20:45:143] [DEBUG] - org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [HikariProxyConnection@1126536418 wrapping com.mysql.cj.jdbc.ConnectionImpl@3bfcf84d] will not be managed by Spring
[03:20:45:143] [DEBUG] - org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: select employee_id , `name`, department_id, title, `level` from adm_employee where employee_id = ? 
[03:20:45:144] [DEBUG] - org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 1(Long)
[03:20:45:148] [DEBUG] - org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[03:20:45:149] [DEBUG] - org.mybatis.spring.SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@106a0b3e]
[03:20:45:149] [DEBUG] - org.mybatis.spring.SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[03:20:45:150] [DEBUG] - org.mybatis.spring.SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2f182470] was not registered for synchronization because synchronization is not active
[03:20:45:150] [DEBUG] - org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:115) - Fetching JDBC Connection from DataSource
[03:20:45:150] [DEBUG] - org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [HikariProxyConnection@1869343062 wrapping com.mysql.cj.jdbc.ConnectionImpl@3bfcf84d] will not be managed by Spring
[03:20:45:150] [DEBUG] - org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: select department_id, department_name from adm_department where department_id = ? 
[03:20:45:151] [DEBUG] - org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 1(Long)
[03:20:45:152] [DEBUG] - org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[03:20:45:153] [DEBUG] - org.mybatis.spring.SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2f182470]
[03:20:45:154] [DEBUG] - org.mybatis.spring.SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[03:20:45:154] [DEBUG] - org.mybatis.spring.SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7da79d57] was not registered for synchronization because synchronization is not active
[03:20:45:155] [DEBUG] - org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:115) - Fetching JDBC Connection from DataSource
[03:20:45:155] [DEBUG] - org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [HikariProxyConnection@326245687 wrapping com.mysql.cj.jdbc.ConnectionImpl@3bfcf84d] will not be managed by Spring
[03:20:45:155] [DEBUG] - org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT DISTINCT n.* from sys_role_user ru, sys_role_node rn, sys_node n where ru.role_id = rn.role_id and user_id = ? and rn.node_id = n.node_id ORDER BY n.node_code 
[03:20:45:156] [DEBUG] - org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 1(Long)
[03:20:45:168] [DEBUG] - org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 4
[03:20:45:169] [DEBUG] - org.mybatis.spring.SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7da79d57]
[03:20:45:175] [DEBUG] - org.springframework.web.servlet.view.ContentNegotiatingViewResolver.getBestView(ContentNegotiatingViewResolver.java:348) - Selected 'text/html' given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, application/signed-exchange;v=b3;q=0.7, */*;q=0.8]
[03:20:45:175] [DEBUG] - org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:310) - View name '/index', model {}
[03:20:45:175] [DEBUG] - org.springframework.web.servlet.view.AbstractTemplateView.renderMergedOutputModel(AbstractTemplateView.java:176) - Rendering [/index.ftl]
[03:20:45:178] [DEBUG] - org.springframework.web.servlet.FrameworkServlet.logResult(FrameworkServlet.java:1131) - Completed 200 OK
[03:20:45:259] [DEBUG] - org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:91) - GET "/forward/notice", parameters={}
[03:20:45:260] [DEBUG] - org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:412) - Mapped to com.wei.oa_spring.controller.ForwardController#doGet(String, HttpServletRequest, HttpServletResponse)
[03:20:45:269] [DEBUG] - org.springframework.web.servlet.view.ContentNegotiatingViewResolver.getBestView(ContentNegotiatingViewResolver.java:348) - Selected 'text/html' given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, application/signed-exchange;v=b3;q=0.7, */*;q=0.8]
[03:20:45:270] [DEBUG] - org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:310) - View name '/notice', model {}
[03:20:45:270] [DEBUG] - org.springframework.web.servlet.view.AbstractTemplateView.renderMergedOutputModel(AbstractTemplateView.java:176) - Rendering [/notice.ftl]
[03:20:45:271] [DEBUG] - org.springframework.web.servlet.FrameworkServlet.logResult(FrameworkServlet.java:1131) - Completed 200 OK
[03:20:45:431] [DEBUG] - org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:91) - GET "/notice/list?page=1&limit=10", parameters={masked}
[03:20:45:431] [DEBUG] - org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:412) - Mapped to com.wei.oa_spring.controller.NoticeController#getNoticeList(HttpSession, HttpServletRequest, HttpServletResponse)
[03:20:45:434] [DEBUG] - org.mybatis.spring.SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[03:20:45:434] [DEBUG] - org.mybatis.spring.SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6bfd088c] was not registered for synchronization because synchronization is not active
[03:20:45:434] [DEBUG] - org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:115) - Fetching JDBC Connection from DataSource
[03:20:45:435] [DEBUG] - org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [HikariProxyConnection@1890458478 wrapping com.mysql.cj.jdbc.ConnectionImpl@3bfcf84d] will not be managed by Spring
[03:20:45:435] [DEBUG] - org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: select notice_id , receiver_id, content, create_time from sys_notice where receiver_id = ? order by create_time desc limit 0,100 
[03:20:45:437] [DEBUG] - org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 1(Long)
[03:20:45:442] [DEBUG] - org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 17
[03:20:45:443] [DEBUG] - org.mybatis.spring.SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6bfd088c]
[03:20:45:445] [DEBUG] - org.springframework.web.servlet.FrameworkServlet.logResult(FrameworkServlet.java:1131) - Completed 200 OK
[03:20:46:534] [DEBUG] - org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:91) - GET "/forward/notice", parameters={}
[03:20:46:534] [DEBUG] - org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:412) - Mapped to com.wei.oa_spring.controller.ForwardController#doGet(String, HttpServletRequest, HttpServletResponse)
[03:20:46:540] [DEBUG] - org.springframework.web.servlet.view.ContentNegotiatingViewResolver.getBestView(ContentNegotiatingViewResolver.java:348) - Selected 'text/html' given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, application/signed-exchange;v=b3;q=0.7, */*;q=0.8]
[03:20:46:540] [DEBUG] - org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:310) - View name '/notice', model {}
[03:20:46:540] [DEBUG] - org.springframework.web.servlet.view.AbstractTemplateView.renderMergedOutputModel(AbstractTemplateView.java:176) - Rendering [/notice.ftl]
[03:20:46:541] [DEBUG] - org.springframework.web.servlet.FrameworkServlet.logResult(FrameworkServlet.java:1131) - Completed 200 OK
[03:20:46:650] [DEBUG] - org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:91) - GET "/notice/list?page=1&limit=10", parameters={masked}
[03:20:46:650] [DEBUG] - org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:412) - Mapped to com.wei.oa_spring.controller.NoticeController#getNoticeList(HttpSession, HttpServletRequest, HttpServletResponse)
[03:20:46:653] [DEBUG] - org.mybatis.spring.SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[03:20:46:654] [DEBUG] - org.mybatis.spring.SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@492832a] was not registered for synchronization because synchronization is not active
[03:20:46:655] [DEBUG] - org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:115) - Fetching JDBC Connection from DataSource
[03:20:46:656] [DEBUG] - org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [HikariProxyConnection@2116393797 wrapping com.mysql.cj.jdbc.ConnectionImpl@3bfcf84d] will not be managed by Spring
[03:20:46:657] [DEBUG] - org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: select notice_id , receiver_id, content, create_time from sys_notice where receiver_id = ? order by create_time desc limit 0,100 
[03:20:46:657] [DEBUG] - org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 1(Long)
[03:20:46:660] [DEBUG] - org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 17
[03:20:46:660] [DEBUG] - org.mybatis.spring.SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@492832a]
[03:20:46:662] [DEBUG] - org.springframework.web.servlet.FrameworkServlet.logResult(FrameworkServlet.java:1131) - Completed 200 OK
[03:20:47:159] [DEBUG] - org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:91) - GET "/forward/form", parameters={}
[03:20:47:160] [DEBUG] - org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:412) - Mapped to com.wei.oa_spring.controller.ForwardController#doGet(String, HttpServletRequest, HttpServletResponse)
[03:20:47:166] [DEBUG] - org.springframework.web.servlet.view.ContentNegotiatingViewResolver.getBestView(ContentNegotiatingViewResolver.java:348) - Selected 'text/html' given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, application/signed-exchange;v=b3;q=0.7, */*;q=0.8]
[03:20:47:166] [DEBUG] - org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:310) - View name '/form', model {}
[03:20:47:167] [DEBUG] - org.springframework.web.servlet.view.AbstractTemplateView.renderMergedOutputModel(AbstractTemplateView.java:176) - Rendering [/form.ftl]
[03:20:47:167] [DEBUG] - org.springframework.web.servlet.FrameworkServlet.logResult(FrameworkServlet.java:1131) - Completed 200 OK
[03:21:11:964] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417) - imooc_oa_datasource - Pool stats (total=10, active=0, idle=10, waiting=0)
[03:21:41:965] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417) - imooc_oa_datasource - Pool stats (total=10, active=0, idle=10, waiting=0)
[03:22:11:966] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417) - imooc_oa_datasource - Pool stats (total=10, active=0, idle=10, waiting=0)
[03:22:41:968] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417) - imooc_oa_datasource - Pool stats (total=10, active=0, idle=10, waiting=0)
[03:23:11:970] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417) - imooc_oa_datasource - Pool stats (total=10, active=0, idle=10, waiting=0)
[03:23:41:970] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417) - imooc_oa_datasource - Pool stats (total=10, active=0, idle=10, waiting=0)
[03:24:11:971] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417) - imooc_oa_datasource - Pool stats (total=10, active=0, idle=10, waiting=0)
[03:24:41:973] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417) - imooc_oa_datasource - Pool stats (total=10, active=0, idle=10, waiting=0)
[03:25:11:974] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417) - imooc_oa_datasource - Pool stats (total=10, active=0, idle=10, waiting=0)
[03:25:41:976] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417) - imooc_oa_datasource - Pool stats (total=10, active=0, idle=10, waiting=0)
[03:26:11:977] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417) - imooc_oa_datasource - Pool stats (total=10, active=0, idle=10, waiting=0)
[03:26:41:979] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417) - imooc_oa_datasource - Pool stats (total=10, active=0, idle=10, waiting=0)
[03:27:11:979] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417) - imooc_oa_datasource - Pool stats (total=10, active=0, idle=10, waiting=0)
[03:27:41:980] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417) - imooc_oa_datasource - Pool stats (total=10, active=0, idle=10, waiting=0)
[03:28:11:981] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417) - imooc_oa_datasource - Pool stats (total=10, active=0, idle=10, waiting=0)
[03:28:41:982] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417) - imooc_oa_datasource - Pool stats (total=10, active=0, idle=10, waiting=0)
[03:29:11:983] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417) - imooc_oa_datasource - Pool stats (total=10, active=0, idle=10, waiting=0)
[03:29:41:984] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417) - imooc_oa_datasource - Pool stats (total=10, active=0, idle=10, waiting=0)
[03:30:11:985] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417) - imooc_oa_datasource - Pool stats (total=10, active=0, idle=10, waiting=0)
[03:30:41:987] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417) - imooc_oa_datasource - Pool stats (total=10, active=0, idle=10, waiting=0)
[03:31:11:988] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417) - imooc_oa_datasource - Pool stats (total=10, active=0, idle=10, waiting=0)
[03:31:41:990] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417) - imooc_oa_datasource - Pool stats (total=10, active=0, idle=10, waiting=0)
[03:32:11:991] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417) - imooc_oa_datasource - Pool stats (total=10, active=0, idle=10, waiting=0)
[03:32:41:992] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417) - imooc_oa_datasource - Pool stats (total=10, active=0, idle=10, waiting=0)
[03:33:11:994] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417) - imooc_oa_datasource - Pool stats (total=10, active=0, idle=10, waiting=0)
[03:33:41:995] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417) - imooc_oa_datasource - Pool stats (total=10, active=0, idle=10, waiting=0)
[03:34:11:996] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417) - imooc_oa_datasource - Pool stats (total=10, active=0, idle=10, waiting=0)
[03:34:41:996] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417) - imooc_oa_datasource - Pool stats (total=10, active=0, idle=10, waiting=0)
[03:35:11:998] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417) - imooc_oa_datasource - Pool stats (total=10, active=0, idle=10, waiting=0)
[03:35:41:999] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417) - imooc_oa_datasource - Pool stats (total=10, active=0, idle=10, waiting=0)
[03:36:11:999] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417) - imooc_oa_datasource - Pool stats (total=10, active=0, idle=10, waiting=0)
[03:36:34:097] [DEBUG] - com.zaxxer.hikari.pool.PoolBase.quietlyCloseConnection(PoolBase.java:129) - imooc_oa_datasource - Closing connection com.mysql.cj.jdbc.ConnectionImpl@69429dc8: (connection has passed maxLifetime)
[03:36:34:117] [DEBUG] - com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator.call(HikariPool.java:730) - imooc_oa_datasource - Added connection com.mysql.cj.jdbc.ConnectionImpl@1fab519c
[03:36:38:731] [DEBUG] - org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1005) - Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@2cb3d0f7, started on Wed Mar 22 02:06:55 CST 2023
[03:36:38:732] [DEBUG] - org.springframework.core.env.PropertySourcesPropertyResolver.logKeyFound(PropertySourcesPropertyResolver.java:115) - Found key 'spring.liveBeansView.mbeanDomain' in PropertySource 'systemProperties' with value of type String
[03:36:38:767] [DEBUG] - org.springframework.data.redis.listener.RedisMessageListenerContainer.stop(RedisMessageListenerContainer.java:229) - Stopped RedisMessageListenerContainer
[03:36:38:770] [DEBUG] - org.springframework.jmx.export.MBeanExporter.destroy(MBeanExporter.java:452) - Unregistering JMX-exposed beans on shutdown
[03:36:38:774] [DEBUG] - org.springframework.jmx.support.MBeanRegistrationSupport.unregisterBeans(MBeanRegistrationSupport.java:186) - Unregistering JMX-exposed beans
[03:36:38:814] [DEBUG] - io.lettuce.core.AbstractRedisClient.shutdownAsync(AbstractRedisClient.java:436) - Initiate shutdown (100, 100, MILLISECONDS)
[03:36:38:858] [DEBUG] - io.lettuce.core.resource.DefaultClientResources.shutdown(DefaultClientResources.java:601) - Initiate shutdown (0, 2, SECONDS)
[03:36:38:862] [DEBUG] - io.lettuce.core.resource.DefaultEventLoopGroupProvider.shutdown(DefaultEventLoopGroupProvider.java:202) - Initiate shutdown (0, 2, SECONDS)
[03:36:38:883] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417) - imooc_oa_datasource - Before shutdown stats (total=10, active=0, idle=10, waiting=0)
[03:36:38:885] [DEBUG] - com.zaxxer.hikari.pool.PoolBase.quietlyCloseConnection(PoolBase.java:129) - imooc_oa_datasource - Closing connection com.mysql.cj.jdbc.ConnectionImpl@3bfcf84d: (connection evicted)
[03:36:38:886] [DEBUG] - com.zaxxer.hikari.pool.PoolBase.quietlyCloseConnection(PoolBase.java:129) - imooc_oa_datasource - Closing connection com.mysql.cj.jdbc.ConnectionImpl@4247963f: (connection evicted)
[03:36:38:888] [DEBUG] - com.zaxxer.hikari.pool.PoolBase.quietlyCloseConnection(PoolBase.java:129) - imooc_oa_datasource - Closing connection com.mysql.cj.jdbc.ConnectionImpl@36083547: (connection evicted)
[03:36:38:890] [DEBUG] - com.zaxxer.hikari.pool.PoolBase.quietlyCloseConnection(PoolBase.java:129) - imooc_oa_datasource - Closing connection com.mysql.cj.jdbc.ConnectionImpl@6324749f: (connection evicted)
[03:36:38:891] [DEBUG] - com.zaxxer.hikari.pool.PoolBase.quietlyCloseConnection(PoolBase.java:129) - imooc_oa_datasource - Closing connection com.mysql.cj.jdbc.ConnectionImpl@494190ef: (connection evicted)
[03:36:38:892] [DEBUG] - com.zaxxer.hikari.pool.PoolBase.quietlyCloseConnection(PoolBase.java:129) - imooc_oa_datasource - Closing connection com.mysql.cj.jdbc.ConnectionImpl@46b3a0d0: (connection evicted)
[03:36:38:893] [DEBUG] - com.zaxxer.hikari.pool.PoolBase.quietlyCloseConnection(PoolBase.java:129) - imooc_oa_datasource - Closing connection com.mysql.cj.jdbc.ConnectionImpl@577d6569: (connection evicted)
[03:36:38:894] [DEBUG] - com.zaxxer.hikari.pool.PoolBase.quietlyCloseConnection(PoolBase.java:129) - imooc_oa_datasource - Closing connection com.mysql.cj.jdbc.ConnectionImpl@2ef4106: (connection evicted)
[03:36:38:894] [DEBUG] - com.zaxxer.hikari.pool.PoolBase.quietlyCloseConnection(PoolBase.java:129) - imooc_oa_datasource - Closing connection com.mysql.cj.jdbc.ConnectionImpl@76609a1c: (connection evicted)
[03:36:38:895] [DEBUG] - com.zaxxer.hikari.pool.PoolBase.quietlyCloseConnection(PoolBase.java:129) - imooc_oa_datasource - Closing connection com.mysql.cj.jdbc.ConnectionImpl@1fab519c: (connection evicted)
[03:36:38:896] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417) - imooc_oa_datasource - After shutdown stats (total=0, active=0, idle=0, waiting=0)

<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="goods">
    <select id="selectAll" resultType="com.imooc.mybatis.entity.Goods">
        select *
        from t_goods
        order by goods_id desc limit 10
    </select>

    <!--单参数传递，使用parameterType指定参数的数据类型即可，SQL中#{value}提取参数-->
    <select id="selectById" parameterType="Integer" resultType="com.imooc.mybatis.entity.Goods">
        select *
        from t_goods
        where goods_id = #{values}
    </select>

    <!--多参数传递时，使用parameterType指定Map接口，SQL中#{key}提取参数-->
    <select id="selectByPriceRange" parameterType="java.util.Map" resultType="com.imooc.mybatis.entity.Goods">
        select *
        from t_goods
        where current_price between #{min} and #{max}
        order by current_price limit 0,#{limt}
    </select>

    <!--resultType使用Map会产生乱序，默认的HashMap是不稳定的随机值，
    而使用链表结构的LinkedHashMap能解决这个问题（按字段的前后定义顺序排列）-->
    <select id="selectGoodsMap" resultType="java.util.LinkedHashMap">
        select g.*,c.category_name,'1' as test from t_goods g, t_category c
        where g.category_id = c.category_id
    </select>

</mapper>

[01:34:43:501] [DEBUG] - org.springframework.boot.context.logging.ClasspathLoggingApplicationListener.onApplicationEvent(ClasspathLoggingApplicationListener.java:51) - Application started with classpath: [file:/C:/Program%20Files/Java/jdk1.8.0_202/jre/lib/charsets.jar, file:/C:/Program%20Files/Java/jdk1.8.0_202/jre/lib/deploy.jar, file:/C:/Program%20Files/Java/jdk1.8.0_202/jre/lib/ext/access-bridge-64.jar, file:/C:/Program%20Files/Java/jdk1.8.0_202/jre/lib/ext/cldrdata.jar, file:/C:/Program%20Files/Java/jdk1.8.0_202/jre/lib/ext/dnsns.jar, file:/C:/Program%20Files/Java/jdk1.8.0_202/jre/lib/ext/jaccess.jar, file:/C:/Program%20Files/Java/jdk1.8.0_202/jre/lib/ext/jfxrt.jar, file:/C:/Program%20Files/Java/jdk1.8.0_202/jre/lib/ext/localedata.jar, file:/C:/Program%20Files/Java/jdk1.8.0_202/jre/lib/ext/nashorn.jar, file:/C:/Program%20Files/Java/jdk1.8.0_202/jre/lib/ext/sunec.jar, file:/C:/Program%20Files/Java/jdk1.8.0_202/jre/lib/ext/sunjce_provider.jar, file:/C:/Program%20Files/Java/jdk1.8.0_202/jre/lib/ext/sunmscapi.jar, file:/C:/Program%20Files/Java/jdk1.8.0_202/jre/lib/ext/sunpkcs11.jar, file:/C:/Program%20Files/Java/jdk1.8.0_202/jre/lib/ext/zipfs.jar, file:/C:/Program%20Files/Java/jdk1.8.0_202/jre/lib/javaws.jar, file:/C:/Program%20Files/Java/jdk1.8.0_202/jre/lib/jce.jar, file:/C:/Program%20Files/Java/jdk1.8.0_202/jre/lib/jfr.jar, file:/C:/Program%20Files/Java/jdk1.8.0_202/jre/lib/jfxswt.jar, file:/C:/Program%20Files/Java/jdk1.8.0_202/jre/lib/jsse.jar, file:/C:/Program%20Files/Java/jdk1.8.0_202/jre/lib/management-agent.jar, file:/C:/Program%20Files/Java/jdk1.8.0_202/jre/lib/plugin.jar, file:/C:/Program%20Files/Java/jdk1.8.0_202/jre/lib/resources.jar, file:/C:/Program%20Files/Java/jdk1.8.0_202/jre/lib/rt.jar, file:/D:/project/Jave_learn/OA_spring/target/classes/, file:/D:/Software/maven-repo/org/springframework/boot/spring-boot-starter-web/2.2.1.RELEASE/spring-boot-starter-web-2.2.1.RELEASE.jar, file:/D:/Software/maven-repo/org/springframework/boot/spring-boot-starter/2.2.1.RELEASE/spring-boot-starter-2.2.1.RELEASE.jar, file:/D:/Software/maven-repo/org/springframework/boot/spring-boot/2.2.1.RELEASE/spring-boot-2.2.1.RELEASE.jar, file:/D:/Software/maven-repo/org/springframework/boot/spring-boot-autoconfigure/2.2.1.RELEASE/spring-boot-autoconfigure-2.2.1.RELEASE.jar, file:/D:/Software/maven-repo/jakarta/annotation/jakarta.annotation-api/1.3.5/jakarta.annotation-api-1.3.5.jar, file:/D:/Software/maven-repo/org/yaml/snakeyaml/1.25/snakeyaml-1.25.jar, file:/D:/Software/maven-repo/org/springframework/boot/spring-boot-starter-json/2.2.1.RELEASE/spring-boot-starter-json-2.2.1.RELEASE.jar, file:/D:/Software/maven-repo/com/fasterxml/jackson/core/jackson-databind/2.10.0/jackson-databind-2.10.0.jar, file:/D:/Software/maven-repo/com/fasterxml/jackson/core/jackson-core/2.10.0/jackson-core-2.10.0.jar, file:/D:/Software/maven-repo/com/fasterxml/jackson/datatype/jackson-datatype-jdk8/2.10.0/jackson-datatype-jdk8-2.10.0.jar, file:/D:/Software/maven-repo/com/fasterxml/jackson/datatype/jackson-datatype-jsr310/2.10.0/jackson-datatype-jsr310-2.10.0.jar, file:/D:/Software/maven-repo/com/fasterxml/jackson/module/jackson-module-parameter-names/2.10.0/jackson-module-parameter-names-2.10.0.jar, file:/D:/Software/maven-repo/org/springframework/boot/spring-boot-starter-tomcat/2.2.1.RELEASE/spring-boot-starter-tomcat-2.2.1.RELEASE.jar, file:/D:/Software/maven-repo/org/apache/tomcat/embed/tomcat-embed-core/9.0.27/tomcat-embed-core-9.0.27.jar, file:/D:/Software/maven-repo/org/apache/tomcat/embed/tomcat-embed-el/9.0.27/tomcat-embed-el-9.0.27.jar, file:/D:/Software/maven-repo/org/apache/tomcat/embed/tomcat-embed-websocket/9.0.27/tomcat-embed-websocket-9.0.27.jar, file:/D:/Software/maven-repo/org/springframework/boot/spring-boot-starter-validation/2.2.1.RELEASE/spring-boot-starter-validation-2.2.1.RELEASE.jar, file:/D:/Software/maven-repo/jakarta/validation/jakarta.validation-api/2.0.1/jakarta.validation-api-2.0.1.jar, file:/D:/Software/maven-repo/org/hibernate/validator/hibernate-validator/6.0.18.Final/hibernate-validator-6.0.18.Final.jar, file:/D:/Software/maven-repo/org/jboss/logging/jboss-logging/3.4.1.Final/jboss-logging-3.4.1.Final.jar, file:/D:/Software/maven-repo/org/springframework/spring-web/5.2.1.RELEASE/spring-web-5.2.1.RELEASE.jar, file:/D:/Software/maven-repo/org/springframework/spring-beans/5.2.1.RELEASE/spring-beans-5.2.1.RELEASE.jar, file:/D:/Software/maven-repo/org/springframework/spring-webmvc/5.2.1.RELEASE/spring-webmvc-5.2.1.RELEASE.jar, file:/D:/Software/maven-repo/org/springframework/spring-context/5.2.1.RELEASE/spring-context-5.2.1.RELEASE.jar, file:/D:/Software/maven-repo/org/springframework/spring-expression/5.2.1.RELEASE/spring-expression-5.2.1.RELEASE.jar, file:/D:/Software/maven-repo/net/bytebuddy/byte-buddy/1.10.2/byte-buddy-1.10.2.jar, file:/D:/Software/maven-repo/org/springframework/spring-core/5.2.1.RELEASE/spring-core-5.2.1.RELEASE.jar, file:/D:/Software/maven-repo/org/springframework/spring-jcl/5.2.1.RELEASE/spring-jcl-5.2.1.RELEASE.jar, file:/D:/Software/maven-repo/org/mybatis/spring/boot/mybatis-spring-boot-starter/1.3.2/mybatis-spring-boot-starter-1.3.2.jar, file:/D:/Software/maven-repo/org/springframework/boot/spring-boot-starter-jdbc/2.2.1.RELEASE/spring-boot-starter-jdbc-2.2.1.RELEASE.jar, file:/D:/Software/maven-repo/com/zaxxer/HikariCP/3.4.1/HikariCP-3.4.1.jar, file:/D:/Software/maven-repo/org/springframework/spring-jdbc/5.2.1.RELEASE/spring-jdbc-5.2.1.RELEASE.jar, file:/D:/Software/maven-repo/org/mybatis/spring/boot/mybatis-spring-boot-autoconfigure/1.3.2/mybatis-spring-boot-autoconfigure-1.3.2.jar, file:/D:/Software/maven-repo/org/mybatis/mybatis/3.4.6/mybatis-3.4.6.jar, file:/D:/Software/maven-repo/org/mybatis/mybatis-spring/1.3.2/mybatis-spring-1.3.2.jar, file:/D:/Software/maven-repo/mysql/mysql-connector-java/8.0.18/mysql-connector-java-8.0.18.jar, file:/D:/Software/maven-repo/org/springframework/boot/spring-boot-starter-log4j2/2.2.1.RELEASE/spring-boot-starter-log4j2-2.2.1.RELEASE.jar, file:/D:/Software/maven-repo/org/apache/logging/log4j/log4j-slf4j-impl/2.12.1/log4j-slf4j-impl-2.12.1.jar, file:/D:/Software/maven-repo/org/apache/logging/log4j/log4j-api/2.12.1/log4j-api-2.12.1.jar, file:/D:/Software/maven-repo/org/apache/logging/log4j/log4j-core/2.12.1/log4j-core-2.12.1.jar, file:/D:/Software/maven-repo/org/apache/logging/log4j/log4j-jul/2.12.1/log4j-jul-2.12.1.jar, file:/D:/Software/maven-repo/org/slf4j/jul-to-slf4j/1.7.29/jul-to-slf4j-1.7.29.jar, file:/D:/Software/maven-repo/org/springframework/boot/spring-boot-starter-aop/2.2.1.RELEASE/spring-boot-starter-aop-2.2.1.RELEASE.jar, file:/D:/Software/maven-repo/org/springframework/spring-aop/5.2.1.RELEASE/spring-aop-5.2.1.RELEASE.jar, file:/D:/Software/maven-repo/io/springfox/springfox-swagger2/2.9.2/springfox-swagger2-2.9.2.jar, file:/D:/Software/maven-repo/io/swagger/swagger-annotations/1.5.20/swagger-annotations-1.5.20.jar, file:/D:/Software/maven-repo/io/swagger/swagger-models/1.5.20/swagger-models-1.5.20.jar, file:/D:/Software/maven-repo/com/fasterxml/jackson/core/jackson-annotations/2.10.0/jackson-annotations-2.10.0.jar, file:/D:/Software/maven-repo/io/springfox/springfox-spi/2.9.2/springfox-spi-2.9.2.jar, file:/D:/Software/maven-repo/io/springfox/springfox-core/2.9.2/springfox-core-2.9.2.jar, file:/D:/Software/maven-repo/io/springfox/springfox-schema/2.9.2/springfox-schema-2.9.2.jar, file:/D:/Software/maven-repo/io/springfox/springfox-swagger-common/2.9.2/springfox-swagger-common-2.9.2.jar, file:/D:/Software/maven-repo/io/springfox/springfox-spring-web/2.9.2/springfox-spring-web-2.9.2.jar, file:/D:/Software/maven-repo/com/google/guava/guava/20.0/guava-20.0.jar, file:/D:/Software/maven-repo/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar, file:/D:/Software/maven-repo/org/slf4j/slf4j-api/1.7.29/slf4j-api-1.7.29.jar, file:/D:/Software/maven-repo/org/springframework/plugin/spring-plugin-core/1.2.0.RELEASE/spring-plugin-core-1.2.0.RELEASE.jar, file:/D:/Software/maven-repo/org/springframework/plugin/spring-plugin-metadata/1.2.0.RELEASE/spring-plugin-metadata-1.2.0.RELEASE.jar, file:/D:/Software/maven-repo/org/mapstruct/mapstruct/1.2.0.Final/mapstruct-1.2.0.Final.jar, file:/D:/Software/maven-repo/io/springfox/springfox-swagger-ui/2.9.2/springfox-swagger-ui-2.9.2.jar, file:/D:/Software/maven-repo/com/github/pagehelper/pagehelper-spring-boot-starter/1.2.13/pagehelper-spring-boot-starter-1.2.13.jar, file:/D:/Software/maven-repo/com/github/pagehelper/pagehelper-spring-boot-autoconfigure/1.2.13/pagehelper-spring-boot-autoconfigure-1.2.13.jar, file:/D:/Software/maven-repo/com/github/pagehelper/pagehelper/5.1.11/pagehelper-5.1.11.jar, file:/D:/Software/maven-repo/com/github/jsqlparser/jsqlparser/2.0/jsqlparser-2.0.jar, file:/D:/Software/maven-repo/org/springframework/boot/spring-boot-starter-data-redis/2.2.1.RELEASE/spring-boot-starter-data-redis-2.2.1.RELEASE.jar, file:/D:/Software/maven-repo/org/springframework/data/spring-data-redis/2.2.1.RELEASE/spring-data-redis-2.2.1.RELEASE.jar, file:/D:/Software/maven-repo/org/springframework/data/spring-data-keyvalue/2.2.1.RELEASE/spring-data-keyvalue-2.2.1.RELEASE.jar, file:/D:/Software/maven-repo/org/springframework/data/spring-data-commons/2.2.1.RELEASE/spring-data-commons-2.2.1.RELEASE.jar, file:/D:/Software/maven-repo/org/springframework/spring-tx/5.2.1.RELEASE/spring-tx-5.2.1.RELEASE.jar, file:/D:/Software/maven-repo/org/springframework/spring-oxm/5.2.1.RELEASE/spring-oxm-5.2.1.RELEASE.jar, file:/D:/Software/maven-repo/io/lettuce/lettuce-core/5.2.1.RELEASE/lettuce-core-5.2.1.RELEASE.jar, file:/D:/Software/maven-repo/io/netty/netty-common/4.1.43.Final/netty-common-4.1.43.Final.jar, file:/D:/Software/maven-repo/io/netty/netty-handler/4.1.43.Final/netty-handler-4.1.43.Final.jar, file:/D:/Software/maven-repo/io/netty/netty-buffer/4.1.43.Final/netty-buffer-4.1.43.Final.jar, file:/D:/Software/maven-repo/io/netty/netty-codec/4.1.43.Final/netty-codec-4.1.43.Final.jar, file:/D:/Software/maven-repo/io/netty/netty-transport/4.1.43.Final/netty-transport-4.1.43.Final.jar, file:/D:/Software/maven-repo/io/netty/netty-resolver/4.1.43.Final/netty-resolver-4.1.43.Final.jar, file:/D:/Software/maven-repo/io/projectreactor/reactor-core/3.3.0.RELEASE/reactor-core-3.3.0.RELEASE.jar, file:/D:/Software/maven-repo/org/reactivestreams/reactive-streams/1.0.3/reactive-streams-1.0.3.jar, file:/D:/Software/maven-repo/org/springframework/boot/spring-boot-starter-cache/2.2.1.RELEASE/spring-boot-starter-cache-2.2.1.RELEASE.jar, file:/D:/Software/maven-repo/org/springframework/spring-context-support/5.2.1.RELEASE/spring-context-support-5.2.1.RELEASE.jar, file:/D:/Software/maven-repo/org/aspectj/aspectjweaver/1.8.13/aspectjweaver-1.8.13.jar, file:/D:/Software/IntelliJ%20IDEA%202021.1/lib/idea_rt.jar, file:/C:/Users/w1216/AppData/Local/JetBrains/IntelliJIdea2021.1/captureAgent/debugger-agent.jar]
[01:34:43:621] [DEBUG] - org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator.buildExpressionFactory(ResourceBundleMessageInterpolator.java:89) - Loaded expression factory via original TCCL
[01:34:43:631] [DEBUG] - org.hibernate.validator.internal.engine.ValidatorFactoryImpl.logValidatorFactoryScopedConfiguration(ValidatorFactoryImpl.java:578) - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
[01:34:43:631] [DEBUG] - org.hibernate.validator.internal.engine.ValidatorFactoryImpl.logValidatorFactoryScopedConfiguration(ValidatorFactoryImpl.java:579) - HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
[01:34:43:631] [DEBUG] - org.hibernate.validator.internal.engine.ValidatorFactoryImpl.logValidatorFactoryScopedConfiguration(ValidatorFactoryImpl.java:580) - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
[01:34:43:631] [DEBUG] - org.hibernate.validator.internal.engine.ValidatorFactoryImpl.logValidatorFactoryScopedConfiguration(ValidatorFactoryImpl.java:581) - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
[01:34:43:631] [DEBUG] - org.hibernate.validator.internal.engine.ValidatorFactoryImpl.logValidatorFactoryScopedConfiguration(ValidatorFactoryImpl.java:582) - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
[01:34:43:711] [DEBUG] - org.springframework.boot.StartupInfoLogger.logStarting(StartupInfoLogger.java:56) - Running with Spring Boot v2.2.1.RELEASE, Spring v5.2.1.RELEASE
[01:34:43:721] [DEBUG] - org.springframework.boot.SpringApplication.load(SpringApplication.java:679) - Loading source class com.wei.oa_spring.OaSpringApplication
[01:34:43:872] [DEBUG] - org.springframework.boot.logging.DeferredLog.logTo(DeferredLog.java:222) - Loaded config file 'file:/D:/project/Jave_learn/OA_spring/target/classes/application.properties' (classpath:/application.properties)
[01:34:43:872] [DEBUG] - org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:595) - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@64df9a61
[01:34:43:912] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
[01:34:43:942] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.internalCachingMetadataReaderFactory'
[01:34:44:082] [DEBUG] - org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.scanCandidateComponents(ClassPathScanningCandidateComponentProvider.java:437) - Identified candidate component class: file [D:\project\Jave_learn\OA_spring\target\classes\com\wei\oa_spring\adminController\AdmDepartmentController.class]
[01:34:44:082] [DEBUG] - org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.scanCandidateComponents(ClassPathScanningCandidateComponentProvider.java:437) - Identified candidate component class: file [D:\project\Jave_learn\OA_spring\target\classes\com\wei\oa_spring\adminController\AdmEmployeeController.class]
[01:34:44:082] [DEBUG] - org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.scanCandidateComponents(ClassPathScanningCandidateComponentProvider.java:437) - Identified candidate component class: file [D:\project\Jave_learn\OA_spring\target\classes\com\wei\oa_spring\adminController\AdmLeaveFormController.class]
[01:34:44:092] [DEBUG] - org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.scanCandidateComponents(ClassPathScanningCandidateComponentProvider.java:437) - Identified candidate component class: file [D:\project\Jave_learn\OA_spring\target\classes\com\wei\oa_spring\config\CachingConfig.class]
[01:34:44:102] [DEBUG] - org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.scanCandidateComponents(ClassPathScanningCandidateComponentProvider.java:437) - Identified candidate component class: file [D:\project\Jave_learn\OA_spring\target\classes\com\wei\oa_spring\config\OAWebMvcConfig.class]
[01:34:44:102] [DEBUG] - org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.scanCandidateComponents(ClassPathScanningCandidateComponentProvider.java:437) - Identified candidate component class: file [D:\project\Jave_learn\OA_spring\target\classes\com\wei\oa_spring\config\SpringFoxConfig.class]
[01:34:44:102] [DEBUG] - org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.scanCandidateComponents(ClassPathScanningCandidateComponentProvider.java:437) - Identified candidate component class: file [D:\project\Jave_learn\OA_spring\target\classes\com\wei\oa_spring\config\UserFilterConfig.class]
[01:34:44:102] [DEBUG] - org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.scanCandidateComponents(ClassPathScanningCandidateComponentProvider.java:437) - Identified candidate component class: file [D:\project\Jave_learn\OA_spring\target\classes\com\wei\oa_spring\controller\EmployeeController.class]
[01:34:44:102] [DEBUG] - org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.scanCandidateComponents(ClassPathScanningCandidateComponentProvider.java:437) - Identified candidate component class: file [D:\project\Jave_learn\OA_spring\target\classes\com\wei\oa_spring\controller\LeaveFormController.class]
[01:34:44:102] [DEBUG] - org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.scanCandidateComponents(ClassPathScanningCandidateComponentProvider.java:437) - Identified candidate component class: file [D:\project\Jave_learn\OA_spring\target\classes\com\wei\oa_spring\controller\NodeController.class]
[01:34:44:102] [DEBUG] - org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.scanCandidateComponents(ClassPathScanningCandidateComponentProvider.java:437) - Identified candidate component class: file [D:\project\Jave_learn\OA_spring\target\classes\com\wei\oa_spring\controller\NoticeController.class]
[01:34:44:112] [DEBUG] - org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.scanCandidateComponents(ClassPathScanningCandidateComponentProvider.java:437) - Identified candidate component class: file [D:\project\Jave_learn\OA_spring\target\classes\com\wei\oa_spring\controller\UserController.class]
[01:34:44:112] [DEBUG] - org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.scanCandidateComponents(ClassPathScanningCandidateComponentProvider.java:437) - Identified candidate component class: file [D:\project\Jave_learn\OA_spring\target\classes\com\wei\oa_spring\exception\GlobalExceptionHandler.class]
[01:34:44:132] [DEBUG] - org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.scanCandidateComponents(ClassPathScanningCandidateComponentProvider.java:437) - Identified candidate component class: file [D:\project\Jave_learn\OA_spring\target\classes\com\wei\oa_spring\filter\WebLogAspect.class]
[01:34:44:152] [DEBUG] - org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.scanCandidateComponents(ClassPathScanningCandidateComponentProvider.java:437) - Identified candidate component class: file [D:\project\Jave_learn\OA_spring\target\classes\com\wei\oa_spring\service\Impl\DepartmentServiceImpl.class]
[01:34:44:152] [DEBUG] - org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.scanCandidateComponents(ClassPathScanningCandidateComponentProvider.java:437) - Identified candidate component class: file [D:\project\Jave_learn\OA_spring\target\classes\com\wei\oa_spring\service\Impl\EmployeeServiceImpl.class]
[01:34:44:152] [DEBUG] - org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.scanCandidateComponents(ClassPathScanningCandidateComponentProvider.java:437) - Identified candidate component class: file [D:\project\Jave_learn\OA_spring\target\classes\com\wei\oa_spring\service\Impl\LeaveFormServiceImpl.class]
[01:34:44:152] [DEBUG] - org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.scanCandidateComponents(ClassPathScanningCandidateComponentProvider.java:437) - Identified candidate component class: file [D:\project\Jave_learn\OA_spring\target\classes\com\wei\oa_spring\service\Impl\NodeServiceImpl.class]
[01:34:44:152] [DEBUG] - org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.scanCandidateComponents(ClassPathScanningCandidateComponentProvider.java:437) - Identified candidate component class: file [D:\project\Jave_learn\OA_spring\target\classes\com\wei\oa_spring\service\Impl\NoticeServiceImpl.class]
[01:34:44:162] [DEBUG] - org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.scanCandidateComponents(ClassPathScanningCandidateComponentProvider.java:437) - Identified candidate component class: file [D:\project\Jave_learn\OA_spring\target\classes\com\wei\oa_spring\service\Impl\UserServiceImpl.class]
[01:34:44:532] [DEBUG] - org.springframework.core.env.PropertySourcesPropertyResolver.logKeyFound(PropertySourcesPropertyResolver.java:115) - Found key 'spring.jmx.enabled' in PropertySource 'configurationProperties' with value of type String
[01:34:44:542] [DEBUG] - org.springframework.core.env.PropertySourcesPropertyResolver.logKeyFound(PropertySourcesPropertyResolver.java:115) - Found key 'spring.jmx.enabled' in PropertySource 'configurationProperties' with value of type String
[01:34:44:552] [DEBUG] - org.springframework.core.env.PropertySourcesPropertyResolver.logKeyFound(PropertySourcesPropertyResolver.java:115) - Found key 'spring.application.admin.enabled' in PropertySource 'configurationProperties' with value of type String
[01:34:44:792] [DEBUG] - org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.scanCandidateComponents(ClassPathScanningCandidateComponentProvider.java:437) - Identified candidate component class: file [D:\project\Jave_learn\OA_spring\target\classes\com\wei\oa_spring\model\dao\DepartmentMapper.class]
[01:34:44:802] [DEBUG] - org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.scanCandidateComponents(ClassPathScanningCandidateComponentProvider.java:437) - Identified candidate component class: file [D:\project\Jave_learn\OA_spring\target\classes\com\wei\oa_spring\model\dao\EmployeeMapper.class]
[01:34:44:802] [DEBUG] - org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.scanCandidateComponents(ClassPathScanningCandidateComponentProvider.java:437) - Identified candidate component class: file [D:\project\Jave_learn\OA_spring\target\classes\com\wei\oa_spring\model\dao\LeaveFormMapper.class]
[01:34:44:802] [DEBUG] - org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.scanCandidateComponents(ClassPathScanningCandidateComponentProvider.java:437) - Identified candidate component class: file [D:\project\Jave_learn\OA_spring\target\classes\com\wei\oa_spring\model\dao\NodeMapper.class]
[01:34:44:802] [DEBUG] - org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.scanCandidateComponents(ClassPathScanningCandidateComponentProvider.java:437) - Identified candidate component class: file [D:\project\Jave_learn\OA_spring\target\classes\com\wei\oa_spring\model\dao\NoticeMapper.class]
[01:34:44:802] [DEBUG] - org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.scanCandidateComponents(ClassPathScanningCandidateComponentProvider.java:437) - Identified candidate component class: file [D:\project\Jave_learn\OA_spring\target\classes\com\wei\oa_spring\model\dao\ProcessFlowMapper.class]
[01:34:44:802] [DEBUG] - org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.scanCandidateComponents(ClassPathScanningCandidateComponentProvider.java:437) - Identified candidate component class: file [D:\project\Jave_learn\OA_spring\target\classes\com\wei\oa_spring\model\dao\UserMapper.class]
[01:34:44:802] [DEBUG] - org.mybatis.spring.mapper.ClassPathMapperScanner.processBeanDefinitions(ClassPathMapperScanner.java:180) - Creating MapperFactoryBean with name 'departmentMapper' and 'com.wei.oa_spring.model.dao.DepartmentMapper' mapperInterface
[01:34:44:802] [DEBUG] - org.mybatis.spring.mapper.ClassPathMapperScanner.processBeanDefinitions(ClassPathMapperScanner.java:216) - Enabling autowire by type for MapperFactoryBean with name 'departmentMapper'.
[01:34:44:802] [DEBUG] - org.mybatis.spring.mapper.ClassPathMapperScanner.processBeanDefinitions(ClassPathMapperScanner.java:180) - Creating MapperFactoryBean with name 'employeeMapper' and 'com.wei.oa_spring.model.dao.EmployeeMapper' mapperInterface
[01:34:44:802] [DEBUG] - org.mybatis.spring.mapper.ClassPathMapperScanner.processBeanDefinitions(ClassPathMapperScanner.java:216) - Enabling autowire by type for MapperFactoryBean with name 'employeeMapper'.
[01:34:44:802] [DEBUG] - org.mybatis.spring.mapper.ClassPathMapperScanner.processBeanDefinitions(ClassPathMapperScanner.java:180) - Creating MapperFactoryBean with name 'leaveFormMapper' and 'com.wei.oa_spring.model.dao.LeaveFormMapper' mapperInterface
[01:34:44:802] [DEBUG] - org.mybatis.spring.mapper.ClassPathMapperScanner.processBeanDefinitions(ClassPathMapperScanner.java:216) - Enabling autowire by type for MapperFactoryBean with name 'leaveFormMapper'.
[01:34:44:802] [DEBUG] - org.mybatis.spring.mapper.ClassPathMapperScanner.processBeanDefinitions(ClassPathMapperScanner.java:180) - Creating MapperFactoryBean with name 'nodeMapper' and 'com.wei.oa_spring.model.dao.NodeMapper' mapperInterface
[01:34:44:802] [DEBUG] - org.mybatis.spring.mapper.ClassPathMapperScanner.processBeanDefinitions(ClassPathMapperScanner.java:216) - Enabling autowire by type for MapperFactoryBean with name 'nodeMapper'.
[01:34:44:802] [DEBUG] - org.mybatis.spring.mapper.ClassPathMapperScanner.processBeanDefinitions(ClassPathMapperScanner.java:180) - Creating MapperFactoryBean with name 'noticeMapper' and 'com.wei.oa_spring.model.dao.NoticeMapper' mapperInterface
[01:34:44:802] [DEBUG] - org.mybatis.spring.mapper.ClassPathMapperScanner.processBeanDefinitions(ClassPathMapperScanner.java:216) - Enabling autowire by type for MapperFactoryBean with name 'noticeMapper'.
[01:34:44:802] [DEBUG] - org.mybatis.spring.mapper.ClassPathMapperScanner.processBeanDefinitions(ClassPathMapperScanner.java:180) - Creating MapperFactoryBean with name 'processFlowMapper' and 'com.wei.oa_spring.model.dao.ProcessFlowMapper' mapperInterface
[01:34:44:802] [DEBUG] - org.mybatis.spring.mapper.ClassPathMapperScanner.processBeanDefinitions(ClassPathMapperScanner.java:216) - Enabling autowire by type for MapperFactoryBean with name 'processFlowMapper'.
[01:34:44:802] [DEBUG] - org.mybatis.spring.mapper.ClassPathMapperScanner.processBeanDefinitions(ClassPathMapperScanner.java:180) - Creating MapperFactoryBean with name 'userMapper' and 'com.wei.oa_spring.model.dao.UserMapper' mapperInterface
[01:34:44:802] [DEBUG] - org.mybatis.spring.mapper.ClassPathMapperScanner.processBeanDefinitions(ClassPathMapperScanner.java:216) - Enabling autowire by type for MapperFactoryBean with name 'userMapper'.
[01:34:45:062] [DEBUG] - org.springframework.core.env.PropertySourcesPropertyResolver.logKeyFound(PropertySourcesPropertyResolver.java:115) - Found key 'spring.jmx.enabled' in PropertySource 'configurationProperties' with value of type String
[01:34:45:082] [DEBUG] - org.springframework.core.env.PropertySourcesPropertyResolver.logKeyFound(PropertySourcesPropertyResolver.java:115) - Found key 'spring.jmx.enabled' in PropertySource 'configurationProperties' with value of type String
[01:34:45:092] [DEBUG] - org.springframework.core.env.PropertySourcesPropertyResolver.logKeyFound(PropertySourcesPropertyResolver.java:115) - Found key 'spring.application.admin.enabled' in PropertySource 'configurationProperties' with value of type String
[01:34:45:232] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.AutoConfigurationPackages'
[01:34:45:232] [DEBUG] - org.springframework.boot.autoconfigure.AutoConfigurationPackages$BasePackages.get(AutoConfigurationPackages.java:199) - @EnableAutoConfiguration was declared on a class in the package 'com.wei.oa_spring'. Automatic @Repository and @Entity scanning is enabled.
[01:34:45:232] [DEBUG] - org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:138) - Scanning for repositories in packages com.wei.oa_spring.
[01:34:45:542] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'propertySourcesPlaceholderConfigurer'
[01:34:45:552] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'org.springframework.boot.context.properties.ConfigurationPropertiesBeanDefinitionValidator'
[01:34:45:602] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerProcessor'
[01:34:45:602] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'preserveErrorControllerTargetClassPostProcessor'
[01:34:45:602] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerFactory'
[01:34:45:602] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionalEventListenerFactory'
[01:34:45:612] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
[01:34:45:612] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
[01:34:45:622] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor'
[01:34:45:622] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'org.springframework.boot.context.internalConfigurationPropertiesBinder'
[01:34:45:622] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'org.springframework.boot.context.internalConfigurationPropertiesBinderFactory'
[01:34:45:622] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
[01:34:45:672] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'methodValidationPostProcessor'
[01:34:45:702] [DEBUG] - org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795) - Autowiring by type from bean name 'methodValidationPostProcessor' via factory method to bean named 'environment'
[01:34:45:712] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'dataSourceInitializerPostProcessor'
[01:34:45:722] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'persistenceExceptionTranslationPostProcessor'
[01:34:45:722] [DEBUG] - org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795) - Autowiring by type from bean name 'persistenceExceptionTranslationPostProcessor' via factory method to bean named 'environment'
[01:34:45:722] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'webServerFactoryCustomizerBeanPostProcessor'
[01:34:45:722] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'errorPageRegistrarBeanPostProcessor'
[01:34:45:722] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'projectingArgumentResolverBeanPostProcessor'
[01:34:45:722] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'org.springframework.cache.config.internalCacheAdvisor'
[01:34:45:722] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'org.springframework.cache.annotation.ProxyCachingConfiguration'
[01:34:45:722] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[01:34:45:722] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration'
[01:34:45:752] [DEBUG] - org.springframework.aop.aspectj.annotation.ReflectiveAspectJAdvisorFactory.getAdvice(ReflectiveAspectJAdvisorFactory.java:243) - Found AspectJ method: public void com.wei.oa_spring.filter.WebLogAspect.doBefore(org.aspectj.lang.JoinPoint)
[01:34:45:752] [DEBUG] - org.springframework.aop.aspectj.annotation.ReflectiveAspectJAdvisorFactory.getAdvice(ReflectiveAspectJAdvisorFactory.java:243) - Found AspectJ method: public void com.wei.oa_spring.filter.WebLogAspect.doAfterReturning(java.lang.Object) throws com.fasterxml.jackson.core.JsonProcessingException
[01:34:45:922] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'transactionAttributeSource'
[01:34:45:932] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'transactionInterceptor'
[01:34:45:932] [DEBUG] - org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795) - Autowiring by type from bean name 'transactionInterceptor' via factory method to bean named 'transactionAttributeSource'
[01:34:45:952] [DEBUG] - org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795) - Autowiring by type from bean name 'org.springframework.transaction.config.internalTransactionAdvisor' via factory method to bean named 'transactionAttributeSource'
[01:34:45:962] [DEBUG] - org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795) - Autowiring by type from bean name 'org.springframework.transaction.config.internalTransactionAdvisor' via factory method to bean named 'transactionInterceptor'
[01:34:46:012] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'cacheOperationSource'
[01:34:46:022] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'cacheInterceptor'
[01:34:46:052] [DEBUG] - org.springframework.ui.context.support.UiApplicationContextUtils.initThemeSource(UiApplicationContextUtils.java:85) - Unable to locate ThemeSource with name 'themeSource': using default [org.springframework.ui.context.support.ResourceBundleThemeSource@157ec23b]
[01:34:46:052] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'tomcatServletWebServerFactory'
[01:34:46:062] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryConfiguration$EmbeddedTomcat'
[01:34:46:122] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'websocketServletWebServerCustomizer'
[01:34:46:122] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration$TomcatWebSocketConfiguration'
[01:34:46:132] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'servletWebServerFactoryCustomizer'
[01:34:46:132] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration'
[01:34:46:132] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
[01:34:46:172] [DEBUG] - org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795) - Autowiring by type from bean name 'servletWebServerFactoryCustomizer' via factory method to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
[01:34:46:172] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'tomcatServletWebServerFactoryCustomizer'
[01:34:46:172] [DEBUG] - org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795) - Autowiring by type from bean name 'tomcatServletWebServerFactoryCustomizer' via factory method to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
[01:34:46:172] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'tomcatWebServerFactoryCustomizer'
[01:34:46:172] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration$TomcatWebServerFactoryCustomizerConfiguration'
[01:34:46:172] [DEBUG] - org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795) - Autowiring by type from bean name 'tomcatWebServerFactoryCustomizer' via factory method to bean named 'environment'
[01:34:46:172] [DEBUG] - org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795) - Autowiring by type from bean name 'tomcatWebServerFactoryCustomizer' via factory method to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
[01:34:46:182] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'localeCharsetMappingsCustomizer'
[01:34:46:182] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration'
[01:34:46:182] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'spring.http-org.springframework.boot.autoconfigure.http.HttpProperties'
[01:34:46:182] [DEBUG] - org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795) - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration' via constructor to bean named 'spring.http-org.springframework.boot.autoconfigure.http.HttpProperties'
[01:34:46:222] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'errorPageCustomizer'
[01:34:46:232] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration'
[01:34:46:232] [DEBUG] - org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795) - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration' via constructor to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
[01:34:46:232] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'dispatcherServletRegistration'
[01:34:46:232] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletRegistrationConfiguration'
[01:34:46:232] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'dispatcherServlet'
[01:34:46:232] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletConfiguration'
[01:34:46:242] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
[01:34:46:252] [DEBUG] - org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795) - Autowiring by type from bean name 'dispatcherServlet' via factory method to bean named 'spring.http-org.springframework.boot.autoconfigure.http.HttpProperties'
[01:34:46:252] [DEBUG] - org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795) - Autowiring by type from bean name 'dispatcherServlet' via factory method to bean named 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
[01:34:46:282] [DEBUG] - org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795) - Autowiring by type from bean name 'dispatcherServletRegistration' via factory method to bean named 'dispatcherServlet'
[01:34:46:282] [DEBUG] - org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795) - Autowiring by type from bean name 'dispatcherServletRegistration' via factory method to bean named 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
[01:34:46:292] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'multipartConfigElement'
[01:34:46:292] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration'
[01:34:46:292] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'spring.servlet.multipart-org.springframework.boot.autoconfigure.web.servlet.MultipartProperties'
[01:34:46:302] [DEBUG] - org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795) - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration' via constructor to bean named 'spring.servlet.multipart-org.springframework.boot.autoconfigure.web.servlet.MultipartProperties'
[01:34:46:312] [DEBUG] - org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795) - Autowiring by type from bean name 'errorPageCustomizer' via factory method to bean named 'dispatcherServletRegistration'
[01:34:46:472] [DEBUG] - org.springframework.boot.web.servlet.server.DocumentRoot.getArchiveFileDocumentRoot(DocumentRoot.java:81) - Code archive: D:\Software\maven-repo\org\springframework\boot\spring-boot\2.2.1.RELEASE\spring-boot-2.2.1.RELEASE.jar
[01:34:46:472] [DEBUG] - org.springframework.boot.web.servlet.server.DocumentRoot.getExplodedWarFileDocumentRoot(DocumentRoot.java:125) - Code archive: D:\Software\maven-repo\org\springframework\boot\spring-boot\2.2.1.RELEASE\spring-boot-2.2.1.RELEASE.jar
[01:34:46:472] [DEBUG] - org.springframework.boot.web.servlet.server.DocumentRoot.logNoDocumentRoots(DocumentRoot.java:149) - None of the document roots [src/main/webapp, public, static] point to a directory and will be ignored.
[01:34:46:812] [DEBUG] - org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext(ServletWebServerApplicationContext.java:278) - Published root WebApplicationContext as ServletContext attribute with name [org.springframework.web.context.WebApplicationContext.ROOT]
[01:34:46:822] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'userFilterConf'
[01:34:46:822] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'userFilterConfig'
[01:34:46:832] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'userFilter'
[01:34:46:852] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'requestContextFilter'
[01:34:46:862] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'formContentFilter'
[01:34:46:862] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration'
[01:34:46:872] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'characterEncodingFilter'
[01:34:46:882] [DEBUG] - org.springframework.boot.web.servlet.ServletContextInitializerBeans.logMappings(ServletContextInitializerBeans.java:235) - Mapping filters: userFilterConfig urls=[/leaveForm/*, /notice/*, /user/*] order=2147483647, characterEncodingFilter urls=[/*] order=-2147483648, formContentFilter urls=[/*] order=-9900, requestContextFilter urls=[/*] order=-105
[01:34:46:882] [DEBUG] - org.springframework.boot.web.servlet.ServletContextInitializerBeans.logMappings(ServletContextInitializerBeans.java:235) - Mapping servlets: dispatcherServlet urls=[/]
[01:34:46:922] [DEBUG] - org.springframework.web.filter.GenericFilterBean.init(GenericFilterBean.java:242) - Filter 'requestContextFilter' configured for use
[01:34:46:922] [DEBUG] - org.springframework.web.filter.GenericFilterBean.init(GenericFilterBean.java:242) - Filter 'characterEncodingFilter' configured for use
[01:34:46:922] [DEBUG] - org.springframework.web.filter.GenericFilterBean.init(GenericFilterBean.java:242) - Filter 'formContentFilter' configured for use
[01:34:46:942] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'oaSpringApplication'
[01:34:46:952] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'admDepartmentController'
[01:34:46:952] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'departmentService'
[01:34:46:952] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'departmentMapper'
[01:34:46:972] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'sqlSessionFactory'
[01:34:46:972] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration'
[01:34:46:972] [DEBUG] - org.springframework.core.LocalVariableTableParameterNameDiscoverer.inspectClass(LocalVariableTableParameterNameDiscoverer.java:99) - Cannot find '.class' file for class [class org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$aa8b2115] - unable to determine constructor/method parameter names
[01:34:46:972] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties'
[01:34:46:982] [DEBUG] - org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795) - Autowiring by type from bean name 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' via constructor to bean named 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties'
[01:34:46:982] [DEBUG] - org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795) - Autowiring by type from bean name 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' via constructor to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@64df9a61'
[01:34:46:992] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'dataSource'
[01:34:46:992] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari'
[01:34:46:992] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties'
[01:34:47:002] [DEBUG] - org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795) - Autowiring by type from bean name 'dataSource' via factory method to bean named 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties'
[01:34:47:032] [DEBUG] - com.zaxxer.hikari.HikariConfig.attemptFromContextLoader(HikariConfig.java:900) - Driver class com.mysql.cj.jdbc.Driver found in Thread context class loader sun.misc.Launcher$AppClassLoader@18b4aac2
[01:34:47:052] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker'
[01:34:47:062] [DEBUG] - org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795) - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' via constructor to bean named 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties'
[01:34:47:062] [DEBUG] - org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795) - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' via constructor to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@64df9a61'
[01:34:47:062] [DEBUG] - org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795) - Autowiring by type from bean name 'sqlSessionFactory' via factory method to bean named 'dataSource'
[01:34:47:072] [DEBUG] - org.apache.ibatis.logging.LogFactory.setImplementation(LogFactory.java:135) - Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[01:34:47:342] [DEBUG] - org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:529) - Parsed mapper file: 'file [D:\project\Jave_learn\OA_spring\target\classes\mappers\DepartmentMapper.xml]'
[01:34:47:362] [DEBUG] - org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:529) - Parsed mapper file: 'file [D:\project\Jave_learn\OA_spring\target\classes\mappers\EmployeeMapper.xml]'
[01:34:47:392] [DEBUG] - org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:529) - Parsed mapper file: 'file [D:\project\Jave_learn\OA_spring\target\classes\mappers\LeaveFormMapper.xml]'
[01:34:47:412] [DEBUG] - org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:529) - Parsed mapper file: 'file [D:\project\Jave_learn\OA_spring\target\classes\mappers\NodeMapper.xml]'
[01:34:47:432] [DEBUG] - org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:529) - Parsed mapper file: 'file [D:\project\Jave_learn\OA_spring\target\classes\mappers\NoticeMapper.xml]'
[01:34:47:472] [DEBUG] - org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:529) - Parsed mapper file: 'file [D:\project\Jave_learn\OA_spring\target\classes\mappers\ProcessFlowMapper.xml]'
[01:34:47:482] [DEBUG] - org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:529) - Parsed mapper file: 'file [D:\project\Jave_learn\OA_spring\target\classes\mappers\RbacMapper.xml]'
[01:34:47:502] [DEBUG] - org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:529) - Parsed mapper file: 'file [D:\project\Jave_learn\OA_spring\target\classes\mappers\UserMapper.xml]'
[01:34:47:512] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'sqlSessionTemplate'
[01:34:47:512] [DEBUG] - org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795) - Autowiring by type from bean name 'sqlSessionTemplate' via factory method to bean named 'sqlSessionFactory'
[01:34:47:562] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'admEmployeeController'
[01:34:47:562] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'employeeMapper'
[01:34:47:562] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'employeeService'
[01:34:47:572] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'admLeaveFormController'
[01:34:47:572] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'leaveFormMapper'
[01:34:47:572] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'cachingConfig'
[01:34:47:572] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'OAWebMvcConfig'
[01:34:47:582] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'springFoxConfig'
[01:34:47:592] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'employeeController'
[01:34:47:592] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'leaveFormController'
[01:34:47:592] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'leaveFormService'
[01:34:47:592] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'processFlowMapper'
[01:34:47:612] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'nodeController'
[01:34:47:622] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'nodeService'
[01:34:47:622] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'nodeMapper'
[01:34:47:632] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'noticeController'
[01:34:47:632] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'noticeService'
[01:34:47:632] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'noticeMapper'
[01:34:47:642] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'userController'
[01:34:47:642] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'userService'
[01:34:47:642] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'userMapper'
[01:34:47:662] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'globalExceptionHandler'
[01:34:47:662] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'webLogAspect'
[01:34:47:662] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'redisCacheManager'
[01:34:47:662] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'redisConnectionFactory'
[01:34:47:662] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.data.redis.LettuceConnectionConfiguration'
[01:34:47:672] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'spring.redis-org.springframework.boot.autoconfigure.data.redis.RedisProperties'
[01:34:47:672] [DEBUG] - org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795) - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.data.redis.LettuceConnectionConfiguration' via constructor to bean named 'spring.redis-org.springframework.boot.autoconfigure.data.redis.RedisProperties'
[01:34:47:672] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'lettuceClientResources'
[01:34:47:682] [DEBUG] - io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(InternalLoggerFactory.java:43) - Using SLF4J as the default logging framework
[01:34:47:692] [DEBUG] - io.lettuce.core.resource.DefaultClientResources.<clinit>(DefaultClientResources.java:109) - -Dio.netty.eventLoopThreads: 8
[01:34:47:712] [DEBUG] - io.lettuce.core.resource.DefaultEventLoopGroupProvider.createEventLoopGroup(DefaultEventLoopGroupProvider.java:138) - Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
[01:34:47:752] [DEBUG] - io.netty.util.internal.InternalThreadLocalMap.<clinit>(InternalThreadLocalMap.java:54) - -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[01:34:47:752] [DEBUG] - io.netty.util.internal.InternalThreadLocalMap.<clinit>(InternalThreadLocalMap.java:57) - -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[01:34:47:762] [DEBUG] - io.netty.util.ResourceLeakDetector.<clinit>(ResourceLeakDetector.java:129) - -Dio.netty.leakDetection.level: simple
[01:34:47:762] [DEBUG] - io.netty.util.ResourceLeakDetector.<clinit>(ResourceLeakDetector.java:130) - -Dio.netty.leakDetection.targetRecords: 4
[01:34:47:772] [DEBUG] - io.netty.util.internal.PlatformDependent.isWindows0(PlatformDependent.java:987) - Platform: Windows
[01:34:47:772] [DEBUG] - io.netty.util.internal.PlatformDependent0.explicitNoUnsafeCause0(PlatformDependent0.java:396) - -Dio.netty.noUnsafe: false
[01:34:47:772] [DEBUG] - io.netty.util.internal.PlatformDependent0.javaVersion0(PlatformDependent0.java:852) - Java version: 8
[01:34:47:772] [DEBUG] - io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:121) - sun.misc.Unsafe.theUnsafe: available
[01:34:47:772] [DEBUG] - io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:145) - sun.misc.Unsafe.copyMemory: available
[01:34:47:772] [DEBUG] - io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:183) - java.nio.Buffer.address: available
[01:34:47:783] [DEBUG] - io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:244) - direct buffer constructor: available
[01:34:47:783] [DEBUG] - io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:314) - java.nio.Bits.unaligned: available, true
[01:34:47:783] [DEBUG] - io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:379) - jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[01:34:47:783] [DEBUG] - io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:386) - java.nio.DirectByteBuffer.<init>(long, int): available
[01:34:47:783] [DEBUG] - io.netty.util.internal.PlatformDependent.unsafeUnavailabilityCause0(PlatformDependent.java:1030) - sun.misc.Unsafe: available
[01:34:47:783] [DEBUG] - io.netty.util.internal.PlatformDependent.tmpdir0(PlatformDependent.java:1149) - -Dio.netty.tmpdir: C:\Users\w1216\AppData\Local\Temp (java.io.tmpdir)
[01:34:47:783] [DEBUG] - io.netty.util.internal.PlatformDependent.bitMode0(PlatformDependent.java:1228) - -Dio.netty.bitMode: 64 (sun.arch.data.model)
[01:34:47:783] [DEBUG] - io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:174) - -Dio.netty.maxDirectMemory: 1648361472 bytes
[01:34:47:783] [DEBUG] - io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:181) - -Dio.netty.uninitializedArrayAllocationThreshold: -1
[01:34:47:793] [DEBUG] - io.netty.util.internal.CleanerJava6.<clinit>(CleanerJava6.java:92) - java.nio.ByteBuffer.cleaner(): available
[01:34:47:793] [DEBUG] - io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:201) - -Dio.netty.noPreferDirect: false
[01:34:47:793] [DEBUG] - io.netty.util.ResourceLeakDetectorFactory$DefaultResourceLeakDetectorFactory.newResourceLeakDetector(ResourceLeakDetectorFactory.java:195) - Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@74ba6ff5
[01:34:47:793] [DEBUG] - io.netty.util.internal.PlatformDependent$Mpsc.<clinit>(PlatformDependent.java:891) - org.jctools-core.MpscChunkedArrayQueue: available
[01:34:47:813] [DEBUG] - reactor.util.Loggers$Slf4JLogger.debug(Loggers.java:249) - Using Slf4j logging framework
[01:34:47:863] [DEBUG] - io.lettuce.core.resource.DefaultClientResources.<init>(DefaultClientResources.java:190) - LatencyUtils/HdrUtils are not available, metrics are disabled
[01:34:47:863] [DEBUG] - org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795) - Autowiring by type from bean name 'redisConnectionFactory' via factory method to bean named 'lettuceClientResources'
[01:34:47:963] [DEBUG] - io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:142) - -Dio.netty.allocator.numHeapArenas: 16
[01:34:47:963] [DEBUG] - io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:143) - -Dio.netty.allocator.numDirectArenas: 16
[01:34:47:963] [DEBUG] - io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:145) - -Dio.netty.allocator.pageSize: 8192
[01:34:47:963] [DEBUG] - io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:150) - -Dio.netty.allocator.maxOrder: 11
[01:34:47:963] [DEBUG] - io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:154) - -Dio.netty.allocator.chunkSize: 16777216
[01:34:47:963] [DEBUG] - io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:155) - -Dio.netty.allocator.tinyCacheSize: 512
[01:34:47:963] [DEBUG] - io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:156) - -Dio.netty.allocator.smallCacheSize: 256
[01:34:47:963] [DEBUG] - io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:157) - -Dio.netty.allocator.normalCacheSize: 64
[01:34:47:963] [DEBUG] - io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:158) - -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[01:34:47:963] [DEBUG] - io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:159) - -Dio.netty.allocator.cacheTrimInterval: 8192
[01:34:47:963] [DEBUG] - io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:160) - -Dio.netty.allocator.cacheTrimIntervalMillis: 0
[01:34:47:963] [DEBUG] - io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:161) - -Dio.netty.allocator.useCacheForAllThreads: true
[01:34:47:963] [DEBUG] - io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:162) - -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[01:34:48:013] [DEBUG] - org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795) - Autowiring by type from bean name 'redisCacheManager' via factory method to bean named 'redisConnectionFactory'
[01:34:48:033] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'api'
[01:34:48:063] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration'
[01:34:48:063] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration'
[01:34:48:063] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'org.springframework.boot.context.properties.ConfigurationBeanFactoryMetadata'
[01:34:48:063] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration'
[01:34:48:063] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration'
[01:34:48:073] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'taskExecutorBuilder'
[01:34:48:073] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'spring.task.execution-org.springframework.boot.autoconfigure.task.TaskExecutionProperties'
[01:34:48:073] [DEBUG] - org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795) - Autowiring by type from bean name 'taskExecutorBuilder' via factory method to bean named 'spring.task.execution-org.springframework.boot.autoconfigure.task.TaskExecutionProperties'
[01:34:48:073] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration'
[01:34:48:083] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'defaultValidator'
[01:34:48:083] [DEBUG] - org.hibernate.validator.internal.engine.resolver.TraversableResolvers.getDefault(TraversableResolvers.java:60) - Cannot find javax.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
[01:34:48:083] [DEBUG] - org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator.buildExpressionFactory(ResourceBundleMessageInterpolator.java:89) - Loaded expression factory via original TCCL
[01:34:48:083] [DEBUG] - org.hibernate.validator.internal.engine.resolver.TraversableResolvers.getDefault(TraversableResolvers.java:60) - Cannot find javax.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
[01:34:48:083] [DEBUG] - org.hibernate.validator.internal.engine.ConfigurationImpl.messageInterpolator(ConfigurationImpl.java:148) - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
[01:34:48:093] [DEBUG] - org.hibernate.validator.internal.engine.ConfigurationImpl.constraintValidatorFactory(ConfigurationImpl.java:180) - Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
[01:34:48:093] [DEBUG] - org.hibernate.validator.internal.engine.ConfigurationImpl.parameterNameProvider(ConfigurationImpl.java:194) - Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
[01:34:48:093] [DEBUG] - org.hibernate.validator.internal.xml.config.ValidationXmlParser.getValidationXmlInputStream(ValidationXmlParser.java:120) - Trying to load META-INF/validation.xml for XML based Validator configuration.
[01:34:48:093] [DEBUG] - org.hibernate.validator.internal.xml.config.ResourceLoaderHelper.getResettableInputStreamForPath(ResourceLoaderHelper.java:53) - Trying to load META-INF/validation.xml via user class loader
[01:34:48:093] [DEBUG] - org.hibernate.validator.internal.xml.config.ResourceLoaderHelper.getResettableInputStreamForPath(ResourceLoaderHelper.java:60) - Trying to load META-INF/validation.xml via TCCL
[01:34:48:093] [DEBUG] - org.hibernate.validator.internal.xml.config.ResourceLoaderHelper.getResettableInputStreamForPath(ResourceLoaderHelper.java:66) - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
[01:34:48:093] [DEBUG] - org.hibernate.validator.internal.xml.config.ValidationXmlParser.getValidationXmlInputStream(ValidationXmlParser.java:127) - No META-INF/validation.xml found. Using annotation based configuration only.
[01:34:48:093] [DEBUG] - org.hibernate.validator.internal.engine.ValidatorFactoryImpl.logValidatorFactoryScopedConfiguration(ValidatorFactoryImpl.java:578) - HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
[01:34:48:093] [DEBUG] - org.hibernate.validator.internal.engine.ValidatorFactoryImpl.logValidatorFactoryScopedConfiguration(ValidatorFactoryImpl.java:579) - HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
[01:34:48:093] [DEBUG] - org.hibernate.validator.internal.engine.ValidatorFactoryImpl.logValidatorFactoryScopedConfiguration(ValidatorFactoryImpl.java:580) - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
[01:34:48:093] [DEBUG] - org.hibernate.validator.internal.engine.ValidatorFactoryImpl.logValidatorFactoryScopedConfiguration(ValidatorFactoryImpl.java:581) - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
[01:34:48:093] [DEBUG] - org.hibernate.validator.internal.engine.ValidatorFactoryImpl.logValidatorFactoryScopedConfiguration(ValidatorFactoryImpl.java:582) - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
[01:34:48:103] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$WhitelabelErrorViewConfiguration'
[01:34:48:113] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'error'
[01:34:48:113] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'beanNameViewResolver'
[01:34:48:113] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration'
[01:34:48:113] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'spring.resources-org.springframework.boot.autoconfigure.web.ResourceProperties'
[01:34:48:123] [DEBUG] - org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795) - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration' via constructor to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@64df9a61'
[01:34:48:123] [DEBUG] - org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795) - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration' via constructor to bean named 'spring.resources-org.springframework.boot.autoconfigure.web.ResourceProperties'
[01:34:48:123] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'conventionErrorViewResolver'
[01:34:48:133] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'errorAttributes'
[01:34:48:133] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'basicErrorController'
[01:34:48:133] [DEBUG] - org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795) - Autowiring by type from bean name 'basicErrorController' via factory method to bean named 'errorAttributes'
[01:34:48:143] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration'
[01:34:48:143] [DEBUG] - org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795) - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration' via constructor to bean named 'spring.resources-org.springframework.boot.autoconfigure.web.ResourceProperties'
[01:34:48:143] [DEBUG] - org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795) - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration' via constructor to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@525d79f0'
[01:34:48:153] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter'
[01:34:48:153] [DEBUG] - org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795) - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter' via constructor to bean named 'spring.resources-org.springframework.boot.autoconfigure.web.ResourceProperties'
[01:34:48:153] [DEBUG] - org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795) - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter' via constructor to bean named 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
[01:34:48:153] [DEBUG] - org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795) - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter' via constructor to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@525d79f0'
[01:34:48:163] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'org.springframework.data.web.config.SpringDataWebConfiguration'
[01:34:48:163] [DEBUG] - org.springframework.core.LocalVariableTableParameterNameDiscoverer.inspectClass(LocalVariableTableParameterNameDiscoverer.java:99) - Cannot find '.class' file for class [class org.springframework.data.web.config.SpringDataWebConfiguration$$EnhancerBySpringCGLIB$$d91afe38] - unable to determine constructor/method parameter names
[01:34:48:163] [DEBUG] - org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795) - Autowiring by type from bean name 'org.springframework.data.web.config.SpringDataWebConfiguration' via constructor to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@64df9a61'
[01:34:48:163] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'pageableCustomizer'
[01:34:48:163] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.data.web.SpringDataWebAutoConfiguration'
[01:34:48:163] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'spring.data.web-org.springframework.boot.autoconfigure.data.web.SpringDataWebProperties'
[01:34:48:173] [DEBUG] - org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795) - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.data.web.SpringDataWebAutoConfiguration' via constructor to bean named 'spring.data.web-org.springframework.boot.autoconfigure.data.web.SpringDataWebProperties'
[01:34:48:173] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'sortCustomizer'
[01:34:48:183] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'requestMappingHandlerAdapter'
[01:34:48:193] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'mvcContentNegotiationManager'
[01:34:48:203] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'mvcConversionService'
[01:34:48:223] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'mvcValidator'
[01:34:48:223] [DEBUG] - org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795) - Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcContentNegotiationManager'
[01:34:48:223] [DEBUG] - org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795) - Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcConversionService'
[01:34:48:223] [DEBUG] - org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795) - Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcValidator'
[01:34:48:233] [DEBUG] - org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795) - Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcContentNegotiationManager'
[01:34:48:233] [DEBUG] - org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795) - Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcConversionService'
[01:34:48:233] [DEBUG] - org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795) - Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcValidator'
[01:34:48:243] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'messageConverters'
[01:34:48:243] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration'
[01:34:48:253] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'stringHttpMessageConverter'
[01:34:48:253] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration'
[01:34:48:253] [DEBUG] - org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795) - Autowiring by type from bean name 'stringHttpMessageConverter' via factory method to bean named 'spring.http-org.springframework.boot.autoconfigure.http.HttpProperties'
[01:34:48:263] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'mappingJackson2HttpMessageConverter'
[01:34:48:263] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration'
[01:34:48:273] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'jacksonObjectMapper'
[01:34:48:273] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration'
[01:34:48:273] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration'
[01:34:48:273] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'standardJacksonObjectMapperBuilderCustomizer'
[01:34:48:273] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration'
[01:34:48:283] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties'
[01:34:48:283] [DEBUG] - org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795) - Autowiring by type from bean name 'standardJacksonObjectMapperBuilderCustomizer' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@64df9a61'
[01:34:48:283] [DEBUG] - org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795) - Autowiring by type from bean name 'standardJacksonObjectMapperBuilderCustomizer' via factory method to bean named 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties'
[01:34:48:293] [DEBUG] - org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795) - Autowiring by type from bean name 'jacksonObjectMapperBuilder' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@64df9a61'
[01:34:48:293] [DEBUG] - org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795) - Autowiring by type from bean name 'jacksonObjectMapperBuilder' via factory method to bean named 'standardJacksonObjectMapperBuilderCustomizer'
[01:34:48:293] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'parameterNamesModule'
[01:34:48:293] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration'
[01:34:48:303] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'jsonComponentModule'
[01:34:48:313] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration'
[01:34:48:323] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'jacksonGeoModule'
[01:34:48:323] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'org.springframework.data.web.config.SpringDataJacksonConfiguration'
[01:34:48:333] [DEBUG] - org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795) - Autowiring by type from bean name 'jacksonObjectMapper' via factory method to bean named 'jacksonObjectMapperBuilder'
[01:34:48:403] [DEBUG] - org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795) - Autowiring by type from bean name 'mappingJackson2HttpMessageConverter' via factory method to bean named 'jacksonObjectMapper'
[01:34:48:433] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'sortResolver'
[01:34:48:453] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'pageableResolver'
[01:34:48:473] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'applicationTaskExecutor'
[01:34:48:473] [DEBUG] - org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795) - Autowiring by type from bean name 'applicationTaskExecutor' via factory method to bean named 'taskExecutorBuilder'
[01:34:48:513] [DEBUG] - org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.initControllerAdviceCache(RequestMappingHandlerAdapter.java:615) - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
[01:34:48:563] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'requestMappingHandlerMapping'
[01:34:48:573] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'mvcResourceUrlProvider'
[01:34:48:573] [DEBUG] - org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795) - Autowiring by type from bean name 'requestMappingHandlerMapping' via factory method to bean named 'mvcContentNegotiationManager'
[01:34:48:573] [DEBUG] - org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795) - Autowiring by type from bean name 'requestMappingHandlerMapping' via factory method to bean named 'mvcConversionService'
[01:34:48:573] [DEBUG] - org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795) - Autowiring by type from bean name 'requestMappingHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
[01:34:48:573] [DEBUG] - org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795) - Autowiring by type from bean name 'requestMappingHandlerMapping' via factory method to bean named 'mvcContentNegotiationManager'
[01:34:48:573] [DEBUG] - org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795) - Autowiring by type from bean name 'requestMappingHandlerMapping' via factory method to bean named 'mvcConversionService'
[01:34:48:573] [DEBUG] - org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795) - Autowiring by type from bean name 'requestMappingHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
[01:34:48:643] [DEBUG] - org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.handlerMethodsInitialized(AbstractHandlerMethodMapping.java:351) - 21 mappings in 'requestMappingHandlerMapping'
[01:34:48:653] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'welcomePageHandlerMapping'
[01:34:48:653] [DEBUG] - org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795) - Autowiring by type from bean name 'welcomePageHandlerMapping' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@64df9a61'
[01:34:48:653] [DEBUG] - org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795) - Autowiring by type from bean name 'welcomePageHandlerMapping' via factory method to bean named 'mvcConversionService'
[01:34:48:653] [DEBUG] - org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795) - Autowiring by type from bean name 'welcomePageHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
[01:34:48:663] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'mvcPathMatcher'
[01:34:48:673] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'mvcUrlPathHelper'
[01:34:48:673] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'viewControllerHandlerMapping'
[01:34:48:673] [DEBUG] - org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795) - Autowiring by type from bean name 'viewControllerHandlerMapping' via factory method to bean named 'mvcPathMatcher'
[01:34:48:673] [DEBUG] - org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795) - Autowiring by type from bean name 'viewControllerHandlerMapping' via factory method to bean named 'mvcUrlPathHelper'
[01:34:48:683] [DEBUG] - org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795) - Autowiring by type from bean name 'viewControllerHandlerMapping' via factory method to bean named 'mvcConversionService'
[01:34:48:683] [DEBUG] - org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795) - Autowiring by type from bean name 'viewControllerHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
[01:34:48:683] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'beanNameHandlerMapping'
[01:34:48:683] [DEBUG] - org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795) - Autowiring by type from bean name 'beanNameHandlerMapping' via factory method to bean named 'mvcConversionService'
[01:34:48:683] [DEBUG] - org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795) - Autowiring by type from bean name 'beanNameHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
[01:34:48:703] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'routerFunctionMapping'
[01:34:48:703] [DEBUG] - org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795) - Autowiring by type from bean name 'routerFunctionMapping' via factory method to bean named 'mvcConversionService'
[01:34:48:703] [DEBUG] - org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795) - Autowiring by type from bean name 'routerFunctionMapping' via factory method to bean named 'mvcResourceUrlProvider'
[01:34:48:713] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'resourceHandlerMapping'
[01:34:48:713] [DEBUG] - org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795) - Autowiring by type from bean name 'resourceHandlerMapping' via factory method to bean named 'mvcUrlPathHelper'
[01:34:48:713] [DEBUG] - org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795) - Autowiring by type from bean name 'resourceHandlerMapping' via factory method to bean named 'mvcPathMatcher'
[01:34:48:713] [DEBUG] - org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795) - Autowiring by type from bean name 'resourceHandlerMapping' via factory method to bean named 'mvcContentNegotiationManager'
[01:34:48:713] [DEBUG] - org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795) - Autowiring by type from bean name 'resourceHandlerMapping' via factory method to bean named 'mvcConversionService'
[01:34:48:713] [DEBUG] - org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795) - Autowiring by type from bean name 'resourceHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
[01:34:48:733] [DEBUG] - org.springframework.web.servlet.handler.SimpleUrlHandlerMapping.registerHandlers(SimpleUrlHandlerMapping.java:173) - Patterns [/webjars/**, /**, /swagger-ui.html] in 'resourceHandlerMapping'
[01:34:48:733] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'defaultServletHandlerMapping'
[01:34:48:733] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'handlerFunctionAdapter'
[01:34:48:743] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'mvcUriComponentsContributor'
[01:34:48:743] [DEBUG] - org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795) - Autowiring by type from bean name 'mvcUriComponentsContributor' via factory method to bean named 'mvcConversionService'
[01:34:48:743] [DEBUG] - org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795) - Autowiring by type from bean name 'mvcUriComponentsContributor' via factory method to bean named 'requestMappingHandlerAdapter'
[01:34:48:743] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'httpRequestHandlerAdapter'
[01:34:48:743] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'simpleControllerHandlerAdapter'
[01:34:48:753] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'handlerExceptionResolver'
[01:34:48:753] [DEBUG] - org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795) - Autowiring by type from bean name 'handlerExceptionResolver' via factory method to bean named 'mvcContentNegotiationManager'
[01:34:48:753] [DEBUG] - org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.initExceptionHandlerAdviceCache(ExceptionHandlerExceptionResolver.java:297) - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
[01:34:48:763] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'mvcViewResolver'
[01:34:48:763] [DEBUG] - org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795) - Autowiring by type from bean name 'mvcViewResolver' via factory method to bean named 'mvcContentNegotiationManager'
[01:34:48:763] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'defaultViewResolver'
[01:34:48:773] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'viewResolver'
[01:34:48:773] [DEBUG] - org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795) - Autowiring by type from bean name 'viewResolver' via factory method to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@525d79f0'
[01:34:48:773] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceJmxConfiguration$Hikari'
[01:34:48:783] [DEBUG] - org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795) - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.jdbc.DataSourceJmxConfiguration$Hikari' via constructor to bean named 'dataSource'
[01:34:48:783] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceJmxConfiguration'
[01:34:48:783] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration$PooledDataSourceConfiguration'
[01:34:48:783] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration$HikariPoolDataSourceMetadataProviderConfiguration'
[01:34:48:783] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'hikariPoolDataSourceMetadataProvider'
[01:34:48:783] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration'
[01:34:48:783] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializationConfiguration'
[01:34:48:783] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration'
[01:34:48:783] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'com.github.pagehelper.autoconfigure.PageHelperAutoConfiguration'
[01:34:48:793] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'pagehelper-com.github.pagehelper.autoconfigure.PageHelperProperties'
[01:34:48:793] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'pageHelperProperties'
[01:34:48:863] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jmx.JmxAutoConfiguration'
[01:34:48:863] [DEBUG] - org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795) - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.jmx.JmxAutoConfiguration' via constructor to bean named 'environment'
[01:34:48:863] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'mbeanExporter'
[01:34:48:863] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'objectNamingStrategy'
[01:34:48:863] [DEBUG] - org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795) - Autowiring by type from bean name 'mbeanExporter' via factory method to bean named 'objectNamingStrategy'
[01:34:48:873] [DEBUG] - org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795) - Autowiring by type from bean name 'mbeanExporter' via factory method to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@525d79f0'
[01:34:48:873] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'mbeanServer'
[01:34:48:883] [DEBUG] - org.springframework.jmx.support.JmxUtils.locateMBeanServer(JmxUtils.java:127) - Found MBeanServer: com.sun.jmx.mbeanserver.JmxMBeanServer@59e84876
[01:34:48:903] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.admin.SpringApplicationAdminJmxAutoConfiguration'
[01:34:48:903] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'springApplicationAdminRegistrar'
[01:34:48:903] [DEBUG] - org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795) - Autowiring by type from bean name 'springApplicationAdminRegistrar' via factory method to bean named 'environment'
[01:34:48:913] [DEBUG] - org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar.afterPropertiesSet(SpringApplicationAdminMXBeanRegistrar.java:131) - Application Admin MBean registered with name 'org.springframework.boot:type=Admin,name=SpringApplication'
[01:34:48:913] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$AspectJAutoProxyingConfiguration$CglibAutoProxyConfiguration'
[01:34:48:913] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$AspectJAutoProxyingConfiguration'
[01:34:48:913] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.aop.AopAutoConfiguration'
[01:34:48:913] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration'
[01:34:48:923] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'redisTemplate'
[01:34:48:923] [DEBUG] - org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795) - Autowiring by type from bean name 'redisTemplate' via factory method to bean named 'redisConnectionFactory'
[01:34:49:053] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'stringRedisTemplate'
[01:34:49:053] [DEBUG] - org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795) - Autowiring by type from bean name 'stringRedisTemplate' via factory method to bean named 'redisConnectionFactory'
[01:34:49:073] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration'
[01:34:49:073] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.dao.PersistenceExceptionTranslationAutoConfiguration'
[01:34:49:073] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.data.redis.RedisReactiveAutoConfiguration'
[01:34:49:073] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'reactiveRedisTemplate'
[01:34:49:073] [DEBUG] - org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795) - Autowiring by type from bean name 'reactiveRedisTemplate' via factory method to bean named 'redisConnectionFactory'
[01:34:49:073] [DEBUG] - org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795) - Autowiring by type from bean name 'reactiveRedisTemplate' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@64df9a61'
[01:34:49:143] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'reactiveStringRedisTemplate'
[01:34:49:143] [DEBUG] - org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795) - Autowiring by type from bean name 'reactiveStringRedisTemplate' via factory method to bean named 'redisConnectionFactory'
[01:34:49:153] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.data.redis.RedisRepositoriesAutoConfiguration'
[01:34:49:153] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'keyValueMappingContext'
[01:34:49:183] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'redisCustomConversions'
[01:34:49:193] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'redisReferenceResolver'
[01:34:49:193] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'redisConverter'
[01:34:49:223] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'redisKeyValueAdapter'
[01:34:49:243] [DEBUG] - org.springframework.data.redis.listener.RedisMessageListenerContainer.lazyListen(RedisMessageListenerContainer.java:481) - Postpone listening for Redis messages until actual listeners are added
[01:34:49:243] [DEBUG] - org.springframework.data.redis.listener.RedisMessageListenerContainer.start(RedisMessageListenerContainer.java:217) - Started RedisMessageListenerContainer
[01:34:49:263] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'redisKeyValueTemplate'
[01:34:49:283] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration'
[01:34:49:283] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'org.springframework.data.web.config.ProjectingArgumentResolverRegistrar'
[01:34:49:283] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration'
[01:34:49:283] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'spring.info-org.springframework.boot.autoconfigure.info.ProjectInfoProperties'
[01:34:49:293] [DEBUG] - org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795) - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration' via constructor to bean named 'spring.info-org.springframework.boot.autoconfigure.info.ProjectInfoProperties'
[01:34:49:293] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.JdbcTemplateConfiguration'
[01:34:49:293] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'jdbcTemplate'
[01:34:49:293] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'spring.jdbc-org.springframework.boot.autoconfigure.jdbc.JdbcProperties'
[01:34:49:293] [DEBUG] - org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795) - Autowiring by type from bean name 'jdbcTemplate' via factory method to bean named 'dataSource'
[01:34:49:293] [DEBUG] - org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795) - Autowiring by type from bean name 'jdbcTemplate' via factory method to bean named 'spring.jdbc-org.springframework.boot.autoconfigure.jdbc.JdbcProperties'
[01:34:49:343] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.NamedParameterJdbcTemplateConfiguration'
[01:34:49:343] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'namedParameterJdbcTemplate'
[01:34:49:343] [DEBUG] - org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795) - Autowiring by type from bean name 'namedParameterJdbcTemplate' via factory method to bean named 'jdbcTemplate'
[01:34:49:363] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration'
[01:34:49:363] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.security.oauth2.resource.servlet.OAuth2ResourceServerAutoConfiguration'
[01:34:49:363] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'spring.security.oauth2.resourceserver-org.springframework.boot.autoconfigure.security.oauth2.resource.OAuth2ResourceServerProperties'
[01:34:49:363] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.task.TaskSchedulingAutoConfiguration'
[01:34:49:373] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'taskSchedulerBuilder'
[01:34:49:373] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'spring.task.scheduling-org.springframework.boot.autoconfigure.task.TaskSchedulingProperties'
[01:34:49:373] [DEBUG] - org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795) - Autowiring by type from bean name 'taskSchedulerBuilder' via factory method to bean named 'spring.task.scheduling-org.springframework.boot.autoconfigure.task.TaskSchedulingProperties'
[01:34:49:373] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$DataSourceTransactionManagerConfiguration'
[01:34:49:373] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'transactionManager'
[01:34:49:373] [DEBUG] - org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795) - Autowiring by type from bean name 'transactionManager' via factory method to bean named 'dataSource'
[01:34:49:373] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'platformTransactionManagerCustomizers'
[01:34:49:373] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration'
[01:34:49:383] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'spring.transaction-org.springframework.boot.autoconfigure.transaction.TransactionProperties'
[01:34:49:393] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration'
[01:34:49:393] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$EnableTransactionManagementConfiguration$CglibAutoProxyConfiguration'
[01:34:49:393] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$EnableTransactionManagementConfiguration'
[01:34:49:393] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$TransactionTemplateConfiguration'
[01:34:49:393] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'transactionTemplate'
[01:34:49:393] [DEBUG] - org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795) - Autowiring by type from bean name 'transactionTemplate' via factory method to bean named 'transactionManager'
[01:34:49:403] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.client.RestTemplateAutoConfiguration'
[01:34:49:403] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'restTemplateBuilder'
[01:34:49:413] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration'
[01:34:49:413] [DEBUG] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'multipartResolver'
[01:34:49:423] [DEBUG] - org.springframework.jmx.export.MBeanExporter.afterSingletonsInstantiated(MBeanExporter.java:434) - Registering beans for JMX exposure on startup
[01:34:49:423] [DEBUG] - org.springframework.jmx.export.MBeanExporter.registerBeans(MBeanExporter.java:541) - Autodetecting user-defined JMX MBeans
[01:34:49:423] [DEBUG] - org.springframework.jmx.export.MBeanExporter.autodetect(MBeanExporter.java:896) - Bean with name 'dataSource' has been autodetected for JMX exposure
[01:34:49:433] [DEBUG] - org.springframework.jmx.export.MBeanExporter.registerBeanInstance(MBeanExporter.java:669) - Located MBean 'dataSource': registering with JMX server as MBean [com.zaxxer.hikari:name=dataSource,type=HikariDataSource]
[01:34:49:463] [DEBUG] - org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener.logAutoConfigurationReport(ConditionEvaluationReportLoggingListener.java:126) - 


============================
CONDITIONS EVALUATION REPORT
============================


Positive matches:
-----------------

   AopAutoConfiguration matched:
      - @ConditionalOnProperty (spring.aop.auto=true) matched (OnPropertyCondition)

   AopAutoConfiguration.AspectJAutoProxyingConfiguration matched:
      - @ConditionalOnClass found required class 'org.aspectj.weaver.Advice' (OnClassCondition)

   AopAutoConfiguration.AspectJAutoProxyingConfiguration.CglibAutoProxyConfiguration matched:
      - @ConditionalOnProperty (spring.aop.proxy-target-class=true) matched (OnPropertyCondition)

   DataSourceAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType' (OnClassCondition)

   DataSourceAutoConfiguration.PooledDataSourceConfiguration matched:
      - AnyNestedCondition 1 matched 1 did not; NestedCondition on DataSourceAutoConfiguration.PooledDataSourceCondition.PooledDataSourceAvailable PooledDataSource found supported DataSource; NestedCondition on DataSourceAutoConfiguration.PooledDataSourceCondition.ExplicitType @ConditionalOnProperty (spring.datasource.type) did not find property 'type' (DataSourceAutoConfiguration.PooledDataSourceCondition)
      - @ConditionalOnBean (types: javax.sql.DataSource,javax.sql.XADataSource; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceConfiguration.Hikari matched:
      - @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)
      - @ConditionalOnProperty (spring.datasource.type=com.zaxxer.hikari.HikariDataSource) matched (OnPropertyCondition)
      - @ConditionalOnBean (types: javax.sql.DataSource; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceJmxConfiguration matched:
      - @ConditionalOnProperty (spring.jmx.enabled=true) matched (OnPropertyCondition)

   DataSourceJmxConfiguration.Hikari matched:
      - @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)
      - @ConditionalOnBean (types: javax.sql.DataSource; SearchStrategy: all) found a primary bean from beans 'dataSource' (OnBeanCondition)

   DataSourcePoolMetadataProvidersConfiguration.HikariPoolDataSourceMetadataProviderConfiguration matched:
      - @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)

   DataSourceTransactionManagerAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.jdbc.core.JdbcTemplate', 'org.springframework.transaction.PlatformTransactionManager' (OnClassCondition)

   DataSourceTransactionManagerAutoConfiguration.DataSourceTransactionManagerConfiguration matched:
      - @ConditionalOnBean (types: javax.sql.DataSource; SearchStrategy: all) found a primary bean from beans 'dataSource' (OnBeanCondition)

   DataSourceTransactionManagerAutoConfiguration.DataSourceTransactionManagerConfiguration#transactionManager matched:
      - @ConditionalOnBean (types: org.springframework.transaction.PlatformTransactionManager; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DispatcherServletAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   DispatcherServletAutoConfiguration.DispatcherServletConfiguration matched:
      - @ConditionalOnClass found required class 'javax.servlet.ServletRegistration' (OnClassCondition)
      - Default DispatcherServlet did not find dispatcher servlet beans (DispatcherServletAutoConfiguration.DefaultDispatcherServletCondition)

   DispatcherServletAutoConfiguration.DispatcherServletRegistrationConfiguration matched:
      - @ConditionalOnClass found required class 'javax.servlet.ServletRegistration' (OnClassCondition)
      - DispatcherServlet Registration did not find servlet registration bean (DispatcherServletAutoConfiguration.DispatcherServletRegistrationCondition)

   DispatcherServletAutoConfiguration.DispatcherServletRegistrationConfiguration#dispatcherServletRegistration matched:
      - @ConditionalOnBean (names: dispatcherServlet types: org.springframework.web.servlet.DispatcherServlet; SearchStrategy: all) found bean 'dispatcherServlet' (OnBeanCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration matched:
      - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.TomcatWebServerFactoryCustomizerConfiguration matched:
      - @ConditionalOnClass found required classes 'org.apache.catalina.startup.Tomcat', 'org.apache.coyote.UpgradeProtocol' (OnClassCondition)

   ErrorMvcAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   ErrorMvcAutoConfiguration#basicErrorController matched:
      - @ConditionalOnBean (types: org.springframework.boot.web.servlet.error.ErrorController; SearchStrategy: current) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration#errorAttributes matched:
      - @ConditionalOnBean (types: org.springframework.boot.web.servlet.error.ErrorAttributes; SearchStrategy: current) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.DefaultErrorViewResolverConfiguration#conventionErrorViewResolver matched:
      - @ConditionalOnBean (types: org.springframework.web.servlet.DispatcherServlet; SearchStrategy: all) found bean 'dispatcherServlet'; @ConditionalOnBean (types: org.springframework.boot.autoconfigure.web.servlet.error.ErrorViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration matched:
      - @ConditionalOnProperty (server.error.whitelabel.enabled) matched (OnPropertyCondition)
      - ErrorTemplate Missing did not find error template view (ErrorMvcAutoConfiguration.ErrorTemplateMissingCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration#beanNameViewResolver matched:
      - @ConditionalOnBean (types: org.springframework.web.servlet.view.BeanNameViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration#defaultErrorView matched:
      - @ConditionalOnBean (names: error; SearchStrategy: all) did not find any beans (OnBeanCondition)

   GenericCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.GenericCacheConfiguration automatic cache type (CacheCondition)

   HttpEncodingAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.filter.CharacterEncodingFilter' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (spring.http.encoding.enabled) matched (OnPropertyCondition)

   HttpEncodingAutoConfiguration#characterEncodingFilter matched:
      - @ConditionalOnBean (types: org.springframework.web.filter.CharacterEncodingFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpMessageConvertersAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.HttpMessageConverter' (OnClassCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on HttpMessageConvertersAutoConfiguration.NotReactiveWebApplicationCondition.ReactiveWebApplication did not find reactive web application classes (HttpMessageConvertersAutoConfiguration.NotReactiveWebApplicationCondition)

   HttpMessageConvertersAutoConfiguration#messageConverters matched:
      - @ConditionalOnBean (types: org.springframework.boot.autoconfigure.http.HttpMessageConverters; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpMessageConvertersAutoConfiguration.StringHttpMessageConverterConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.StringHttpMessageConverter' (OnClassCondition)

   HttpMessageConvertersAutoConfiguration.StringHttpMessageConverterConfiguration#stringHttpMessageConverter matched:
      - @ConditionalOnBean (types: org.springframework.http.converter.StringHttpMessageConverter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.databind.ObjectMapper' (OnClassCondition)

   JacksonAutoConfiguration.Jackson2ObjectMapperBuilderCustomizerConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperBuilderConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperBuilderConfiguration#jacksonObjectMapperBuilder matched:
      - @ConditionalOnBean (types: org.springframework.http.converter.json.Jackson2ObjectMapperBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration.JacksonObjectMapperConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperConfiguration#jacksonObjectMapper matched:
      - @ConditionalOnBean (types: com.fasterxml.jackson.databind.ObjectMapper; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration.ParameterNamesModuleConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.module.paramnames.ParameterNamesModule' (OnClassCondition)

   JacksonAutoConfiguration.ParameterNamesModuleConfiguration#parameterNamesModule matched:
      - @ConditionalOnBean (types: com.fasterxml.jackson.module.paramnames.ParameterNamesModule; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2HttpMessageConverterConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.databind.ObjectMapper' (OnClassCondition)
      - @ConditionalOnProperty (spring.http.converters.preferred-json-mapper=jackson) matched (OnPropertyCondition)
      - @ConditionalOnBean (types: com.fasterxml.jackson.databind.ObjectMapper; SearchStrategy: all) found bean 'jacksonObjectMapper' (OnBeanCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2HttpMessageConverterConfiguration#mappingJackson2HttpMessageConverter matched:
      - @ConditionalOnBean (types: org.springframework.http.converter.json.MappingJackson2HttpMessageConverter ignored: org.springframework.hateoas.server.mvc.TypeConstrainedMappingJackson2HttpMessageConverter,org.springframework.data.rest.webmvc.alps.AlpsJsonHttpMessageConverter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JdbcTemplateAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.core.JdbcTemplate' (OnClassCondition)
      - @ConditionalOnBean (types: javax.sql.DataSource; SearchStrategy: all) found a primary bean from beans 'dataSource' (OnBeanCondition)

   JdbcTemplateConfiguration matched:
      - @ConditionalOnBean (types: org.springframework.jdbc.core.JdbcOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JmxAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.jmx.export.MBeanExporter' (OnClassCondition)
      - @ConditionalOnProperty (spring.jmx.enabled=true) matched (OnPropertyCondition)

   JmxAutoConfiguration#mbeanExporter matched:
      - @ConditionalOnBean (types: org.springframework.jmx.export.MBeanExporter; SearchStrategy: current) did not find any beans (OnBeanCondition)

   JmxAutoConfiguration#mbeanServer matched:
      - @ConditionalOnBean (types: javax.management.MBeanServer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JmxAutoConfiguration#objectNamingStrategy matched:
      - @ConditionalOnBean (types: org.springframework.jmx.export.naming.ObjectNamingStrategy; SearchStrategy: current) did not find any beans (OnBeanCondition)

   LettuceConnectionConfiguration matched:
      - @ConditionalOnClass found required class 'io.lettuce.core.RedisClient' (OnClassCondition)

   LettuceConnectionConfiguration#lettuceClientResources matched:
      - @ConditionalOnBean (types: io.lettuce.core.resource.ClientResources; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LettuceConnectionConfiguration#redisConnectionFactory matched:
      - @ConditionalOnBean (types: org.springframework.data.redis.connection.RedisConnectionFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MultipartAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'org.springframework.web.multipart.support.StandardServletMultipartResolver', 'javax.servlet.MultipartConfigElement' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (spring.servlet.multipart.enabled) matched (OnPropertyCondition)

   MultipartAutoConfiguration#multipartConfigElement matched:
      - @ConditionalOnBean (types: javax.servlet.MultipartConfigElement,org.springframework.web.multipart.commons.CommonsMultipartResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MultipartAutoConfiguration#multipartResolver matched:
      - @ConditionalOnBean (types: org.springframework.web.multipart.MultipartResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MybatisAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.apache.ibatis.session.SqlSessionFactory', 'org.mybatis.spring.SqlSessionFactoryBean' (OnClassCondition)
      - @ConditionalOnBean (types: javax.sql.DataSource; SearchStrategy: all) found bean 'dataSource' (OnBeanCondition)

   MybatisAutoConfiguration#sqlSessionFactory matched:
      - @ConditionalOnBean (types: org.apache.ibatis.session.SqlSessionFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MybatisAutoConfiguration#sqlSessionTemplate matched:
      - @ConditionalOnBean (types: org.mybatis.spring.SqlSessionTemplate; SearchStrategy: all) did not find any beans (OnBeanCondition)

   NamedParameterJdbcTemplateConfiguration matched:
      - @ConditionalOnBean (types: org.springframework.jdbc.core.JdbcTemplate; SearchStrategy: all) found a primary bean from beans 'jdbcTemplate'; @ConditionalOnBean (types: org.springframework.jdbc.core.namedparam.NamedParameterJdbcOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   NoOpCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.NoOpCacheConfiguration automatic cache type (CacheCondition)

   OAuth2ResourceServerAutoConfiguration matched:
      - found 'session' scope (OnWebApplicationCondition)

   PageHelperAutoConfiguration matched:
      - @ConditionalOnBean (types: org.apache.ibatis.session.SqlSessionFactory; SearchStrategy: all) found bean 'sqlSessionFactory' (OnBeanCondition)

   PersistenceExceptionTranslationAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor' (OnClassCondition)

   PersistenceExceptionTranslationAutoConfiguration#persistenceExceptionTranslationPostProcessor matched:
      - @ConditionalOnProperty (spring.dao.exceptiontranslation.enabled) matched (OnPropertyCondition)
      - @ConditionalOnBean (types: org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   PropertyPlaceholderAutoConfiguration#propertySourcesPlaceholderConfigurer matched:
      - @ConditionalOnBean (types: org.springframework.context.support.PropertySourcesPlaceholderConfigurer; SearchStrategy: current) did not find any beans (OnBeanCondition)

   RedisAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.data.redis.core.RedisOperations' (OnClassCondition)

   RedisAutoConfiguration#redisTemplate matched:
      - @ConditionalOnBean (names: redisTemplate; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RedisAutoConfiguration#stringRedisTemplate matched:
      - @ConditionalOnBean (types: org.springframework.data.redis.core.StringRedisTemplate; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RedisCacheConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.data.redis.connection.RedisConnectionFactory' (OnClassCondition)
      - Cache org.springframework.boot.autoconfigure.cache.RedisCacheConfiguration automatic cache type (CacheCondition)

   RedisReactiveAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.data.redis.connection.ReactiveRedisConnectionFactory', 'org.springframework.data.redis.core.ReactiveRedisTemplate', 'reactor.core.publisher.Flux' (OnClassCondition)

   RedisReactiveAutoConfiguration#reactiveRedisTemplate matched:
      - @ConditionalOnBean (types: org.springframework.data.redis.connection.ReactiveRedisConnectionFactory; SearchStrategy: all) found bean 'redisConnectionFactory'; @ConditionalOnBean (names: reactiveRedisTemplate; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RedisReactiveAutoConfiguration#reactiveStringRedisTemplate matched:
      - @ConditionalOnBean (types: org.springframework.data.redis.connection.ReactiveRedisConnectionFactory; SearchStrategy: all) found bean 'redisConnectionFactory'; @ConditionalOnBean (names: reactiveStringRedisTemplate; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RedisRepositoriesAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.data.redis.repository.configuration.EnableRedisRepositories' (OnClassCondition)
      - @ConditionalOnProperty (spring.data.redis.repositories.enabled=true) matched (OnPropertyCondition)
      - @ConditionalOnBean (types: org.springframework.data.redis.connection.RedisConnectionFactory; SearchStrategy: all) found bean 'redisConnectionFactory'; @ConditionalOnBean (types: org.springframework.data.redis.repository.support.RedisRepositoryFactoryBean; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RestTemplateAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.client.RestTemplate' (OnClassCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on RestTemplateAutoConfiguration.NotReactiveWebApplicationCondition.ReactiveWebApplication did not find reactive web application classes (RestTemplateAutoConfiguration.NotReactiveWebApplicationCondition)

   RestTemplateAutoConfiguration#restTemplateBuilder matched:
      - @ConditionalOnBean (types: org.springframework.boot.web.client.RestTemplateBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ServletWebServerFactoryAutoConfiguration matched:
      - @ConditionalOnClass found required class 'javax.servlet.ServletRequest' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   ServletWebServerFactoryAutoConfiguration#tomcatServletWebServerFactoryCustomizer matched:
      - @ConditionalOnClass found required class 'org.apache.catalina.startup.Tomcat' (OnClassCondition)

   ServletWebServerFactoryConfiguration.EmbeddedTomcat matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'org.apache.catalina.startup.Tomcat', 'org.apache.coyote.UpgradeProtocol' (OnClassCondition)
      - @ConditionalOnBean (types: org.springframework.boot.web.servlet.server.ServletWebServerFactory; SearchStrategy: current) did not find any beans (OnBeanCondition)

   SimpleCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.SimpleCacheConfiguration automatic cache type (CacheCondition)

   SpringApplicationAdminJmxAutoConfiguration matched:
      - @ConditionalOnProperty (spring.application.admin.enabled=true) matched (OnPropertyCondition)

   SpringApplicationAdminJmxAutoConfiguration#springApplicationAdminRegistrar matched:
      - @ConditionalOnBean (types: org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDataWebAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.data.web.PageableHandlerMethodArgumentResolver', 'org.springframework.web.servlet.config.annotation.WebMvcConfigurer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnBean (types: org.springframework.data.web.PageableHandlerMethodArgumentResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDataWebAutoConfiguration#pageableCustomizer matched:
      - @ConditionalOnBean (types: org.springframework.data.web.config.PageableHandlerMethodArgumentResolverCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDataWebAutoConfiguration#sortCustomizer matched:
      - @ConditionalOnBean (types: org.springframework.data.web.config.SortHandlerMethodArgumentResolverCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskExecutionAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor' (OnClassCondition)

   TaskExecutionAutoConfiguration#applicationTaskExecutor matched:
      - @ConditionalOnBean (types: java.util.concurrent.Executor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskExecutionAutoConfiguration#taskExecutorBuilder matched:
      - @ConditionalOnBean (types: org.springframework.boot.task.TaskExecutorBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskSchedulingAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler' (OnClassCondition)

   TaskSchedulingAutoConfiguration#taskSchedulerBuilder matched:
      - @ConditionalOnBean (types: org.springframework.boot.task.TaskSchedulerBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.transaction.PlatformTransactionManager' (OnClassCondition)

   TransactionAutoConfiguration#platformTransactionManagerCustomizers matched:
      - @ConditionalOnBean (types: org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizers; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration matched:
      - @ConditionalOnBean (types: org.springframework.transaction.TransactionManager; SearchStrategy: all) found bean 'transactionManager'; @ConditionalOnBean (types: org.springframework.transaction.annotation.AbstractTransactionManagementConfiguration; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration.CglibAutoProxyConfiguration matched:
      - @ConditionalOnProperty (spring.aop.proxy-target-class=true) matched (OnPropertyCondition)

   TransactionAutoConfiguration.TransactionTemplateConfiguration matched:
      - @ConditionalOnBean (types: org.springframework.transaction.PlatformTransactionManager; SearchStrategy: all) found a primary bean from beans 'transactionManager' (OnBeanCondition)

   TransactionAutoConfiguration.TransactionTemplateConfiguration#transactionTemplate matched:
      - @ConditionalOnBean (types: org.springframework.transaction.support.TransactionOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ValidationAutoConfiguration matched:
      - @ConditionalOnClass found required class 'javax.validation.executable.ExecutableValidator' (OnClassCondition)
      - @ConditionalOnResource found location classpath:META-INF/services/javax.validation.spi.ValidationProvider (OnResourceCondition)

   ValidationAutoConfiguration#defaultValidator matched:
      - @ConditionalOnBean (types: javax.validation.Validator; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ValidationAutoConfiguration#methodValidationPostProcessor matched:
      - @ConditionalOnBean (types: org.springframework.validation.beanvalidation.MethodValidationPostProcessor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'org.springframework.web.servlet.DispatcherServlet', 'org.springframework.web.servlet.config.annotation.WebMvcConfigurer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnBean (types: org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration#formContentFilter matched:
      - @ConditionalOnProperty (spring.mvc.formcontent.filter.enabled) matched (OnPropertyCondition)
      - @ConditionalOnBean (types: org.springframework.web.filter.FormContentFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#defaultViewResolver matched:
      - @ConditionalOnBean (types: org.springframework.web.servlet.view.InternalResourceViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#requestContextFilter matched:
      - @ConditionalOnBean (types: org.springframework.web.context.request.RequestContextListener,org.springframework.web.filter.RequestContextFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#viewResolver matched:
      - @ConditionalOnBean (types: org.springframework.web.servlet.ViewResolver; SearchStrategy: all) found beans 'defaultViewResolver', 'beanNameViewResolver', 'mvcViewResolver'; @ConditionalOnBean (names: viewResolver types: org.springframework.web.servlet.view.ContentNegotiatingViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebSocketServletAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'javax.websocket.server.ServerContainer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   WebSocketServletAutoConfiguration.TomcatWebSocketConfiguration matched:
      - @ConditionalOnClass found required classes 'org.apache.catalina.startup.Tomcat', 'org.apache.tomcat.websocket.server.WsSci' (OnClassCondition)

   WebSocketServletAutoConfiguration.TomcatWebSocketConfiguration#websocketServletWebServerCustomizer matched:
      - @ConditionalOnBean (names: websocketServletWebServerCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)


Negative matches:
-----------------

   ActiveMQAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.jms.ConnectionFactory' (OnClassCondition)

   AopAutoConfiguration.AspectJAutoProxyingConfiguration.JdkDynamicAutoProxyConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.aop.proxy-target-class=false) did not find property 'proxy-target-class' (OnPropertyCondition)

   AopAutoConfiguration.ClassProxyingConfiguration:
      Did not match:
         - @ConditionalOnMissingClass found unwanted class 'org.aspectj.weaver.Advice' (OnClassCondition)

   ArtemisAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.jms.ConnectionFactory' (OnClassCondition)

   BatchAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.batch.core.launch.JobLauncher' (OnClassCondition)

   CacheAutoConfiguration:
      Did not match:
         - @ConditionalOnBean (names: cacheResolver types: org.springframework.cache.CacheManager; SearchStrategy: all) found beans of type 'org.springframework.cache.CacheManager' redisCacheManager (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.cache.CacheManager' (OnClassCondition)

   CacheAutoConfiguration.CacheManagerEntityManagerFactoryDependsOnPostProcessor:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean' (OnClassCondition)
         - Ancestor org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration did not match (ConditionEvaluationReport.AncestorsMatchedCondition)

   CaffeineCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.github.benmanes.caffeine.cache.Caffeine' (OnClassCondition)

   CassandraAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.driver.core.Cluster' (OnClassCondition)

   CassandraDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.driver.core.Cluster' (OnClassCondition)

   CassandraReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.driver.core.Cluster' (OnClassCondition)

   CassandraReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.cassandra.ReactiveSession' (OnClassCondition)

   CassandraRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.driver.core.Session' (OnClassCondition)

   ClientHttpConnectorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   CloudServiceConnectorsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.cloud.config.java.CloudScanConfiguration' (OnClassCondition)

   CodecsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   CouchbaseAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'com.couchbase.client.java.Bucket', 'com.couchbase.client.spring.cache.CouchbaseCacheManager' (OnClassCondition)

   CouchbaseDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Bucket' (OnClassCondition)

   CouchbaseReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Bucket' (OnClassCondition)

   CouchbaseReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Bucket' (OnClassCondition)

   CouchbaseRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Bucket' (OnClassCondition)

   DataSourceAutoConfiguration.EmbeddedDatabaseConfiguration:
      Did not match:
         - EmbeddedDataSource found supported pooled data source (DataSourceAutoConfiguration.EmbeddedDatabaseCondition)

   DataSourceConfiguration.Dbcp2:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.commons.dbcp2.BasicDataSource' (OnClassCondition)

   DataSourceConfiguration.Generic:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.type) did not find property 'spring.datasource.type' (OnPropertyCondition)

   DataSourceConfiguration.Tomcat:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.tomcat.jdbc.pool.DataSource' (OnClassCondition)

   DataSourceJmxConfiguration.TomcatDataSourceJmxConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.tomcat.jdbc.pool.DataSourceProxy' (OnClassCondition)

   DataSourcePoolMetadataProvidersConfiguration.CommonsDbcp2PoolDataSourceMetadataProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.commons.dbcp2.BasicDataSource' (OnClassCondition)

   DataSourcePoolMetadataProvidersConfiguration.TomcatDataSourcePoolMetadataProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.tomcat.jdbc.pool.DataSource' (OnClassCondition)

   DispatcherServletAutoConfiguration.DispatcherServletConfiguration#multipartResolver:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.web.multipart.MultipartResolver; SearchStrategy: all) did not find any beans of type org.springframework.web.multipart.MultipartResolver (OnBeanCondition)

   EhCacheCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'net.sf.ehcache.Cache' (OnClassCondition)

   ElasticsearchAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.elasticsearch.client.Client' (OnClassCondition)

   ElasticsearchDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.elasticsearch.core.ElasticsearchTemplate' (OnClassCondition)

   ElasticsearchRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.elasticsearch.client.Client' (OnClassCondition)

   EmbeddedLdapAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.unboundid.ldap.listener.InMemoryDirectoryServer' (OnClassCondition)

   EmbeddedMongoAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.MongoClient' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.JettyWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.eclipse.jetty.server.Server', 'org.eclipse.jetty.util.Loader', 'org.eclipse.jetty.webapp.WebAppContext' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.NettyWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.netty.http.server.HttpServer' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.UndertowWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.undertow.Undertow', 'org.xnio.SslClientAuthMode' (OnClassCondition)

   ErrorWebFluxAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)

   FlywayAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.flywaydb.core.Flyway' (OnClassCondition)

   FreeMarkerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'freemarker.template.Configuration' (OnClassCondition)

   GroovyTemplateAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'groovy.text.markup.MarkupTemplateEngine' (OnClassCondition)

   GsonAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.google.gson.Gson' (OnClassCondition)

   GsonHttpMessageConvertersConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.google.gson.Gson' (OnClassCondition)

   H2ConsoleAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.h2.server.web.WebServlet' (OnClassCondition)

   HazelcastAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HazelcastCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'com.hazelcast.core.HazelcastInstance', 'com.hazelcast.spring.cache.HazelcastCacheManager' (OnClassCondition)

   HazelcastJpaDependencyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HibernateJpaAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.persistence.EntityManager' (OnClassCondition)

   HttpHandlerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.DispatcherHandler' (OnClassCondition)

   HypermediaAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.hateoas.EntityModel' (OnClassCondition)

   InfinispanCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.infinispan.spring.embedded.provider.SpringEmbeddedCacheManager' (OnClassCondition)

   InfluxDbAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.influxdb.InfluxDB' (OnClassCondition)

   IntegrationAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.integration.config.EnableIntegration' (OnClassCondition)

   JCacheCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.cache.Caching' (OnClassCondition)

   JacksonAutoConfiguration.JodaDateTimeJacksonConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.joda.time.DateTime', 'com.fasterxml.jackson.datatype.joda.ser.DateTimeSerializer', 'com.fasterxml.jackson.datatype.joda.cfg.JacksonJodaDateFormat' (OnClassCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2XmlHttpMessageConverterConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.fasterxml.jackson.dataformat.xml.XmlMapper' (OnClassCondition)

   JdbcRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.jdbc.repository.config.AbstractJdbcConfiguration' (OnClassCondition)

   JedisConnectionConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.apache.commons.pool2.impl.GenericObjectPool', 'redis.clients.jedis.Jedis' (OnClassCondition)

   JerseyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.glassfish.jersey.server.spring.SpringComponentProvider' (OnClassCondition)

   JestAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.searchbox.client.JestClient' (OnClassCondition)

   JmsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.jms.Message' (OnClassCondition)

   JndiConnectionFactoryAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.jms.core.JmsTemplate' (OnClassCondition)

   JndiDataSourceAutoConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.jndi-name) did not find property 'jndi-name' (OnPropertyCondition)
      Matched:
         - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType' (OnClassCondition)

   JooqAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.jooq.DSLContext' (OnClassCondition)

   JpaRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.jpa.repository.JpaRepository' (OnClassCondition)

   JsonbAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.json.bind.Jsonb' (OnClassCondition)

   JsonbHttpMessageConvertersConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.json.bind.Jsonb' (OnClassCondition)

   JtaAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.transaction.Transaction' (OnClassCondition)

   KafkaAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.kafka.core.KafkaTemplate' (OnClassCondition)

   LdapAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.ldap.core.ContextSource' (OnClassCondition)

   LdapRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.ldap.repository.LdapRepository' (OnClassCondition)

   LiquibaseAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'liquibase.change.DatabaseChange' (OnClassCondition)

   MailSenderAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.mail.internet.MimeMessage' (OnClassCondition)

   MailSenderValidatorAutoConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.mail.test-connection) did not find property 'test-connection' (OnPropertyCondition)

   MessageSourceAutoConfiguration:
      Did not match:
         - ResourceBundle did not find bundle with basename messages (MessageSourceAutoConfiguration.ResourceBundleCondition)

   MongoAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.MongoClient' (OnClassCondition)

   MongoDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.client.MongoClient' (OnClassCondition)

   MongoReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.MongoClient' (OnClassCondition)

   MustacheAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.samskivert.mustache.Mustache' (OnClassCondition)

   MybatisAutoConfiguration.MapperScannerRegistrarNotFoundConfiguration:
      Did not match:
         - @ConditionalOnBean (types: org.mybatis.spring.mapper.MapperFactoryBean; SearchStrategy: all) found beans of type 'org.mybatis.spring.mapper.MapperFactoryBean' &departmentMapper, &employeeMapper, &leaveFormMapper, &nodeMapper, &noticeMapper, &processFlowMapper, &userMapper (OnBeanCondition)

   Neo4jDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.ogm.session.SessionFactory' (OnClassCondition)

   Neo4jRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.ogm.session.Neo4jSession' (OnClassCondition)

   OAuth2ClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.annotation.web.configuration.EnableWebSecurity' (OnClassCondition)

   OAuth2ResourceServerAutoConfiguration.JwtConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.springframework.security.oauth2.server.resource.authentication.JwtAuthenticationToken', 'org.springframework.security.oauth2.jwt.JwtDecoder' (OnClassCondition)

   OAuth2ResourceServerAutoConfiguration.OpaqueTokenConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.springframework.security.oauth2.server.resource.BearerTokenAuthenticationToken', 'org.springframework.security.oauth2.server.resource.introspection.OpaqueTokenIntrospector' (OnClassCondition)

   ProjectInfoAutoConfiguration#buildProperties:
      Did not match:
         - @ConditionalOnResource did not find resource '${spring.info.build.location:classpath:META-INF/build-info.properties}' (OnResourceCondition)

   ProjectInfoAutoConfiguration#gitProperties:
      Did not match:
         - GitResource did not find git info at classpath:git.properties (ProjectInfoAutoConfiguration.GitResourceAvailableCondition)

   QuartzAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.quartz.Scheduler' (OnClassCondition)

   RSocketMessagingAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.RSocketFactory' (OnClassCondition)

   RSocketRequesterAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.RSocketFactory' (OnClassCondition)

   RSocketSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.rsocket.core.SecuritySocketAcceptorInterceptor' (OnClassCondition)

   RSocketServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.RSocketFactory' (OnClassCondition)

   RSocketStrategiesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.RSocketFactory' (OnClassCondition)

   RabbitAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.rabbitmq.client.Channel' (OnClassCondition)

   ReactiveElasticsearchRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.elasticsearch.client.reactive.ReactiveElasticsearchClient' (OnClassCondition)

   ReactiveOAuth2ClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.annotation.web.reactive.EnableWebFluxSecurity' (OnClassCondition)

   ReactiveOAuth2ResourceServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.annotation.web.reactive.EnableWebFluxSecurity' (OnClassCondition)

   ReactiveRestClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.netty.http.client.HttpClient' (OnClassCondition)

   ReactiveSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.annotation.web.reactive.EnableWebFluxSecurity' (OnClassCondition)

   ReactiveUserDetailsServiceAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.authentication.ReactiveAuthenticationManager' (OnClassCondition)

   ReactiveWebServerFactoryAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   RepositoryRestMvcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.rest.webmvc.config.RepositoryRestMvcConfiguration' (OnClassCondition)

   RestClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.elasticsearch.client.RestClient' (OnClassCondition)

   Saml2RelyingPartyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.saml2.provider.service.registration.RelyingPartyRegistrationRepository' (OnClassCondition)

   SecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.authentication.DefaultAuthenticationEventPublisher' (OnClassCondition)

   SecurityFilterAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.http.SessionCreationPolicy' (OnClassCondition)

   SendGridAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.sendgrid.SendGrid' (OnClassCondition)

   ServletWebServerFactoryAutoConfiguration#forwardedHeaderFilter:
      Did not match:
         - @ConditionalOnProperty (server.forward-headers-strategy=framework) did not find property 'server.forward-headers-strategy' (OnPropertyCondition)

   ServletWebServerFactoryConfiguration.EmbeddedJetty:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.eclipse.jetty.server.Server', 'org.eclipse.jetty.util.Loader', 'org.eclipse.jetty.webapp.WebAppContext' (OnClassCondition)

   ServletWebServerFactoryConfiguration.EmbeddedUndertow:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.undertow.Undertow', 'org.xnio.SslClientAuthMode' (OnClassCondition)

   SessionAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.session.Session' (OnClassCondition)

   SolrAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.solr.client.solrj.impl.CloudSolrClient' (OnClassCondition)

   SolrRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.solr.client.solrj.SolrClient' (OnClassCondition)

   TaskSchedulingAutoConfiguration#taskScheduler:
      Did not match:
         - @ConditionalOnBean (names: org.springframework.context.annotation.internalScheduledAnnotationProcessor; SearchStrategy: all) did not find any beans named org.springframework.context.annotation.internalScheduledAnnotationProcessor (OnBeanCondition)

   ThymeleafAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.thymeleaf.spring5.SpringTemplateEngine' (OnClassCondition)

   TransactionAutoConfiguration#transactionalOperator:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.transaction.ReactiveTransactionManager; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration.JdkDynamicAutoProxyConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.aop.proxy-target-class=false) did not find property 'proxy-target-class' (OnPropertyCondition)

   UserDetailsServiceAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.authentication.AuthenticationManager' (OnClassCondition)

   WebClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   WebFluxAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)

   WebMvcAutoConfiguration#hiddenHttpMethodFilter:
      Did not match:
         - @ConditionalOnProperty (spring.mvc.hiddenmethod.filter.enabled) did not find property 'enabled' (OnPropertyCondition)

   WebMvcAutoConfiguration.ResourceChainCustomizerConfiguration:
      Did not match:
         - @ConditionalOnEnabledResourceChain did not find class org.webjars.WebJarAssetLocator (OnEnabledResourceChainCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#beanNameViewResolver:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.web.servlet.view.BeanNameViewResolver; SearchStrategy: all) found beans of type 'org.springframework.web.servlet.view.BeanNameViewResolver' beanNameViewResolver (OnBeanCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#localeResolver:
      Did not match:
         - @ConditionalOnProperty (spring.mvc.locale) did not find property 'locale' (OnPropertyCondition)

   WebServiceTemplateAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.ws.client.core.WebServiceTemplate' (OnClassCondition)

   WebServicesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.ws.transport.http.MessageDispatcherServlet' (OnClassCondition)

   WebSocketMessagingAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.socket.config.annotation.WebSocketMessageBrokerConfigurer' (OnClassCondition)

   WebSocketReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   WebSocketServletAutoConfiguration.JettyWebSocketConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.eclipse.jetty.websocket.jsr356.server.deploy.WebSocketServerContainerInitializer' (OnClassCondition)

   WebSocketServletAutoConfiguration.UndertowWebSocketConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.undertow.websockets.jsr.Bootstrap' (OnClassCondition)

   XADataSourceAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.transaction.TransactionManager' (OnClassCondition)


Exclusions:
-----------

    None


Unconditional classes:
----------------------

    org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration

    org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration

    org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration



[01:34:49:463] [DEBUG] - org.springframework.core.env.PropertySourcesPropertyResolver.logKeyFound(PropertySourcesPropertyResolver.java:115) - Found key 'spring.liveBeansView.mbeanDomain' in PropertySource 'systemProperties' with value of type String
[01:34:51:134] [DEBUG] - org.springframework.core.env.PropertySourcesPropertyResolver.logKeyFound(PropertySourcesPropertyResolver.java:115) - Found key 'local.server.port' in PropertySource 'server.ports' with value of type Integer
[01:37:08:862] [DEBUG] - org.springframework.web.servlet.DispatcherServlet.initMultipartResolver(DispatcherServlet.java:526) - Detected StandardServletMultipartResolver
[01:37:08:912] [DEBUG] - org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:542) - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
[01:37:08:934] [DEBUG] - org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:91) - POST "/login?username=m8&password=1234", parameters={masked}
[01:37:08:943] [DEBUG] - org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:412) - Mapped to com.wei.oa_spring.controller.UserController#login(String, String, HttpSession)
[01:37:09:039] [DEBUG] - org.mybatis.spring.SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[01:37:09:056] [DEBUG] - org.mybatis.spring.SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@58d76d61] was not registered for synchronization because synchronization is not active
[01:37:09:073] [DEBUG] - org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:115) - Fetching JDBC Connection from DataSource
[01:37:09:076] [DEBUG] - com.zaxxer.hikari.HikariConfig.logConfiguration(HikariConfig.java:1020) - imooc_oa_datasource - configuration:
[01:37:09:081] [DEBUG] - com.zaxxer.hikari.HikariConfig.logConfiguration(HikariConfig.java:1052) - allowPoolSuspension.............false
[01:37:09:081] [DEBUG] - com.zaxxer.hikari.HikariConfig.logConfiguration(HikariConfig.java:1052) - autoCommit......................true
[01:37:09:082] [DEBUG] - com.zaxxer.hikari.HikariConfig.logConfiguration(HikariConfig.java:1052) - catalog.........................none
[01:37:09:082] [DEBUG] - com.zaxxer.hikari.HikariConfig.logConfiguration(HikariConfig.java:1052) - connectionInitSql...............none
[01:37:09:082] [DEBUG] - com.zaxxer.hikari.HikariConfig.logConfiguration(HikariConfig.java:1052) - connectionTestQuery.............none
[01:37:09:083] [DEBUG] - com.zaxxer.hikari.HikariConfig.logConfiguration(HikariConfig.java:1052) - connectionTimeout...............30000
[01:37:09:083] [DEBUG] - com.zaxxer.hikari.HikariConfig.logConfiguration(HikariConfig.java:1052) - dataSource......................none
[01:37:09:084] [DEBUG] - com.zaxxer.hikari.HikariConfig.logConfiguration(HikariConfig.java:1052) - dataSourceClassName.............none
[01:37:09:084] [DEBUG] - com.zaxxer.hikari.HikariConfig.logConfiguration(HikariConfig.java:1052) - dataSourceJNDI..................none
[01:37:09:085] [DEBUG] - com.zaxxer.hikari.HikariConfig.logConfiguration(HikariConfig.java:1052) - dataSourceProperties............{password=<masked>}
[01:37:09:085] [DEBUG] - com.zaxxer.hikari.HikariConfig.logConfiguration(HikariConfig.java:1052) - driverClassName................."com.mysql.cj.jdbc.Driver"
[01:37:09:086] [DEBUG] - com.zaxxer.hikari.HikariConfig.logConfiguration(HikariConfig.java:1052) - healthCheckProperties...........{}
[01:37:09:086] [DEBUG] - com.zaxxer.hikari.HikariConfig.logConfiguration(HikariConfig.java:1052) - healthCheckRegistry.............none
[01:37:09:086] [DEBUG] - com.zaxxer.hikari.HikariConfig.logConfiguration(HikariConfig.java:1052) - idleTimeout.....................600000
[01:37:09:087] [DEBUG] - com.zaxxer.hikari.HikariConfig.logConfiguration(HikariConfig.java:1052) - initializationFailTimeout.......1
[01:37:09:087] [DEBUG] - com.zaxxer.hikari.HikariConfig.logConfiguration(HikariConfig.java:1052) - isolateInternalQueries..........false
[01:37:09:088] [DEBUG] - com.zaxxer.hikari.HikariConfig.logConfiguration(HikariConfig.java:1052) - jdbcUrl.........................jdbc:mysql://127.0.0.1:3306/imooc_oa?useUnicode=true&characterEncoding=utf8&autoReconnect=true&useSSL=false&serverTimezone=Asia/Shanghai
[01:37:09:089] [DEBUG] - com.zaxxer.hikari.HikariConfig.logConfiguration(HikariConfig.java:1052) - leakDetectionThreshold..........0
[01:37:09:090] [DEBUG] - com.zaxxer.hikari.HikariConfig.logConfiguration(HikariConfig.java:1052) - maxLifetime.....................1800000
[01:37:09:090] [DEBUG] - com.zaxxer.hikari.HikariConfig.logConfiguration(HikariConfig.java:1052) - maximumPoolSize.................10
[01:37:09:090] [DEBUG] - com.zaxxer.hikari.HikariConfig.logConfiguration(HikariConfig.java:1052) - metricRegistry..................none
[01:37:09:091] [DEBUG] - com.zaxxer.hikari.HikariConfig.logConfiguration(HikariConfig.java:1052) - metricsTrackerFactory...........none
[01:37:09:091] [DEBUG] - com.zaxxer.hikari.HikariConfig.logConfiguration(HikariConfig.java:1052) - minimumIdle.....................10
[01:37:09:092] [DEBUG] - com.zaxxer.hikari.HikariConfig.logConfiguration(HikariConfig.java:1052) - password........................<masked>
[01:37:09:092] [DEBUG] - com.zaxxer.hikari.HikariConfig.logConfiguration(HikariConfig.java:1052) - poolName........................"imooc_oa_datasource"
[01:37:09:092] [DEBUG] - com.zaxxer.hikari.HikariConfig.logConfiguration(HikariConfig.java:1052) - readOnly........................false
[01:37:09:093] [DEBUG] - com.zaxxer.hikari.HikariConfig.logConfiguration(HikariConfig.java:1052) - registerMbeans..................false
[01:37:09:093] [DEBUG] - com.zaxxer.hikari.HikariConfig.logConfiguration(HikariConfig.java:1052) - scheduledExecutor...............none
[01:37:09:093] [DEBUG] - com.zaxxer.hikari.HikariConfig.logConfiguration(HikariConfig.java:1052) - schema..........................none
[01:37:09:094] [DEBUG] - com.zaxxer.hikari.HikariConfig.logConfiguration(HikariConfig.java:1052) - threadFactory...................internal
[01:37:09:094] [DEBUG] - com.zaxxer.hikari.HikariConfig.logConfiguration(HikariConfig.java:1052) - transactionIsolation............default
[01:37:09:094] [DEBUG] - com.zaxxer.hikari.HikariConfig.logConfiguration(HikariConfig.java:1052) - username........................"root"
[01:37:09:095] [DEBUG] - com.zaxxer.hikari.HikariConfig.logConfiguration(HikariConfig.java:1052) - validationTimeout...............5000
[01:37:09:450] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:566) - imooc_oa_datasource - Added connection com.mysql.cj.jdbc.ConnectionImpl@129b4d40
[01:37:09:465] [DEBUG] - org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [HikariProxyConnection@1040504637 wrapping com.mysql.cj.jdbc.ConnectionImpl@129b4d40] will not be managed by Spring
[01:37:09:472] [DEBUG] - org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: select user_id , username, `password`, employee_id, salt from sys_user where username = ? and password = ? 
[01:37:09:515] [DEBUG] - org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: m8(String), S6h8CwRiXkdyIFUP1rFF1g==(String)
[01:37:09:556] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417) - imooc_oa_datasource - Pool stats (total=1, active=1, idle=0, waiting=0)
[01:37:09:580] [DEBUG] - com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator.call(HikariPool.java:730) - imooc_oa_datasource - Added connection com.mysql.cj.jdbc.ConnectionImpl@4505bc
[01:37:09:597] [DEBUG] - com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator.call(HikariPool.java:730) - imooc_oa_datasource - Added connection com.mysql.cj.jdbc.ConnectionImpl@74c87e15
[01:37:09:607] [DEBUG] - com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator.call(HikariPool.java:730) - imooc_oa_datasource - Added connection com.mysql.cj.jdbc.ConnectionImpl@6b7eae1e
[01:37:09:610] [DEBUG] - org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[01:37:09:616] [DEBUG] - com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator.call(HikariPool.java:730) - imooc_oa_datasource - Added connection com.mysql.cj.jdbc.ConnectionImpl@21263d5e
[01:37:09:622] [DEBUG] - org.mybatis.spring.SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@58d76d61]
[01:37:09:626] [DEBUG] - com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator.call(HikariPool.java:730) - imooc_oa_datasource - Added connection com.mysql.cj.jdbc.ConnectionImpl@497d1625
[01:37:09:635] [DEBUG] - com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator.call(HikariPool.java:730) - imooc_oa_datasource - Added connection com.mysql.cj.jdbc.ConnectionImpl@595fff90
[01:37:09:649] [DEBUG] - com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator.call(HikariPool.java:730) - imooc_oa_datasource - Added connection com.mysql.cj.jdbc.ConnectionImpl@24d43ecb
[01:37:09:659] [DEBUG] - com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator.call(HikariPool.java:730) - imooc_oa_datasource - Added connection com.mysql.cj.jdbc.ConnectionImpl@352c83f0
[01:37:09:669] [DEBUG] - com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator.call(HikariPool.java:730) - imooc_oa_datasource - Added connection com.mysql.cj.jdbc.ConnectionImpl@62e017bb
[01:37:09:670] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417) - imooc_oa_datasource - After adding stats (total=10, active=0, idle=10, waiting=0)
[01:37:09:751] [DEBUG] - org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor.writeWithMessageConverters(AbstractMessageConverterMethodProcessor.java:273) - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
[01:37:09:752] [DEBUG] - org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:91) - Writing [ApiRestResponse{status=10000, msg='SUCCESS', data=com.wei.oa_spring.model.pojo.User@494914d3}]
[01:37:09:779] [DEBUG] - org.springframework.web.servlet.FrameworkServlet.logResult(FrameworkServlet.java:1131) - Completed 200 OK
[01:37:15:110] [DEBUG] - org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:91) - POST "/login?username=s7&password=1234", parameters={masked}
[01:37:15:111] [DEBUG] - org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:412) - Mapped to com.wei.oa_spring.controller.UserController#login(String, String, HttpSession)
[01:37:15:117] [DEBUG] - org.mybatis.spring.SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[01:37:15:118] [DEBUG] - org.mybatis.spring.SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3efc8d42] was not registered for synchronization because synchronization is not active
[01:37:15:119] [DEBUG] - org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:115) - Fetching JDBC Connection from DataSource
[01:37:15:122] [DEBUG] - org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [HikariProxyConnection@2132854735 wrapping com.mysql.cj.jdbc.ConnectionImpl@129b4d40] will not be managed by Spring
[01:37:15:124] [DEBUG] - org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: select user_id , username, `password`, employee_id, salt from sys_user where username = ? and password = ? 
[01:37:15:125] [DEBUG] - org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: s7(String), S6h8CwRiXkdyIFUP1rFF1g==(String)
[01:37:15:128] [DEBUG] - org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[01:37:15:130] [DEBUG] - org.mybatis.spring.SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3efc8d42]
[01:37:15:141] [DEBUG] - org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor.writeWithMessageConverters(AbstractMessageConverterMethodProcessor.java:273) - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
[01:37:15:142] [DEBUG] - org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:91) - Writing [ApiRestResponse{status=10000, msg='SUCCESS', data=com.wei.oa_spring.model.pojo.User@2e8b35f6}]
[01:37:15:144] [DEBUG] - org.springframework.web.servlet.FrameworkServlet.logResult(FrameworkServlet.java:1131) - Completed 200 OK
[01:37:30:492] [DEBUG] - org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:91) - POST "/user/Logout", parameters={}
[01:37:30:500] [DEBUG] - org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:412) - Mapped to ResourceHttpRequestHandler ["classpath:/static/"]
[01:37:30:505] [DEBUG] - org.springframework.web.servlet.resource.ResourceHttpRequestHandler.handleRequest(ResourceHttpRequestHandler.java:454) - Resource not found
[01:37:30:506] [DEBUG] - org.springframework.web.servlet.FrameworkServlet.logResult(FrameworkServlet.java:1131) - Completed 404 NOT_FOUND
[01:37:30:518] [DEBUG] - org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:91) - "ERROR" dispatch for POST "/error", parameters={}
[01:37:30:520] [DEBUG] - org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:412) - Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
[01:37:30:542] [DEBUG] - org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor.writeWithMessageConverters(AbstractMessageConverterMethodProcessor.java:273) - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
[01:37:30:543] [DEBUG] - org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:91) - Writing [{timestamp=Mon Feb 20 01:37:30 CST 2023, status=404, error=Not Found, message=No message available,  (truncated)...]
[01:37:30:560] [DEBUG] - org.springframework.web.servlet.FrameworkServlet.logResult(FrameworkServlet.java:1127) - Exiting from "ERROR" dispatch, status 404
[01:37:39:537] [DEBUG] - org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:91) - POST "/user/logout", parameters={}
[01:37:39:538] [DEBUG] - org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:412) - Mapped to com.wei.oa_spring.controller.UserController#logout(HttpSession)
[01:37:39:554] [DEBUG] - org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor.writeWithMessageConverters(AbstractMessageConverterMethodProcessor.java:273) - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
[01:37:39:555] [DEBUG] - org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:91) - Writing [ApiRestResponse{status=10000, msg='SUCCESS', data=null}]
[01:37:39:557] [DEBUG] - org.springframework.web.servlet.FrameworkServlet.logResult(FrameworkServlet.java:1131) - Completed 200 OK
[01:37:39:559] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417) - imooc_oa_datasource - Pool stats (total=10, active=0, idle=10, waiting=0)
[01:37:44:312] [DEBUG] - org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:91) - POST "/login?username=s7&password=1234", parameters={masked}
[01:37:44:313] [DEBUG] - org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:412) - Mapped to com.wei.oa_spring.controller.UserController#login(String, String, HttpSession)
[01:37:44:319] [DEBUG] - org.mybatis.spring.SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[01:37:44:319] [DEBUG] - org.mybatis.spring.SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@238c897] was not registered for synchronization because synchronization is not active
[01:37:44:320] [DEBUG] - org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:115) - Fetching JDBC Connection from DataSource
[01:37:44:322] [DEBUG] - org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [HikariProxyConnection@218048160 wrapping com.mysql.cj.jdbc.ConnectionImpl@129b4d40] will not be managed by Spring
[01:37:44:322] [DEBUG] - org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: select user_id , username, `password`, employee_id, salt from sys_user where username = ? and password = ? 
[01:37:44:324] [DEBUG] - org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: s7(String), S6h8CwRiXkdyIFUP1rFF1g==(String)
[01:37:44:327] [DEBUG] - org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[01:37:44:328] [DEBUG] - org.mybatis.spring.SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@238c897]
[01:37:44:335] [DEBUG] - org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor.writeWithMessageConverters(AbstractMessageConverterMethodProcessor.java:273) - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
[01:37:44:336] [DEBUG] - org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:91) - Writing [ApiRestResponse{status=10000, msg='SUCCESS', data=com.wei.oa_spring.model.pojo.User@4dc22c9b}]
[01:37:44:337] [DEBUG] - org.springframework.web.servlet.FrameworkServlet.logResult(FrameworkServlet.java:1131) - Completed 200 OK
[01:38:09:561] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417) - imooc_oa_datasource - Pool stats (total=10, active=0, idle=10, waiting=0)
[01:38:39:562] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417) - imooc_oa_datasource - Pool stats (total=10, active=0, idle=10, waiting=0)
[01:38:56:511] [DEBUG] - org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:91) - POST "/leaveForm/create", parameters={}
[01:38:56:512] [DEBUG] - org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:412) - Mapped to com.wei.oa_spring.controller.LeaveFormController#create(CreateLeaveFormReq, HttpSession)
[01:38:56:594] [DEBUG] - org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:91) - Read "application/json;charset=UTF-8" to [com.wei.oa_spring.model.request.CreateLeaveFormReq@7f7eb819]
[01:38:56:735] [DEBUG] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:370) - Creating new transaction with name [com.wei.oa_spring.service.Impl.LeaveFormServiceImpl.createLeaveForm]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
[01:38:56:736] [DEBUG] - org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:265) - Acquired Connection [HikariProxyConnection@528754775 wrapping com.mysql.cj.jdbc.ConnectionImpl@129b4d40] for JDBC transaction
[01:38:56:739] [DEBUG] - org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283) - Switching JDBC Connection [HikariProxyConnection@528754775 wrapping com.mysql.cj.jdbc.ConnectionImpl@129b4d40] to manual commit
[01:38:56:754] [DEBUG] - org.mybatis.spring.SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[01:38:56:755] [DEBUG] - org.mybatis.spring.SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:128) - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1f1c308]
[01:38:56:792] [DEBUG] - org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [HikariProxyConnection@528754775 wrapping com.mysql.cj.jdbc.ConnectionImpl@129b4d40] will be managed by Spring
[01:38:56:793] [DEBUG] - org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: insert into adm_leave_form ( employee_id, form_type, start_time, end_time, reason, create_time, `state` ) values ( ?, ?, ?, ?, ?, ?, ? ) 
[01:38:56:799] [DEBUG] - org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 6(Long), 1(Integer), 1970-01-20 15:29:32.531(Timestamp), 1970-01-20 15:34:32.531(Timestamp), 有事。需要请假一段时间(String), 2023-02-20 01:38:56.753(Timestamp), processing(String)
[01:38:56:810] [DEBUG] - org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==    Updates: 1
[01:38:56:810] [DEBUG] - org.mybatis.spring.SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:186) - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1f1c308]
[01:38:56:811] [DEBUG] - org.mybatis.spring.SqlSessionUtils$SqlSessionSynchronization.beforeCommit(SqlSessionUtils.java:284) - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1f1c308]
[01:38:56:811] [DEBUG] - org.mybatis.spring.SqlSessionUtils$SqlSessionSynchronization.beforeCompletion(SqlSessionUtils.java:310) - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1f1c308]
[01:38:56:811] [DEBUG] - org.mybatis.spring.SqlSessionUtils$SqlSessionSynchronization.beforeCompletion(SqlSessionUtils.java:315) - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1f1c308]
[01:38:56:811] [DEBUG] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:741) - Initiating transaction commit
[01:38:56:811] [DEBUG] - org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:328) - Committing JDBC transaction on Connection [HikariProxyConnection@528754775 wrapping com.mysql.cj.jdbc.ConnectionImpl@129b4d40]
[01:38:56:818] [DEBUG] - org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:387) - Releasing JDBC Connection [HikariProxyConnection@528754775 wrapping com.mysql.cj.jdbc.ConnectionImpl@129b4d40] after transaction
[01:38:56:821] [DEBUG] - org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor.writeWithMessageConverters(AbstractMessageConverterMethodProcessor.java:273) - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
[01:38:56:821] [DEBUG] - org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:91) - Writing [ApiRestResponse{status=10000, msg='SUCCESS', data=null}]
[01:38:56:822] [DEBUG] - org.springframework.web.servlet.FrameworkServlet.logResult(FrameworkServlet.java:1131) - Completed 200 OK
[01:39:09:564] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417) - imooc_oa_datasource - Pool stats (total=10, active=0, idle=10, waiting=0)
[01:39:14:459] [DEBUG] - org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:91) - POST "/leaveForm/audit", parameters={}
[01:39:14:460] [DEBUG] - org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:412) - Mapped to com.wei.oa_spring.controller.LeaveFormController#audit(HttpSession, AuditProcessFlowReq)
[01:39:14:467] [DEBUG] - org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:91) - Read "application/json;charset=UTF-8" to [com.wei.oa_spring.model.request.AuditProcessFlowReq@19efbfdb]
[01:39:14:502] [DEBUG] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:370) - Creating new transaction with name [com.wei.oa_spring.service.Impl.LeaveFormServiceImpl.audit]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
[01:39:14:503] [DEBUG] - org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:265) - Acquired Connection [HikariProxyConnection@1559048834 wrapping com.mysql.cj.jdbc.ConnectionImpl@129b4d40] for JDBC transaction
[01:39:14:504] [DEBUG] - org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283) - Switching JDBC Connection [HikariProxyConnection@1559048834 wrapping com.mysql.cj.jdbc.ConnectionImpl@129b4d40] to manual commit
[01:39:14:507] [DEBUG] - org.mybatis.spring.SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[01:39:14:508] [DEBUG] - org.mybatis.spring.SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:128) - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3cc2cdcd]
[01:39:14:508] [DEBUG] - org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [HikariProxyConnection@1559048834 wrapping com.mysql.cj.jdbc.ConnectionImpl@129b4d40] will be managed by Spring
[01:39:14:509] [DEBUG] - org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: select * from adm_process_flow where form_id = ? order by order_no 
[01:39:14:510] [DEBUG] - org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 37(Long)
[01:39:14:529] [DEBUG] - org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 3
[01:39:14:530] [DEBUG] - org.mybatis.spring.SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:186) - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3cc2cdcd]
[01:39:14:532] [DEBUG] - org.mybatis.spring.SqlSessionUtils$SqlSessionSynchronization.beforeCompletion(SqlSessionUtils.java:310) - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3cc2cdcd]
[01:39:14:533] [DEBUG] - org.mybatis.spring.SqlSessionUtils$SqlSessionSynchronization.beforeCompletion(SqlSessionUtils.java:315) - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3cc2cdcd]
[01:39:14:533] [DEBUG] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:834) - Initiating transaction rollback
[01:39:14:533] [DEBUG] - org.springframework.jdbc.datasource.DataSourceTransactionManager.doRollback(DataSourceTransactionManager.java:343) - Rolling back JDBC transaction on Connection [HikariProxyConnection@1559048834 wrapping com.mysql.cj.jdbc.ConnectionImpl@129b4d40]
[01:39:14:535] [DEBUG] - org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:387) - Releasing JDBC Connection [HikariProxyConnection@1559048834 wrapping com.mysql.cj.jdbc.ConnectionImpl@129b4d40] after transaction
[01:39:14:539] [DEBUG] - org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:398) - Using @ExceptionHandler com.wei.oa_spring.exception.GlobalExceptionHandler#handleImoocMallException(OAException)
[01:39:14:561] [DEBUG] - org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor.writeWithMessageConverters(AbstractMessageConverterMethodProcessor.java:273) - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
[01:39:14:561] [DEBUG] - org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:91) - Writing [ApiRestResponse{status=100015, msg='未找到待处理任务', data=null}]
[01:39:14:562] [DEBUG] - org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:145) - Resolved [com.wei.oa_spring.exception.OAException: 未找到待处理任务]
[01:39:14:562] [DEBUG] - org.springframework.web.servlet.FrameworkServlet.logResult(FrameworkServlet.java:1131) - Completed 200 OK
[01:39:19:694] [DEBUG] - org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:91) - POST "/login?username=m8&password=1234", parameters={masked}
[01:39:19:695] [DEBUG] - org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:412) - Mapped to com.wei.oa_spring.controller.UserController#login(String, String, HttpSession)
[01:39:19:701] [DEBUG] - org.mybatis.spring.SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[01:39:19:702] [DEBUG] - org.mybatis.spring.SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@39de4e40] was not registered for synchronization because synchronization is not active
[01:39:19:703] [DEBUG] - org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:115) - Fetching JDBC Connection from DataSource
[01:39:19:705] [DEBUG] - org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [HikariProxyConnection@1377601092 wrapping com.mysql.cj.jdbc.ConnectionImpl@129b4d40] will not be managed by Spring
[01:39:19:706] [DEBUG] - org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: select user_id , username, `password`, employee_id, salt from sys_user where username = ? and password = ? 
[01:39:19:708] [DEBUG] - org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: m8(String), S6h8CwRiXkdyIFUP1rFF1g==(String)
[01:39:19:711] [DEBUG] - org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[01:39:19:712] [DEBUG] - org.mybatis.spring.SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@39de4e40]
[01:39:19:719] [DEBUG] - org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor.writeWithMessageConverters(AbstractMessageConverterMethodProcessor.java:273) - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
[01:39:19:719] [DEBUG] - org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:91) - Writing [ApiRestResponse{status=10000, msg='SUCCESS', data=com.wei.oa_spring.model.pojo.User@e3e7590}]
[01:39:19:721] [DEBUG] - org.springframework.web.servlet.FrameworkServlet.logResult(FrameworkServlet.java:1131) - Completed 200 OK
[01:39:24:068] [DEBUG] - org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:91) - POST "/leaveForm/audit", parameters={}
[01:39:24:069] [DEBUG] - org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:412) - Mapped to com.wei.oa_spring.controller.LeaveFormController#audit(HttpSession, AuditProcessFlowReq)
[01:39:24:070] [DEBUG] - org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:91) - Read "application/json;charset=UTF-8" to [com.wei.oa_spring.model.request.AuditProcessFlowReq@6eb8bad]
[01:39:24:074] [DEBUG] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:370) - Creating new transaction with name [com.wei.oa_spring.service.Impl.LeaveFormServiceImpl.audit]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
[01:39:24:075] [DEBUG] - org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:265) - Acquired Connection [HikariProxyConnection@1006437794 wrapping com.mysql.cj.jdbc.ConnectionImpl@129b4d40] for JDBC transaction
[01:39:24:076] [DEBUG] - org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283) - Switching JDBC Connection [HikariProxyConnection@1006437794 wrapping com.mysql.cj.jdbc.ConnectionImpl@129b4d40] to manual commit
[01:39:24:077] [DEBUG] - org.mybatis.spring.SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[01:39:24:078] [DEBUG] - org.mybatis.spring.SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:128) - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@18491bd6]
[01:39:24:079] [DEBUG] - org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [HikariProxyConnection@1006437794 wrapping com.mysql.cj.jdbc.ConnectionImpl@129b4d40] will be managed by Spring
[01:39:24:079] [DEBUG] - org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: select * from adm_process_flow where form_id = ? order by order_no 
[01:39:24:080] [DEBUG] - org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 37(Long)
[01:39:24:086] [DEBUG] - org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 3
[01:39:24:087] [DEBUG] - org.mybatis.spring.SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:186) - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@18491bd6]
[01:39:24:088] [DEBUG] - org.mybatis.spring.SqlSessionUtils$SqlSessionSynchronization.beforeCompletion(SqlSessionUtils.java:310) - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@18491bd6]
[01:39:24:088] [DEBUG] - org.mybatis.spring.SqlSessionUtils$SqlSessionSynchronization.beforeCompletion(SqlSessionUtils.java:315) - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@18491bd6]
[01:39:24:088] [DEBUG] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:834) - Initiating transaction rollback
[01:39:24:089] [DEBUG] - org.springframework.jdbc.datasource.DataSourceTransactionManager.doRollback(DataSourceTransactionManager.java:343) - Rolling back JDBC transaction on Connection [HikariProxyConnection@1006437794 wrapping com.mysql.cj.jdbc.ConnectionImpl@129b4d40]
[01:39:24:090] [DEBUG] - org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:387) - Releasing JDBC Connection [HikariProxyConnection@1006437794 wrapping com.mysql.cj.jdbc.ConnectionImpl@129b4d40] after transaction
[01:39:24:091] [DEBUG] - org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:398) - Using @ExceptionHandler com.wei.oa_spring.exception.GlobalExceptionHandler#handleImoocMallException(OAException)
[01:39:24:095] [DEBUG] - org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor.writeWithMessageConverters(AbstractMessageConverterMethodProcessor.java:273) - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
[01:39:24:096] [DEBUG] - org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:91) - Writing [ApiRestResponse{status=100015, msg='未找到待处理任务', data=null}]
[01:39:24:097] [DEBUG] - org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:145) - Resolved [com.wei.oa_spring.exception.OAException: 未找到待处理任务]
[01:39:24:097] [DEBUG] - org.springframework.web.servlet.FrameworkServlet.logResult(FrameworkServlet.java:1131) - Completed 200 OK
[01:39:39:566] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417) - imooc_oa_datasource - Pool stats (total=10, active=0, idle=10, waiting=0)
[01:40:09:567] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417) - imooc_oa_datasource - Pool stats (total=10, active=0, idle=10, waiting=0)
[01:40:39:568] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417) - imooc_oa_datasource - Pool stats (total=10, active=0, idle=10, waiting=0)
[01:41:09:569] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417) - imooc_oa_datasource - Pool stats (total=10, active=0, idle=10, waiting=0)
[01:41:39:570] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417) - imooc_oa_datasource - Pool stats (total=10, active=0, idle=10, waiting=0)
[01:42:09:571] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417) - imooc_oa_datasource - Pool stats (total=10, active=0, idle=10, waiting=0)
[01:42:39:573] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417) - imooc_oa_datasource - Pool stats (total=10, active=0, idle=10, waiting=0)
[01:43:09:574] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417) - imooc_oa_datasource - Pool stats (total=10, active=0, idle=10, waiting=0)
[01:43:39:575] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417) - imooc_oa_datasource - Pool stats (total=10, active=0, idle=10, waiting=0)
[01:44:09:577] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417) - imooc_oa_datasource - Pool stats (total=10, active=0, idle=10, waiting=0)
[01:44:39:579] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417) - imooc_oa_datasource - Pool stats (total=10, active=0, idle=10, waiting=0)
[01:44:41:009] [DEBUG] - org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:91) - POST "/leaveForm/audit", parameters={}
[01:44:41:010] [DEBUG] - org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:412) - Mapped to com.wei.oa_spring.controller.LeaveFormController#audit(HttpSession, AuditProcessFlowReq)
[01:44:41:012] [DEBUG] - org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:91) - Read "application/json;charset=UTF-8" to [com.wei.oa_spring.model.request.AuditProcessFlowReq@9138785]
[01:44:41:016] [DEBUG] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:370) - Creating new transaction with name [com.wei.oa_spring.service.Impl.LeaveFormServiceImpl.audit]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
[01:44:41:018] [DEBUG] - org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:265) - Acquired Connection [HikariProxyConnection@131365079 wrapping com.mysql.cj.jdbc.ConnectionImpl@129b4d40] for JDBC transaction
[01:44:41:018] [DEBUG] - org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283) - Switching JDBC Connection [HikariProxyConnection@131365079 wrapping com.mysql.cj.jdbc.ConnectionImpl@129b4d40] to manual commit
[01:44:41:020] [DEBUG] - org.mybatis.spring.SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[01:44:41:021] [DEBUG] - org.mybatis.spring.SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:128) - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3ebecf5]
[01:44:41:022] [DEBUG] - org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [HikariProxyConnection@131365079 wrapping com.mysql.cj.jdbc.ConnectionImpl@129b4d40] will be managed by Spring
[01:44:41:022] [DEBUG] - org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: select * from adm_process_flow where form_id = ? order by order_no 
[01:44:41:023] [DEBUG] - org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 37(Long)
[01:44:41:030] [DEBUG] - org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 3
[01:44:41:031] [DEBUG] - org.mybatis.spring.SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:186) - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3ebecf5]
[01:44:41:032] [DEBUG] - org.mybatis.spring.SqlSessionUtils$SqlSessionSynchronization.beforeCompletion(SqlSessionUtils.java:310) - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3ebecf5]
[01:44:41:032] [DEBUG] - org.mybatis.spring.SqlSessionUtils$SqlSessionSynchronization.beforeCompletion(SqlSessionUtils.java:315) - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3ebecf5]
[01:44:41:032] [DEBUG] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:834) - Initiating transaction rollback
[01:44:41:033] [DEBUG] - org.springframework.jdbc.datasource.DataSourceTransactionManager.doRollback(DataSourceTransactionManager.java:343) - Rolling back JDBC transaction on Connection [HikariProxyConnection@131365079 wrapping com.mysql.cj.jdbc.ConnectionImpl@129b4d40]
[01:44:41:034] [DEBUG] - org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:387) - Releasing JDBC Connection [HikariProxyConnection@131365079 wrapping com.mysql.cj.jdbc.ConnectionImpl@129b4d40] after transaction
[01:44:41:035] [DEBUG] - org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:398) - Using @ExceptionHandler com.wei.oa_spring.exception.GlobalExceptionHandler#handleImoocMallException(OAException)
[01:44:41:041] [DEBUG] - org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor.writeWithMessageConverters(AbstractMessageConverterMethodProcessor.java:273) - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
[01:44:41:041] [DEBUG] - org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:91) - Writing [ApiRestResponse{status=100015, msg='未找到待处理任务', data=null}]
[01:44:41:043] [DEBUG] - org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:145) - Resolved [com.wei.oa_spring.exception.OAException: 未找到待处理任务]
[01:44:41:043] [DEBUG] - org.springframework.web.servlet.FrameworkServlet.logResult(FrameworkServlet.java:1131) - Completed 200 OK
[01:44:56:370] [DEBUG] - org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:91) - GET "/nodeList", parameters={}
[01:44:56:374] [DEBUG] - org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:412) - Mapped to com.wei.oa_spring.controller.NodeController#getNodeList(HttpSession)
[01:44:56:425] [DEBUG] - org.mybatis.spring.SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[01:44:56:426] [DEBUG] - org.mybatis.spring.SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@75817ba4] was not registered for synchronization because synchronization is not active
[01:44:56:426] [DEBUG] - org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:115) - Fetching JDBC Connection from DataSource
[01:44:56:427] [DEBUG] - org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [HikariProxyConnection@666222405 wrapping com.mysql.cj.jdbc.ConnectionImpl@129b4d40] will not be managed by Spring
[01:44:56:428] [DEBUG] - org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT DISTINCT n.* from sys_role_user ru, sys_role_node rn, sys_node n where ru.role_id = rn.role_id and user_id = ? and rn.node_id = n.node_id ORDER BY n.node_code 
[01:44:56:428] [DEBUG] - org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 1(Long)
[01:44:56:441] [DEBUG] - org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 4
[01:44:56:441] [DEBUG] - org.mybatis.spring.SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@75817ba4]
[01:44:56:471] [DEBUG] - org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor.writeWithMessageConverters(AbstractMessageConverterMethodProcessor.java:273) - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
[01:44:56:471] [DEBUG] - org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:91) - Writing [ApiRestResponse{status=10000, msg='SUCCESS', data=[com.wei.oa_spring.model.pojo.Node@1a86bc4d, com.w (truncated)...]
[01:44:56:475] [DEBUG] - org.springframework.web.servlet.FrameworkServlet.logResult(FrameworkServlet.java:1131) - Completed 200 OK
[01:45:09:581] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417) - imooc_oa_datasource - Pool stats (total=10, active=0, idle=10, waiting=0)
[01:45:10:026] [DEBUG] - org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:91) - GET "/notice/list", parameters={}
[01:45:10:026] [DEBUG] - org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:412) - Mapped to com.wei.oa_spring.controller.NoticeController#getNoticeList(HttpSession)
[01:45:10:036] [DEBUG] - org.mybatis.spring.SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[01:45:10:036] [DEBUG] - org.mybatis.spring.SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1edfba9c] was not registered for synchronization because synchronization is not active
[01:45:10:037] [DEBUG] - org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:115) - Fetching JDBC Connection from DataSource
[01:45:10:038] [DEBUG] - org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [HikariProxyConnection@256156461 wrapping com.mysql.cj.jdbc.ConnectionImpl@129b4d40] will not be managed by Spring
[01:45:10:038] [DEBUG] - org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: select notice_id , receiver_id, content, create_time from sys_notice where receiver_id = ? order by create_time desc limit 0,100 
[01:45:10:039] [DEBUG] - org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 1(Long)
[01:45:10:045] [DEBUG] - org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 6
[01:45:10:046] [DEBUG] - org.mybatis.spring.SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1edfba9c]
[01:45:10:058] [DEBUG] - org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor.writeWithMessageConverters(AbstractMessageConverterMethodProcessor.java:273) - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
[01:45:10:058] [DEBUG] - org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:91) - Writing [ApiRestResponse{status=10000, msg='SUCCESS', data=[com.wei.oa_spring.model.pojo.Notice@3d776f9b, com (truncated)...]
[01:45:10:061] [DEBUG] - org.springframework.web.servlet.FrameworkServlet.logResult(FrameworkServlet.java:1131) - Completed 200 OK
[01:45:39:014] [DEBUG] - org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:91) - GET "/leaveForm/list", parameters={}
[01:45:39:016] [DEBUG] - org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:412) - Mapped to com.wei.oa_spring.controller.LeaveFormController#getLeaveFormList(HttpSession)
[01:45:39:024] [DEBUG] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:370) - Creating new transaction with name [com.wei.oa_spring.service.Impl.LeaveFormServiceImpl.getLeaveFormList]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
[01:45:39:025] [DEBUG] - org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:265) - Acquired Connection [HikariProxyConnection@351118787 wrapping com.mysql.cj.jdbc.ConnectionImpl@129b4d40] for JDBC transaction
[01:45:39:026] [DEBUG] - org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283) - Switching JDBC Connection [HikariProxyConnection@351118787 wrapping com.mysql.cj.jdbc.ConnectionImpl@129b4d40] to manual commit
[01:45:39:030] [DEBUG] - org.mybatis.spring.SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[01:45:39:031] [DEBUG] - org.mybatis.spring.SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:128) - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1a2a592e]
[01:45:39:032] [DEBUG] - org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [HikariProxyConnection@351118787 wrapping com.mysql.cj.jdbc.ConnectionImpl@129b4d40] will be managed by Spring
[01:45:39:032] [DEBUG] - org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT f.*, e.`name`, d.* FROM adm_leave_form f, adm_process_flow pf, adm_employee e, adm_department d WHERE f.form_id = pf.form_id AND f.employee_id = e.employee_id AND e.department_id = d.department_id AND pf.state = ? AND pf.operator_id = ? 
[01:45:39:034] [DEBUG] - org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: process(String), 1(Long)
[01:45:39:041] [DEBUG] - org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 0
[01:45:39:042] [DEBUG] - org.mybatis.spring.SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:186) - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1a2a592e]
[01:45:39:043] [DEBUG] - org.mybatis.spring.SqlSessionUtils$SqlSessionSynchronization.beforeCommit(SqlSessionUtils.java:284) - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1a2a592e]
[01:45:39:043] [DEBUG] - org.mybatis.spring.SqlSessionUtils$SqlSessionSynchronization.beforeCompletion(SqlSessionUtils.java:310) - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1a2a592e]
[01:45:39:044] [DEBUG] - org.mybatis.spring.SqlSessionUtils$SqlSessionSynchronization.beforeCompletion(SqlSessionUtils.java:315) - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1a2a592e]
[01:45:39:044] [DEBUG] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:741) - Initiating transaction commit
[01:45:39:045] [DEBUG] - org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:328) - Committing JDBC transaction on Connection [HikariProxyConnection@351118787 wrapping com.mysql.cj.jdbc.ConnectionImpl@129b4d40]
[01:45:39:047] [DEBUG] - org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:387) - Releasing JDBC Connection [HikariProxyConnection@351118787 wrapping com.mysql.cj.jdbc.ConnectionImpl@129b4d40] after transaction
[01:45:39:052] [DEBUG] - org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor.writeWithMessageConverters(AbstractMessageConverterMethodProcessor.java:273) - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
[01:45:39:053] [DEBUG] - org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:91) - Writing [ApiRestResponse{status=10000, msg='SUCCESS', data=[]}]
[01:45:39:054] [DEBUG] - org.springframework.web.servlet.FrameworkServlet.logResult(FrameworkServlet.java:1131) - Completed 200 OK
[01:45:39:583] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417) - imooc_oa_datasource - Pool stats (total=10, active=0, idle=10, waiting=0)
[01:45:47:277] [DEBUG] - org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:91) - GET "/employee?id=6", parameters={masked}
[01:45:47:281] [DEBUG] - org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:412) - Mapped to ResourceHttpRequestHandler ["classpath:/static/"]
[01:45:47:292] [DEBUG] - org.springframework.web.servlet.resource.ResourceHttpRequestHandler.handleRequest(ResourceHttpRequestHandler.java:454) - Resource not found
[01:45:47:292] [DEBUG] - org.springframework.web.servlet.FrameworkServlet.logResult(FrameworkServlet.java:1131) - Completed 404 NOT_FOUND
[01:45:47:294] [DEBUG] - org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:91) - "ERROR" dispatch for GET "/error?id=6", parameters={masked}
[01:45:47:297] [DEBUG] - org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:412) - Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
[01:45:47:299] [DEBUG] - org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor.writeWithMessageConverters(AbstractMessageConverterMethodProcessor.java:273) - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
[01:45:47:300] [DEBUG] - org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:91) - Writing [{timestamp=Mon Feb 20 01:45:47 CST 2023, status=404, error=Not Found, message=No message available,  (truncated)...]
[01:45:47:302] [DEBUG] - org.springframework.web.servlet.FrameworkServlet.logResult(FrameworkServlet.java:1127) - Exiting from "ERROR" dispatch, status 404
[01:46:09:585] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417) - imooc_oa_datasource - Pool stats (total=10, active=0, idle=10, waiting=0)
[01:46:39:585] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417) - imooc_oa_datasource - Pool stats (total=10, active=0, idle=10, waiting=0)
[01:47:03:224] [DEBUG] - org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:91) - POST "/login?username=t7&password=1234", parameters={masked}
[01:47:03:225] [DEBUG] - org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:412) - Mapped to com.wei.oa_spring.controller.UserController#login(String, String, HttpSession)
[01:47:03:245] [DEBUG] - org.mybatis.spring.SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[01:47:03:246] [DEBUG] - org.mybatis.spring.SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@44b41e11] was not registered for synchronization because synchronization is not active
[01:47:03:247] [DEBUG] - org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:115) - Fetching JDBC Connection from DataSource
[01:47:03:249] [DEBUG] - org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [HikariProxyConnection@51922062 wrapping com.mysql.cj.jdbc.ConnectionImpl@129b4d40] will not be managed by Spring
[01:47:03:250] [DEBUG] - org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: select user_id , username, `password`, employee_id, salt from sys_user where username = ? and password = ? 
[01:47:03:251] [DEBUG] - org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: t7(String), S6h8CwRiXkdyIFUP1rFF1g==(String)
[01:47:03:254] [DEBUG] - org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[01:47:03:255] [DEBUG] - org.mybatis.spring.SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@44b41e11]
[01:47:03:260] [DEBUG] - org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor.writeWithMessageConverters(AbstractMessageConverterMethodProcessor.java:273) - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
[01:47:03:260] [DEBUG] - org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:91) - Writing [ApiRestResponse{status=10000, msg='SUCCESS', data=com.wei.oa_spring.model.pojo.User@696a625a}]
[01:47:03:262] [DEBUG] - org.springframework.web.servlet.FrameworkServlet.logResult(FrameworkServlet.java:1131) - Completed 200 OK
[01:47:09:586] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417) - imooc_oa_datasource - Pool stats (total=10, active=0, idle=10, waiting=0)
[01:47:14:474] [DEBUG] - org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:91) - GET "/leaveForm/list", parameters={}
[01:47:14:476] [DEBUG] - org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:412) - Mapped to com.wei.oa_spring.controller.LeaveFormController#getLeaveFormList(HttpSession)
[01:47:14:480] [DEBUG] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:370) - Creating new transaction with name [com.wei.oa_spring.service.Impl.LeaveFormServiceImpl.getLeaveFormList]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
[01:47:14:481] [DEBUG] - org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:265) - Acquired Connection [HikariProxyConnection@1959214072 wrapping com.mysql.cj.jdbc.ConnectionImpl@129b4d40] for JDBC transaction
[01:47:14:482] [DEBUG] - org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283) - Switching JDBC Connection [HikariProxyConnection@1959214072 wrapping com.mysql.cj.jdbc.ConnectionImpl@129b4d40] to manual commit
[01:47:14:483] [DEBUG] - org.mybatis.spring.SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[01:47:14:484] [DEBUG] - org.mybatis.spring.SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:128) - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@da08410]
[01:47:14:485] [DEBUG] - org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [HikariProxyConnection@1959214072 wrapping com.mysql.cj.jdbc.ConnectionImpl@129b4d40] will be managed by Spring
[01:47:14:485] [DEBUG] - org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT f.*, e.`name`, d.* FROM adm_leave_form f, adm_process_flow pf, adm_employee e, adm_department d WHERE f.form_id = pf.form_id AND f.employee_id = e.employee_id AND e.department_id = d.department_id AND pf.state = ? AND pf.operator_id = ? 
[01:47:14:486] [DEBUG] - org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: process(String), 2(Long)
[01:47:14:488] [DEBUG] - org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 0
[01:47:14:490] [DEBUG] - org.mybatis.spring.SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:186) - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@da08410]
[01:47:14:490] [DEBUG] - org.mybatis.spring.SqlSessionUtils$SqlSessionSynchronization.beforeCommit(SqlSessionUtils.java:284) - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@da08410]
[01:47:14:491] [DEBUG] - org.mybatis.spring.SqlSessionUtils$SqlSessionSynchronization.beforeCompletion(SqlSessionUtils.java:310) - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@da08410]
[01:47:14:492] [DEBUG] - org.mybatis.spring.SqlSessionUtils$SqlSessionSynchronization.beforeCompletion(SqlSessionUtils.java:315) - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@da08410]
[01:47:14:492] [DEBUG] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:741) - Initiating transaction commit
[01:47:14:493] [DEBUG] - org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:328) - Committing JDBC transaction on Connection [HikariProxyConnection@1959214072 wrapping com.mysql.cj.jdbc.ConnectionImpl@129b4d40]
[01:47:14:495] [DEBUG] - org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:387) - Releasing JDBC Connection [HikariProxyConnection@1959214072 wrapping com.mysql.cj.jdbc.ConnectionImpl@129b4d40] after transaction
[01:47:14:501] [DEBUG] - org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor.writeWithMessageConverters(AbstractMessageConverterMethodProcessor.java:273) - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
[01:47:14:501] [DEBUG] - org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:91) - Writing [ApiRestResponse{status=10000, msg='SUCCESS', data=[]}]
[01:47:14:503] [DEBUG] - org.springframework.web.servlet.FrameworkServlet.logResult(FrameworkServlet.java:1131) - Completed 200 OK
[01:47:27:039] [DEBUG] - org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:91) - POST "/leaveForm/audit", parameters={}
[01:47:27:040] [DEBUG] - org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:412) - Mapped to com.wei.oa_spring.controller.LeaveFormController#audit(HttpSession, AuditProcessFlowReq)
[01:47:27:042] [DEBUG] - org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:91) - Read "application/json;charset=UTF-8" to [com.wei.oa_spring.model.request.AuditProcessFlowReq@241e0157]
[01:47:27:047] [DEBUG] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:370) - Creating new transaction with name [com.wei.oa_spring.service.Impl.LeaveFormServiceImpl.audit]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
[01:47:27:048] [DEBUG] - org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:265) - Acquired Connection [HikariProxyConnection@1272855519 wrapping com.mysql.cj.jdbc.ConnectionImpl@129b4d40] for JDBC transaction
[01:47:27:049] [DEBUG] - org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283) - Switching JDBC Connection [HikariProxyConnection@1272855519 wrapping com.mysql.cj.jdbc.ConnectionImpl@129b4d40] to manual commit
[01:47:27:050] [DEBUG] - org.mybatis.spring.SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[01:47:27:051] [DEBUG] - org.mybatis.spring.SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:128) - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@197d4c21]
[01:47:27:051] [DEBUG] - org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [HikariProxyConnection@1272855519 wrapping com.mysql.cj.jdbc.ConnectionImpl@129b4d40] will be managed by Spring
[01:47:27:051] [DEBUG] - org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: select * from adm_process_flow where form_id = ? order by order_no 
[01:47:27:052] [DEBUG] - org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 37(Long)
[01:47:27:059] [DEBUG] - org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 3
[01:47:27:060] [DEBUG] - org.mybatis.spring.SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:186) - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@197d4c21]
[01:47:27:060] [DEBUG] - org.mybatis.spring.SqlSessionUtils$SqlSessionSynchronization.beforeCompletion(SqlSessionUtils.java:310) - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@197d4c21]
[01:47:27:061] [DEBUG] - org.mybatis.spring.SqlSessionUtils$SqlSessionSynchronization.beforeCompletion(SqlSessionUtils.java:315) - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@197d4c21]
[01:47:27:061] [DEBUG] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:834) - Initiating transaction rollback
[01:47:27:061] [DEBUG] - org.springframework.jdbc.datasource.DataSourceTransactionManager.doRollback(DataSourceTransactionManager.java:343) - Rolling back JDBC transaction on Connection [HikariProxyConnection@1272855519 wrapping com.mysql.cj.jdbc.ConnectionImpl@129b4d40]
[01:47:27:063] [DEBUG] - org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:387) - Releasing JDBC Connection [HikariProxyConnection@1272855519 wrapping com.mysql.cj.jdbc.ConnectionImpl@129b4d40] after transaction
[01:47:27:063] [DEBUG] - org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:398) - Using @ExceptionHandler com.wei.oa_spring.exception.GlobalExceptionHandler#handleImoocMallException(OAException)
[01:47:27:070] [DEBUG] - org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor.writeWithMessageConverters(AbstractMessageConverterMethodProcessor.java:273) - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
[01:47:27:070] [DEBUG] - org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:91) - Writing [ApiRestResponse{status=100015, msg='未找到待处理任务', data=null}]
[01:47:27:071] [DEBUG] - org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:145) - Resolved [com.wei.oa_spring.exception.OAException: 未找到待处理任务]
[01:47:27:071] [DEBUG] - org.springframework.web.servlet.FrameworkServlet.logResult(FrameworkServlet.java:1131) - Completed 200 OK
[01:47:39:587] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417) - imooc_oa_datasource - Pool stats (total=10, active=0, idle=10, waiting=0)
[01:48:09:589] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417) - imooc_oa_datasource - Pool stats (total=10, active=0, idle=10, waiting=0)
[01:48:39:590] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417) - imooc_oa_datasource - Pool stats (total=10, active=0, idle=10, waiting=0)
[01:49:06:051] [DEBUG] - org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:91) - POST "/leaveForm/create", parameters={}
[01:49:06:051] [DEBUG] - org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:412) - Mapped to com.wei.oa_spring.controller.LeaveFormController#create(CreateLeaveFormReq, HttpSession)
[01:49:06:054] [DEBUG] - org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:91) - Read "application/json;charset=UTF-8" to [com.wei.oa_spring.model.request.CreateLeaveFormReq@1a1f3752]
[01:49:06:062] [DEBUG] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:370) - Creating new transaction with name [com.wei.oa_spring.service.Impl.LeaveFormServiceImpl.createLeaveForm]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
[01:49:06:063] [DEBUG] - org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:265) - Acquired Connection [HikariProxyConnection@1761235151 wrapping com.mysql.cj.jdbc.ConnectionImpl@129b4d40] for JDBC transaction
[01:49:06:063] [DEBUG] - org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283) - Switching JDBC Connection [HikariProxyConnection@1761235151 wrapping com.mysql.cj.jdbc.ConnectionImpl@129b4d40] to manual commit
[01:49:06:066] [DEBUG] - org.mybatis.spring.SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[01:49:06:068] [DEBUG] - org.mybatis.spring.SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:128) - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@bbc4f25]
[01:49:06:072] [DEBUG] - org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [HikariProxyConnection@1761235151 wrapping com.mysql.cj.jdbc.ConnectionImpl@129b4d40] will be managed by Spring
[01:49:06:074] [DEBUG] - org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: insert into adm_leave_form ( employee_id, form_type, start_time, end_time, reason, create_time, `state` ) values ( ?, ?, ?, ?, ?, ?, ? ) 
[01:49:06:078] [DEBUG] - org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 2(Long), 1(Integer), 1970-01-20 17:47:08.602(Timestamp), 1970-01-20 17:53:52.028(Timestamp), 有事。需要请假一段时间。我是老齐(String), 2023-02-20 01:49:06.066(Timestamp), processing(String)
[01:49:06:086] [DEBUG] - org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==    Updates: 1
[01:49:06:087] [DEBUG] - org.mybatis.spring.SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:186) - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@bbc4f25]
[01:49:06:087] [DEBUG] - org.mybatis.spring.SqlSessionUtils$SqlSessionSynchronization.beforeCommit(SqlSessionUtils.java:284) - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@bbc4f25]
[01:49:06:089] [DEBUG] - org.mybatis.spring.SqlSessionUtils$SqlSessionSynchronization.beforeCompletion(SqlSessionUtils.java:310) - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@bbc4f25]
[01:49:06:089] [DEBUG] - org.mybatis.spring.SqlSessionUtils$SqlSessionSynchronization.beforeCompletion(SqlSessionUtils.java:315) - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@bbc4f25]
[01:49:06:089] [DEBUG] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:741) - Initiating transaction commit
[01:49:06:090] [DEBUG] - org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:328) - Committing JDBC transaction on Connection [HikariProxyConnection@1761235151 wrapping com.mysql.cj.jdbc.ConnectionImpl@129b4d40]
[01:49:06:092] [DEBUG] - org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:387) - Releasing JDBC Connection [HikariProxyConnection@1761235151 wrapping com.mysql.cj.jdbc.ConnectionImpl@129b4d40] after transaction
[01:49:06:096] [DEBUG] - org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor.writeWithMessageConverters(AbstractMessageConverterMethodProcessor.java:273) - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
[01:49:06:096] [DEBUG] - org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:91) - Writing [ApiRestResponse{status=10000, msg='SUCCESS', data=null}]
[01:49:06:098] [DEBUG] - org.springframework.web.servlet.FrameworkServlet.logResult(FrameworkServlet.java:1131) - Completed 200 OK
[01:49:09:592] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417) - imooc_oa_datasource - Pool stats (total=10, active=0, idle=10, waiting=0)
[01:49:36:898] [DEBUG] - org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:91) - POST "/login?username=m8&password=1234", parameters={masked}
[01:49:36:900] [DEBUG] - org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:412) - Mapped to com.wei.oa_spring.controller.UserController#login(String, String, HttpSession)
[01:49:36:904] [DEBUG] - org.mybatis.spring.SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[01:49:36:906] [DEBUG] - org.mybatis.spring.SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3b38ac5a] was not registered for synchronization because synchronization is not active
[01:49:36:907] [DEBUG] - org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:115) - Fetching JDBC Connection from DataSource
[01:49:36:908] [DEBUG] - org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [HikariProxyConnection@1894697034 wrapping com.mysql.cj.jdbc.ConnectionImpl@129b4d40] will not be managed by Spring
[01:49:36:909] [DEBUG] - org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: select user_id , username, `password`, employee_id, salt from sys_user where username = ? and password = ? 
[01:49:36:912] [DEBUG] - org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: m8(String), S6h8CwRiXkdyIFUP1rFF1g==(String)
[01:49:36:915] [DEBUG] - org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[01:49:36:920] [DEBUG] - org.mybatis.spring.SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3b38ac5a]
[01:49:36:928] [DEBUG] - org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor.writeWithMessageConverters(AbstractMessageConverterMethodProcessor.java:273) - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
[01:49:36:929] [DEBUG] - org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:91) - Writing [ApiRestResponse{status=10000, msg='SUCCESS', data=com.wei.oa_spring.model.pojo.User@76982c64}]
[01:49:36:930] [DEBUG] - org.springframework.web.servlet.FrameworkServlet.logResult(FrameworkServlet.java:1131) - Completed 200 OK
[01:49:39:593] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417) - imooc_oa_datasource - Pool stats (total=10, active=0, idle=10, waiting=0)
[01:49:40:540] [DEBUG] - org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:91) - GET "/leaveForm/list", parameters={}
[01:49:40:541] [DEBUG] - org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:412) - Mapped to com.wei.oa_spring.controller.LeaveFormController#getLeaveFormList(HttpSession)
[01:49:40:548] [DEBUG] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:370) - Creating new transaction with name [com.wei.oa_spring.service.Impl.LeaveFormServiceImpl.getLeaveFormList]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
[01:49:40:549] [DEBUG] - org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:265) - Acquired Connection [HikariProxyConnection@197046953 wrapping com.mysql.cj.jdbc.ConnectionImpl@129b4d40] for JDBC transaction
[01:49:40:550] [DEBUG] - org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283) - Switching JDBC Connection [HikariProxyConnection@197046953 wrapping com.mysql.cj.jdbc.ConnectionImpl@129b4d40] to manual commit
[01:49:40:551] [DEBUG] - org.mybatis.spring.SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[01:49:40:552] [DEBUG] - org.mybatis.spring.SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:128) - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@73fbb9db]
[01:49:40:553] [DEBUG] - org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [HikariProxyConnection@197046953 wrapping com.mysql.cj.jdbc.ConnectionImpl@129b4d40] will be managed by Spring
[01:49:40:554] [DEBUG] - org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT f.*, e.`name`, d.* FROM adm_leave_form f, adm_process_flow pf, adm_employee e, adm_department d WHERE f.form_id = pf.form_id AND f.employee_id = e.employee_id AND e.department_id = d.department_id AND pf.state = ? AND pf.operator_id = ? 
[01:49:40:556] [DEBUG] - org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: process(String), 1(Long)
[01:49:40:560] [DEBUG] - org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 0
[01:49:40:561] [DEBUG] - org.mybatis.spring.SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:186) - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@73fbb9db]
[01:49:40:562] [DEBUG] - org.mybatis.spring.SqlSessionUtils$SqlSessionSynchronization.beforeCommit(SqlSessionUtils.java:284) - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@73fbb9db]
[01:49:40:563] [DEBUG] - org.mybatis.spring.SqlSessionUtils$SqlSessionSynchronization.beforeCompletion(SqlSessionUtils.java:310) - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@73fbb9db]
[01:49:40:563] [DEBUG] - org.mybatis.spring.SqlSessionUtils$SqlSessionSynchronization.beforeCompletion(SqlSessionUtils.java:315) - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@73fbb9db]
[01:49:40:564] [DEBUG] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:741) - Initiating transaction commit
[01:49:40:564] [DEBUG] - org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:328) - Committing JDBC transaction on Connection [HikariProxyConnection@197046953 wrapping com.mysql.cj.jdbc.ConnectionImpl@129b4d40]
[01:49:40:566] [DEBUG] - org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:387) - Releasing JDBC Connection [HikariProxyConnection@197046953 wrapping com.mysql.cj.jdbc.ConnectionImpl@129b4d40] after transaction
[01:49:40:571] [DEBUG] - org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor.writeWithMessageConverters(AbstractMessageConverterMethodProcessor.java:273) - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
[01:49:40:571] [DEBUG] - org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:91) - Writing [ApiRestResponse{status=10000, msg='SUCCESS', data=[]}]
[01:49:40:573] [DEBUG] - org.springframework.web.servlet.FrameworkServlet.logResult(FrameworkServlet.java:1131) - Completed 200 OK
[01:49:43:583] [DEBUG] - org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:91) - POST "/leaveForm/audit", parameters={}
[01:49:43:584] [DEBUG] - org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:412) - Mapped to com.wei.oa_spring.controller.LeaveFormController#audit(HttpSession, AuditProcessFlowReq)
[01:49:43:586] [DEBUG] - org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:91) - Read "application/json;charset=UTF-8" to [com.wei.oa_spring.model.request.AuditProcessFlowReq@71c7ddd6]
[01:49:43:591] [DEBUG] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:370) - Creating new transaction with name [com.wei.oa_spring.service.Impl.LeaveFormServiceImpl.audit]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
[01:49:43:593] [DEBUG] - org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:265) - Acquired Connection [HikariProxyConnection@195753480 wrapping com.mysql.cj.jdbc.ConnectionImpl@129b4d40] for JDBC transaction
[01:49:43:594] [DEBUG] - org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283) - Switching JDBC Connection [HikariProxyConnection@195753480 wrapping com.mysql.cj.jdbc.ConnectionImpl@129b4d40] to manual commit
[01:49:43:595] [DEBUG] - org.mybatis.spring.SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[01:49:43:596] [DEBUG] - org.mybatis.spring.SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:128) - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@e8a3b7a]
[01:49:43:597] [DEBUG] - org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [HikariProxyConnection@195753480 wrapping com.mysql.cj.jdbc.ConnectionImpl@129b4d40] will be managed by Spring
[01:49:43:598] [DEBUG] - org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: select * from adm_process_flow where form_id = ? order by order_no 
[01:49:43:599] [DEBUG] - org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 37(Long)
[01:49:43:606] [DEBUG] - org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 3
[01:49:43:609] [DEBUG] - org.mybatis.spring.SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:186) - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@e8a3b7a]
[01:49:43:609] [DEBUG] - org.mybatis.spring.SqlSessionUtils$SqlSessionSynchronization.beforeCompletion(SqlSessionUtils.java:310) - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@e8a3b7a]
[01:49:43:610] [DEBUG] - org.mybatis.spring.SqlSessionUtils$SqlSessionSynchronization.beforeCompletion(SqlSessionUtils.java:315) - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@e8a3b7a]
[01:49:43:610] [DEBUG] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:834) - Initiating transaction rollback
[01:49:43:611] [DEBUG] - org.springframework.jdbc.datasource.DataSourceTransactionManager.doRollback(DataSourceTransactionManager.java:343) - Rolling back JDBC transaction on Connection [HikariProxyConnection@195753480 wrapping com.mysql.cj.jdbc.ConnectionImpl@129b4d40]
[01:49:43:612] [DEBUG] - org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:387) - Releasing JDBC Connection [HikariProxyConnection@195753480 wrapping com.mysql.cj.jdbc.ConnectionImpl@129b4d40] after transaction
[01:49:43:613] [DEBUG] - org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:398) - Using @ExceptionHandler com.wei.oa_spring.exception.GlobalExceptionHandler#handleImoocMallException(OAException)
[01:49:43:616] [DEBUG] - org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor.writeWithMessageConverters(AbstractMessageConverterMethodProcessor.java:273) - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
[01:49:43:617] [DEBUG] - org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:91) - Writing [ApiRestResponse{status=100015, msg='未找到待处理任务', data=null}]
[01:49:43:619] [DEBUG] - org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:145) - Resolved [com.wei.oa_spring.exception.OAException: 未找到待处理任务]
[01:49:43:619] [DEBUG] - org.springframework.web.servlet.FrameworkServlet.logResult(FrameworkServlet.java:1131) - Completed 200 OK
[01:50:09:594] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417) - imooc_oa_datasource - Pool stats (total=10, active=0, idle=10, waiting=0)
[01:50:35:132] [DEBUG] - org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1005) - Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@64df9a61, started on Mon Feb 20 01:34:43 CST 2023
[01:50:35:134] [DEBUG] - org.springframework.core.env.PropertySourcesPropertyResolver.logKeyFound(PropertySourcesPropertyResolver.java:115) - Found key 'spring.liveBeansView.mbeanDomain' in PropertySource 'systemProperties' with value of type String
[01:50:35:157] [DEBUG] - org.springframework.data.redis.listener.RedisMessageListenerContainer.stop(RedisMessageListenerContainer.java:229) - Stopped RedisMessageListenerContainer
[01:50:35:159] [DEBUG] - org.springframework.jmx.export.MBeanExporter.destroy(MBeanExporter.java:452) - Unregistering JMX-exposed beans on shutdown
[01:50:35:161] [DEBUG] - org.springframework.jmx.support.MBeanRegistrationSupport.unregisterBeans(MBeanRegistrationSupport.java:186) - Unregistering JMX-exposed beans
[01:50:35:186] [DEBUG] - io.lettuce.core.AbstractRedisClient.shutdownAsync(AbstractRedisClient.java:436) - Initiate shutdown (100, 100, MILLISECONDS)
[01:50:35:234] [DEBUG] - io.lettuce.core.resource.DefaultClientResources.shutdown(DefaultClientResources.java:601) - Initiate shutdown (0, 2, SECONDS)
[01:50:35:237] [DEBUG] - io.lettuce.core.resource.DefaultEventLoopGroupProvider.shutdown(DefaultEventLoopGroupProvider.java:202) - Initiate shutdown (0, 2, SECONDS)
[01:50:35:256] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417) - imooc_oa_datasource - Before shutdown stats (total=10, active=0, idle=10, waiting=0)
[01:50:35:260] [DEBUG] - com.zaxxer.hikari.pool.PoolBase.quietlyCloseConnection(PoolBase.java:129) - imooc_oa_datasource - Closing connection com.mysql.cj.jdbc.ConnectionImpl@129b4d40: (connection evicted)
[01:50:35:266] [DEBUG] - com.zaxxer.hikari.pool.PoolBase.quietlyCloseConnection(PoolBase.java:129) - imooc_oa_datasource - Closing connection com.mysql.cj.jdbc.ConnectionImpl@4505bc: (connection evicted)
[01:50:35:267] [DEBUG] - com.zaxxer.hikari.pool.PoolBase.quietlyCloseConnection(PoolBase.java:129) - imooc_oa_datasource - Closing connection com.mysql.cj.jdbc.ConnectionImpl@74c87e15: (connection evicted)
[01:50:35:269] [DEBUG] - com.zaxxer.hikari.pool.PoolBase.quietlyCloseConnection(PoolBase.java:129) - imooc_oa_datasource - Closing connection com.mysql.cj.jdbc.ConnectionImpl@6b7eae1e: (connection evicted)
[01:50:35:271] [DEBUG] - com.zaxxer.hikari.pool.PoolBase.quietlyCloseConnection(PoolBase.java:129) - imooc_oa_datasource - Closing connection com.mysql.cj.jdbc.ConnectionImpl@21263d5e: (connection evicted)
[01:50:35:272] [DEBUG] - com.zaxxer.hikari.pool.PoolBase.quietlyCloseConnection(PoolBase.java:129) - imooc_oa_datasource - Closing connection com.mysql.cj.jdbc.ConnectionImpl@497d1625: (connection evicted)
[01:50:35:274] [DEBUG] - com.zaxxer.hikari.pool.PoolBase.quietlyCloseConnection(PoolBase.java:129) - imooc_oa_datasource - Closing connection com.mysql.cj.jdbc.ConnectionImpl@595fff90: (connection evicted)
[01:50:35:276] [DEBUG] - com.zaxxer.hikari.pool.PoolBase.quietlyCloseConnection(PoolBase.java:129) - imooc_oa_datasource - Closing connection com.mysql.cj.jdbc.ConnectionImpl@24d43ecb: (connection evicted)
[01:50:35:278] [DEBUG] - com.zaxxer.hikari.pool.PoolBase.quietlyCloseConnection(PoolBase.java:129) - imooc_oa_datasource - Closing connection com.mysql.cj.jdbc.ConnectionImpl@352c83f0: (connection evicted)
[01:50:35:279] [DEBUG] - com.zaxxer.hikari.pool.PoolBase.quietlyCloseConnection(PoolBase.java:129) - imooc_oa_datasource - Closing connection com.mysql.cj.jdbc.ConnectionImpl@62e017bb: (connection evicted)
[01:50:35:280] [DEBUG] - com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417) - imooc_oa_datasource - After shutdown stats (total=0, active=0, idle=0, waiting=0)

<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        https://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        https://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd">

    <bean id="userDao" class="com.imooc.spring.aop.dao.UserDao"></bean>
    <bean id="employeeDao" class="com.imooc.spring.aop.dao.EmployeeDao"></bean>

    <bean id="userService" class="com.imooc.spring.aop.service.UserService">
        <property name="userDao" ref="userDao"></property>
    </bean>
    <bean id="employeeService" class="com.imooc.spring.aop.service.EmployeeService">
        <property name="employeeDao" ref="employeeDao"></property>
    </bean>

    <!--AOP配置 (作为AOP底层运行也是要在ioc容器中的，所以这里要定义一个bean，让ioc容器去实例化这个方法MethodAspect)-->
    <bean id="methodAspect" class="com.imooc.spring.aop.aspect.MethodAspect"></bean>
    <aop:config>
        <!-- pointcut 切点，使用execution表达式描述切面的作用范围 -->
        <!-- execution(public * com.imooc..*.*(..)) 说明切面作用在com.imooc包下的所有类的所有方法上-->
        <!--        <aop:pointcut id="pointcut" expression="execution(public * com.imooc..*.*(..))"/>-->
        <!--        只对所有Service类生效-->
        <aop:pointcut id="pointcut" expression="execution(* com.imooc..*Service.*(..))"/>
        <!--        只对没有返回值的void类生效-->
        <!--        <aop:pointcut id="pointcut" expression="execution(void com.imooc..*Service.*(..))"/>-->
        <!--        只对create开头的方法进行捕获-->
        <!--        <aop:pointcut id="pointcut" expression="execution(* com.imooc..*Service.create*(..))"/>-->
        <!--        只对无参数的方法进行捕获-->
        <!--        <aop:pointcut id="pointcut" expression="execution(* com.imooc..*Service.*())"/>-->
        <!--        只对两个参数的方法进行捕获-->
        <!--        <aop:pointcut id="pointcut" expression="execution(* com.imooc..*Service.*(*,*))"/>-->
        <!--        对两个参数并且第一个参数是String类型的方法进行捕获-->
        <!--        <aop:pointcut id="pointcut" expression="execution(* com.imooc..*Service.*(String,*))"/>-->
        <!-- 定义切面类-->
        <aop:aspect ref="methodAspect">
            <!-- before通知(Advice)，代表在目标方法运行前先执行methodAspect.printExecutionTime()方法 前置通知-->
            <!--下方打印日志的前后顺序和配置的前后顺序是保持一致的-->
            <aop:before method="printExecutionTime" pointcut-ref="pointcut"></aop:before>
            <aop:after method="doAfter" pointcut-ref="pointcut"></aop:after>
            <aop:after-returning method="doAfterReturning" returning="ret"
                                 pointcut-ref="pointcut"></aop:after-returning>
            <aop:after-throwing method="daAfterThrowing" pointcut-ref="pointcut" throwing="th"></aop:after-throwing>

        </aop:aspect>
    </aop:config>
</beans>

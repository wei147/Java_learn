<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.wei</groupId>
    <artifactId>restful</artifactId>
    <version>1.0-SNAPSHOT</version>

    <repositories>
        <repository>
            <id>aliun</id>
            <name>aliyun</name>
            <url>https://maven.aliyun.com/repository/public</url>
        </repository>
    </repositories>

    <dependencies>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-webmvc</artifactId>
            <version>5.2.0.RELEASE</version>
        </dependency>


        <!--jackson不能独立运行，需要另外两个依赖-->
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-core</artifactId>
            <version>2.12.0</version>
            <!--            <type>bundle</type>-->
        </dependency>

        <dependency>
            <!--databind代表数据绑定的意思。这个才是jackson与目标对象进行交互的根源所在-->
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>2.12.0</version>
        </dependency>
        <dependency>
            <!--jackson注解-->
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-annotations</artifactId>
            <version>2.12.0</version>
        </dependency>

        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
            <version>3.1.0</version>
            <!--为什么要加scope标签？ 原因是作为我们最终的tomcat运行环境，
            我们都知道它是自带servlet-api这个jar包的。如果在我们程序打包发布的时候，
            将当前的依赖也放入war包中，这可能会造成我们当前工程中servlet-api与自带的api版本冲突，
            这样会给我们程序增加不少风险。所以这里使用了 provided，含义是只有在开发、编译它才会进行引用。
            当进行打包，最终使用的时候这个jar会被排除在外-->
            <scope>provided</scope>
        </dependency>

        <!--logback 日志组件，将其引入以后，SpringMVC默认就可以使用logback对日志进行输出-->
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>1.2.3</version>
        </dependency>
    </dependencies>


    <properties>
        <maven.compiler.source>8</maven.compiler.source>
        <maven.compiler.target>8</maven.compiler.target>
    </properties>

</project>
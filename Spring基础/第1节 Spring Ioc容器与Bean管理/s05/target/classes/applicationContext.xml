<?xml version="1.0" encoding="UTF-8"?>
<!--Spring ioc的核心配置文件。所有对象的创建以及关联的设置都是在这个xml中来进行的 -->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        https://www.springframework.org/schema/beans/spring-beans.xsd">

    <!--    scope默认是单例模式。单例模式有一个典型特点：对于当前的bean来说是在ioc容器初始化过程中就会将这个对象进行创建
            prototype 多例模式，prototype创建对象的时机并不在ioc容器初始化的时候，取而代之的是在获取bean的时候

            如果在单例模式下，ioc容器初始化对象时确实是按照bean的前后顺序依次进行的，如果增加了 scope="prototype" 在某一个属性在关联
            到一个多例对象时同样会触发实例化操作
            作为某一个属性在运行过程中是，它恒定不变的，那就可以在目前容器中进行单例的设置。反之，多例
    -->
    <bean id="userDao" class="com.imooc.spring.ioc.dao.UserDao" scope="prototype"></bean>
    <bean id="userService" class="com.imooc.spring.ioc.service.UserService" scope="prototype">
        <property name="userDao" ref="userDao"></property>
    </bean>

    <!--利用了init-method是在设置完属性以后再去执行的特点来完成total属性的计算-->
    <bean id="order1" class="com.imooc.spring.ioc.entity.Order" init-method="init" destroy-method="destroy">
        <property name="price" value="9.9"></property>
        <property name="quantity" value="1000"></property>
        <property name="total" value="88"></property>
    </bean>
</beans>